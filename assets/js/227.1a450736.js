(window.webpackJsonp=window.webpackJsonp||[]).push([[227],{719:function(e,n,s){"use strict";s.r(n);var t=s(6),a=Object(t.a)({},(function(){var e=this.$createElement,n=this._self._c||e;return n("ContentSlotsDistributor",{attrs:{"slot-key":this.$parent.slotKey}},[n("h2",{attrs:{id:"使用myeclipse建立maven项目"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#使用myeclipse建立maven项目"}},[this._v("#")]),this._v(" 使用MyEclipse建立maven项目")]),this._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[this._v("前面用手动方式写出了一个 HelloWorld，可是太麻烦。命令不好记。用 MyEclipse 编代码多好呀，哪里出现问题，哪里就提示错误；对于不记得的 API，也能随时提供帮助。\n\n所以能不能将对 Maven 的操作同 MyEclipse 结合起来，在 MyEclipse 上用图形化界面和菜单式命令，协作完成对 Maven 的操作呢？\n\n有需求就有市场，有市场就有人解决，而且 MyEclipse 本身就是一个开源工具，能很好地集成第三方的插件。\n\n有了这些前提，M2Eclipse 就出来了。启动 MyEcplise，单击菜单栏中的 Window→Preferences 选项，打开 Preferences 窗口，\n\n该版本的 MyEclipse 里内置了 Maven，也就是 M2Eclipse 插件，就没必要再下载 M2Eclipse 插件，只要进行配置就可以使用 Maven 了。使用 MyEcplise 创建 Maven 步骤如下：\n\n1）展开 Maven 选项，选中其中的 Installations，\n\n右边显示的是当前 MyEclipse 内置的 Maven。为了整合前面安装的最新 Maven，继续下面的步骤。\n\n2）单击图 2 右边的Add按钮，弹出 New Maven Runtime 窗口，选择安装的 Maven，\n\n在 Installation home 后面选择以前安装的 Maven 目录，单击 Finish 按钮，回到 Preferences 窗口，并且选中刚添加的 Maven。保险起见，单击 Preferences 窗口中的 Apply 按钮，保存刚才的操作。\n\n3）选中 Preferences 中 Maven 里面的 User Settings，\n\n在 Global Settings 框中选择 settings.xml。在 User Settings 框中选择登录用户目录下的 settings.xml。一般会默认显示，如果不正常，请手动选择。\n\n单击 Apply and close 按钮完成设置。\n\n4）选择 MyEclipse 中的 File→New→Others 命令。\n\n5）选择 Maven Project，单击 Next 按钮，打开 New Maven Project 窗口，继续单击 Next 按钮，\n\n列表中显示的是当前常用的 Archetype 插件的 groupId、artifactId 和版本号。Archetype 插件是用来创建工程的。\n\n选择 1.1 版本的 quickstart 插件，单击 Next 按钮，出现下一个窗口，如图 7 所示。在窗口中输入新创建工程的 groupId、artifactId、packageName，并选择版本。\n\n单击 Finish 按钮，创建一个新的 Maven 项目\n\n")])])])])}),[],!1,null,null,null);n.default=a.exports}}]);