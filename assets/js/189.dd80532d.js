(window.webpackJsonp=window.webpackJsonp||[]).push([[189],{687:function(n,a,e){"use strict";e.r(a);var r=e(6),t=Object(r.a)({},(function(){var n=this.$createElement,a=this._self._c||n;return a("ContentSlotsDistributor",{attrs:{"slot-key":this.$parent.slotKey}},[a("h2",{attrs:{id:"apache基金会的archiva服务器的搭建步骤"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#apache基金会的archiva服务器的搭建步骤"}},[this._v("#")]),this._v(" Apache基金会的Archiva服务器的搭建步骤")]),this._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[this._v("在以前的案例开发过程中，曾强烈要求同外网保存连接，为什么呢？\n\n因为一旦开发需要的依赖在本地环境中不存在，Maven 会自动到网上的资源仓库中查找，并且下载。基于这种情况，需要在公司搭建一台服务器。程序员需要构件时，先看本地有没有，若是没有，再找公司服务器要，公司服务器要是没有，再从外网下载。\n\n下载后，先在公司服务器保存，再在程序员本地计算机保存。这样就可以在公司内网重复使用下载的构件，从而减少对外网的依赖。\n\n目前常用的搭建 Maven 私服的服务器有 3 台：Apache 基金会的 Archiva、JFrog 的 Artifactory 和 Sonatype 的 Nexus。\n\n作为刚入门的初学者，就不要考虑它们有什么区别了。接下来介绍 Apache 基金会的 Archiva 服务器的搭建方法。\n\nApache 基金会的 Archiva 服务器的搭建步骤如下：\n1. 下载 Archiva\n下载链接 http://archiva.apache.org/download.cgi，下载页面如下所示。\n\n下载页面\n图 1  下载页面\n \n有三种内容下载：一个是 tar.gz 包；另一个是 war 包；还有一个是 source 源代码。这里下载的是 tar.gz 包：apache-archiva-2.2.1-bin.tar.gz。该版本里面包含自己的 Web 服务器，直接解压，作为独立 Web 服务器启动。\n2. 启动服务器\n用压缩工具解压压缩文件，结果如图 2 所示。\n\nArchiva目录结构\n图 2  Archiva目录结构\n\nbin 目录下有个 archiva.bat 文件，该文件是在 Windows 操作系统下的服务启动程序。\n\n安装配置好 JDK（1.7 以上）。打开 CMD 窗口，切换到 archiva.bat 所在的目录，输入archiva console命令，按 Enter 键启动 Archiva 服务器，如图 3 所示。\n\nArchiva服务器启动提示\n图 3  Archiva服务器启动提示\n\n最后显示当前的 Web 请求端口是 8080。\n3. 初始化和配置 Archiva 服务器\n在浏览器中输入 http://localhost:8080，打开页面，如图 4 所示\n\nArchiva首页\n图 4  Archiva 首页\n\n单击右上角的 Create Admin User 按钮，在显示的页面上输入管理员的用户名和密码，单击 Save 按钮创建，如图 5 所示。\n\n创建Admin用户\n图 5  创建 Admin 用户\n\n选择页面左边的 Manage，单击 Add 按钮，在输入框中输入要添加的用户信息，如图 6 所示。单击 Save 按钮，创建一个新的用户。根据项目团队的需要，可以给每个开发人员创建访问私服的用户名和密码。\n\n添加普通用户\n图 6  添加普通用户\n\n选择页面左边的Repositories菜单，页面会显示本地仓库和远程仓库的配置，如图 7 所示。\n\n管理仓库\n图 7  管理仓库\n\n单击图 7 上的 Add 按钮，添加一个本地仓库位置，具体填写的信息，参考已有的配置就行。当然，也可以修改现在有的，比如 Id 为 internal 的本地仓库，单击 Edit 图标，会显示如图 8 所示界面。\n\n修改本地仓库\n图 8  修改本地仓库\n\nId 在开发人员客户端进行配置的时候需要使用，Directory 是仓库保存构件的路径。\n\nArchiva 安装好后，有个默认的远程仓库，链接是 https://repo.maven.apache.org/maven2。当然也可以去发现其他的远程仓库，再配置到私服里面来。需要的时候，Archiva 会自动从这些私服中寻找需要的构件。比如现在配置一个阿里云的远程仓库。\n\n单击当前页面中 Remote Repositories Management 的 Add 按钮，输入阿里云仓库的信息，如图 9 所示。\n\n添加远程仓库\n图 9  添加远程仓库\n\n后面还有几个输入框，这里介绍关键信息。\nId 可以随便输入，输入后不能再修改，需要唯一。\nName 是名称，随意输入。\nUrl 是远程仓库的链接。\nUsername 和 Password 是链接远程仓库的用户名和密码，有些仓库提供共享访问，比如现在配置的就不需要输入，否则要获得用户名和密码才行。\n\n单击 Save 按钮，出现如图 10 所示界面，其中就有刚刚添加上去的 alimaven。\n\n")])])])])}),[],!1,null,null,null);a.default=t.exports}}]);