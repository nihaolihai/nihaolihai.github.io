(window.webpackJsonp=window.webpackJsonp||[]).push([[81],{578:function(t,e,s){"use strict";s.r(e);var n=s(6),r=Object(n.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"hbase创建表"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#hbase创建表"}},[t._v("#")]),t._v(" HBase创建表")]),t._v(" "),s("p",[t._v("HBase 使用 creat 命令来创建表，创建表时需要指明表名和列族名，如创建上表中的学生信息表 Student 的命令如下:\ncreate 'Student','StuInfo','Grades'")]),t._v(" "),s("p",[t._v("这条命令仓建了名为 Student 的表，表中包含两个列族，分别为 Stulnfo 和 Grades。")]),t._v(" "),s("p",[t._v("注意在 HBase Shell 语法中，所有字符串参数都必须包含在单引号中，且区分大小写，如 Student 和 student 代表两个不同的表。")]),t._v(" "),s("p",[t._v("另外，在上条命令中没有对列族参数进行定义，因此使用的都是默认参数，如果建表时要设置列族的参数，参考以下方式：\ncreate 'Student', {NAME => 'Stulnfo', VERSIONS => 3}, {NAME =>'Grades', BLOCKCACHE => true}")]),t._v(" "),s("p",[t._v("大括号内是对列族的定义，NAME、VERSION 和 BLOCKCACHE 是参数名，无须使用单引号，符号=>表示将后面的值赋给指定参数。例如，VERSIONS => 3是指此单元格内的数据可以保留最近的 3 个版本，BLOCKCACHE => true指允许读取数据时进行缓存。")]),t._v(" "),s("p",[t._v("创建表结构以后，可以使用 exsits 命令查看此表是否存在，或使用 list 命令查看数据库中所有表，\nexsits 'Student'")]),t._v(" "),s("p",[t._v("还可以使用 describe 命令查看指定表的列族信息，\ndescribe 'Student'")]),t._v(" "),s("p",[t._v("describe 命令描述了表的详细结构，包括有多少个列族、每个列族的参数信息，这些显示的参数都可以使用 alter 命令进行修改。")])])}),[],!1,null,null,null);e.default=r.exports}}]);