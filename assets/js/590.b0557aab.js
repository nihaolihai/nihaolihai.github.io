(window.webpackJsonp=window.webpackJsonp||[]).push([[590],{1078:function(e,n,t){"use strict";t.r(n);var a=t(6),c=Object(a.a)({},(function(){var e=this.$createElement,n=this._self._c||e;return n("ContentSlotsDistributor",{attrs:{"slot-key":this.$parent.slotKey}},[n("h2",{attrs:{id:"html复选框"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#html复选框"}},[this._v("#")]),this._v(" HTML复选框")]),this._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[this._v('在 HTML 中，把 <input> 标签中的 type 属性设置为 checkbox 可以实现多选框的效果。具体语法格式如下：\n<input type="checkbox" />\n\n1. 复选框的常用属性\n复选框的常用属性\n常用属性\t说明\nchecked\t用来规定在页面加载时应该被预先选定的 input 元素，当属性值为 checked 时，可以省略。\nvalue\t用来定义被选中时发送到服务器的值。同一组中每个按钮的值应该不同，这样服务器才能辨别提交的是哪一项。\nid\t规定 HTML 元素的唯一 id。id 值在整个页面是唯一的，不会重复。\n1) checked属性\nchecked 属性用来设置页面加载时复选框的选中状态。当属性值为“checked”时，对应的复选框会被选中。下面我们通过一个简单的示例来进行演示：\n纯文本复制\n<form action="http://vip.biancheng.net/register.php" method="post" name="formName">\n     爱好：<input type="checkbox" name="running" checked>跑步\n     <input type="checkbox" name="reading" checked>阅读\n     <input type="checkbox" name="shopping" checked>购物\n</form>\n\n通过运行结果可以发现，当 name 属性值不同且为复选框都设置checked时，它们都被选中。那么如果我们为 name 属性设置相同的值，会是什么效果呢？\n\n纯文本复制\n<form action="http://vip.biancheng.net/register.php" method="post" name="formName">\n     爱好：<input type="checkbox" name="running" id="run" checked>跑步\n     <input type="checkbox" name="running" id="read" checked>阅读\n     <input type="checkbox" name="running" id="shop" checked>购物\n</form>\n\n与我们预期的结果可能不太一样：在为单选按钮设置相同的 name 属性值时，只有一个可以被选中，而复选框都被选中了，那么我们是不是可以随便设置复选框的 name 属性呢？当然是不建议的，因为后台在获取用户输入数据时，如果 name 属性相同，很容易混淆。\n\n2) value属性\n复选框也有 value 属性，我们来看一下使用方法：\n纯文本复制\n<form action="http://vip.biancheng.net/register.php" method="post" name="formName">\n     爱好：<input type="checkbox" name="running" checked value="run">\n     <input type="checkbox" name="reading" checked value="read">\n     <input type="checkbox" name="shopping" checked value="shop">\n</form>\n\n通过运行结果可以发现，与单行文本框和密码框不同，复选框的 value 值并不显示在页面上。建议为复选框设置不同的 value 属性值，这样在数据提交时，后台可以非常清楚的知道提交的是哪个字段。\n3) id属性\n为复选框设置 id 属性的目的与单选框相同，共分为 3 种：\n配合 <label> 标签使用；\n通过 JavaScript 获取元素，对元素进行一系列操作；\n通过 CSS 选择元素，为其添加样式。\n\n本节我们将讲述第一种使用方法：\n纯文本复制\n<form action="http://vip.biancheng.net/register.php" method="post" name="formName">\n     爱好：<input type="checkbox" name="running" id="run" checked value="run"><label for="run">跑步</label>\n     <input type="checkbox" name="reading" id="read" checked value="read"><label for="read">阅读</label>\n     <input type="checkbox" name="shopping" id="shop" checked value="shop"><label for="shop">购物</label>\n</form>\n\n复选框中的 <label> 标签和单选按钮中的 <label> 标签使用方法相同，分为 2 点：\n<label> 标签主要用来为 <input> 元素定义标记；\n当 <label> 标签和 for 属性配合使用时， for 属性指向<input>元素的 id 属性。当点击 <label> 标签的内容时，<input> 元素也有相应变化。\n我们建议所有的复选框都与 <label> 标签配合使用，一是为了用户体验，二是为了在使用 JavaScript 语言操作数据时更加方便。\n\n2. 总结\n关于复选框还有几点需要引起读者的注意：\n复选框可以多选，不限制选中的数量；\n复选框要想被正确提交，必须设置 name 属性，而且每个复选框的 name 属性值和 value 属性值都建议不同；\n复选框建议与 <label> 标签配合使用；\n<label> 标签中的 for 属性指向复选框的 id 属性，类似绑定。\n')])])])])}),[],!1,null,null,null);n.default=c.exports}}]);