(window.webpackJsonp=window.webpackJsonp||[]).push([[432],{920:function(e,n,r){"use strict";r.r(n);var t=r(6),p=Object(t.a)({},(function(){var e=this.$createElement,n=this._self._c||e;return n("ContentSlotsDistributor",{attrs:{"slot-key":this.$parent.slotKey}},[n("h2",{attrs:{id:"spring-mvc使用simplemappingexceptionresolver类异常处理"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#spring-mvc使用simplemappingexceptionresolver类异常处理"}},[this._v("#")]),this._v(" Spring MVC使用SimpleMappingExceptionResolver类异常处理")]),this._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[this._v('使用 org.springframework.web.servlet.handler.SimpleMappingExceptionResolver 类统一处理异常时需要在配置文件中提前配置异常类和 View 的对应关系。配置文件 springmvc-servlet.xml 的具体代码如下：\n<?xml version="1.0" encoding="UTF-8"?>\n<beans xmlns="http://www.springframework.org/schema/beans"\n    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"\n    xmlns:context="http://www.springframework.org/schema/context"\n    xsi:schemaLocation="\n        http://www.springframework.org/schema/beans\n        http://www.springframework.org/schema/beans/spring一beans.xsd\n        http://www.springframework.org/schema/context\n        http://www.springframework.org/schema/context/spring-context.xsd">\n    \x3c!-- 使用扫描机制扫描包 --\x3e\n    <context:component-scan base-package="controller" />\n    <context:component-scan base-package="service" />\n    <context:component-scan base-package="dao" />\n    \x3c!-- 配置视图解析器 --\x3e\n    <bean\n        class="org.springframework.web.servlet.view.InternalResourceViewResolver"\n        id="internalResourceViewResolver">\n        \x3c!--前缀 --\x3e\n        <property name="prefix" value="/WEB-INF/jsp/" />\n        \x3c!-- 后缀 --\x3e\n        <property name="suffix" value=".jsp" />\n    </bean>\n    \x3c!--SimpleMappingExceptionResolver（异常类与 View 的对应关系） --\x3e\n    <bean\n        class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">\n        \x3c!-- 定义默认的异常处理页面，当该异常类型注册时使用 --\x3e\n        <property name="defaultErrorView" value="error"></property>\n        \x3c!-- 定义异常处理页面用来获取异常信息的变量名，默认名为exception --\x3e\n        <property name="exceptionAttribute" value="ex"></property>\n        \x3c!-- 定义需要特殊处理的异常，用类名或完全路径名作为key，异常页名作为值 --\x3e\n        <property name="exceptionMappings">\n            <props>\n                <prop key="exception.MyException">my-error</prop>\n                <prop key="java.sql.SQLException">sql-error</prop>\n                \x3c!-- 在这里还可以继续扩展对不同异常类型的处理 --\x3e\n            </props>\n        </property>\n    </bean>\n</beans>\n在配置完成后就可以通过 SimpleMappingExceptionResolver 异常处理器统一处理 《Spring MVC统一异常处理的3种方式（附带实例）》中的异常。\n\n发布 springMVCDemo10 应用到 Tomcat 服务器并启动服务器，然后即可通过地址“http://localhost:8080/springMVCDemo10/”测试应用。\n\n')])])])])}),[],!1,null,null,null);n.default=p.exports}}]);