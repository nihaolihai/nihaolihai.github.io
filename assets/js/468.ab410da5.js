(window.webpackJsonp=window.webpackJsonp||[]).push([[468],{955:function(n,e,t){"use strict";t.r(e);var i=t(6),a=Object(i.a)({},(function(){var n=this.$createElement,e=this._self._c||n;return e("ContentSlotsDistributor",{attrs:{"slot-key":this.$parent.slotKey}},[e("h2",{attrs:{id:"swing-文本编辑器的实现"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#swing-文本编辑器的实现"}},[this._v("#")]),this._v(" swing 文本编辑器的实现")]),this._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v('(1) 创建一个 TextFileOpener 类并继承 JFrame 父类。\npackage ch18;\nimport java.awt.BorderLayout;\nimport java.awt.event.ActionEvent;\nimport java.awt.event.ActionListener;\nimport java.io.BufferedReader;\nimport java.io.File;\nimport java.io.FileReader;\nimport javax.swing.JButton;\nimport javax.swing.JFileChooser;\nimport javax.swing.JFrame;\nimport javax.swing.JMenu;\nimport javax.swing.JMenuBar;\nimport javax.swing.JMenuItem;\nimport javax.swing.JScrollPane;\nimport javax.swing.JTabbedPane;\nimport javax.swing.JTextArea;\nimport javax.swing.JToolBar;\nimport javax.swing.filechooser.FileNameExtensionFilter;\npublic class TextFileOpener extends JFrame\n{\n    private static final long serialVersionUID=-9077023825514749548L;\n    private JTextArea ta_showText;    //定义显示文件属性的文本域\n    private JTextArea ta_showProperty;    //定义显示文件内容的文本域\n    //Launch the application.\n    public static void main(String[] args)\n    {\n        TextFileOpener frame=new TextFileOpener();\n        frame.setVisible(true);\n    }   \n}\n\n(2) 在构造方法中布局的设置，包括窗口大小、菜单栏和菜单项、工具栏，以及对各个组件的事件监听，主要实现代码如下所示。\npublic TextFileOpener()\n{\n    setTitle("文本编辑器");    //设置窗体标题\n    setBounds(100,100,400,250);    //设置窗体位置和大小\n    setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);    //设置窗体默认关闭方式\n    final JMenuBar menuBar=new JMenuBar();    //创建菜单栏\n    setJMenuBar(menuBar);    //把菜单栏放到窗体上\n    final JMenu mn_file=new JMenu();    //创建文件菜单\n    mn_file.setText("文件");    //为文件菜单设置标题\n    menuBar.add(mn_file);    //把文件菜单添加到菜单栏上\n    final JMenuItem mi_open=new JMenuItem();    //创建打开菜单项\n    mi_open.addActionListener(new ActionListener()\n    {\n        //为打开菜单项添加监听器\n        public void actionPerformed(final ActionEvent arg0)\n        {\n            openTextFile();    //调用方法，操作文件\n        }\n    });\n    mi_open.setText("打开");    //设置打开菜单项的标题\n    mn_file.add(mi_open);    //把打开菜单项添加到文件菜单\n    mn_file.addSeparator();    //添加菜单分隔符\n    final JMenuItem mi_exit=new JMenuItem();    //创建退出菜单项\n    mi_exit.addActionListener(new ActionListener()\n    {\n        //为退出菜单项添加监听器\n        public void actionPerformed(final ActionEvent arg0)\n        {\n            System.exit(0);    //退出系统\n        }\n    });\n    mi_exit.setText("退出");    //设置退出菜单项的标题\n    mn_file.add(mi_exit);    //把退出菜单项添加到文件菜单\n    final JMenu mn_edit=new JMenu();    //创建编辑菜单\n    mn_edit.setText("编辑");    //为编辑菜单设置标题\n    menuBar.add(mn_edit);    //把编辑菜单添加到菜单栏上\n    final JMenuItem mi_copy=new JMenuItem();    //创建复制菜单项\n    mi_copy.setText("复制");    //设置复制菜单项的标题\n    mn_edit.add(mi_copy);    //把复制菜单项添加到编辑菜单\n    final JMenuItem mi_cut=new JMenuItem();    //创建剪切菜单项\n    mi_cut.setText("剪切");    //设置剪切菜单项的标题\n    mn_edit.add(mi_cut);    //把剪切菜单项添加到编辑菜单\n    final JMenuItem mi_paste=new JMenuItem();    //创建粘贴菜单项\n    mi_paste.setText("粘贴");    //设置粘贴菜单项的标题\n    mn_edit.add(mi_paste);    //把粘贴菜单项添加到编辑菜单\n    final JToolBar toolBar=new JToolBar();    //创建工具栏\n    getContentPane().add(toolBar,BorderLayout.NORTH);    //把工具栏放到窗体上方\n    final JButton btn_open=new JButton();    //创建工具按钮\n    btn_open.addActionListener(new ActionListener()\n    {\n        //添加动作监听器\n        public void actionPerformed(final ActionEvent arg0)\n        {\n            openTextFile();    //调用方法，操作文件\n        }\n    });\n    btn_open.setText("  打  开  ");    //设置工具按钮的标题\n    toolBar.add(btn_open);    //把工具按钮添加到工具栏上\n    final JButton btn_exit=new JButton();    //创建工具按钮\n    btn_exit.addActionListener(new ActionListener()\n    {\n        //添加动作监听器\n        public void actionPerformed(final ActionEvent arg0)\n        {\n            System.exit(0);    //退出系统\n        }\n    });\n    btn_exit.setText("  退  出  ");    //设置工具按钮的标题\n    toolBar.add(btn_exit);    //把工具按钮添加到工具栏上\n    final JTabbedPane tabbedPane=new JTabbedPane();    //创建选项卡面板\n    getContentPane().add(tabbedPane,BorderLayout.CENTER);    //把选项卡面板放到窗体中央\n    final JScrollPane scrollPane1=new JScrollPane();    //创建滚动面板\n    //把滚动面板放到选项卡的第一个选项页\n    tabbedPane.addTab("文件的属性",null,scrollPane1,null);\n    ta_showProperty=new JTextArea();    //创建文本域\n    //把文本域添加到滚动面板的视图中\n    scrollPane1.setViewportView(ta_showProperty);\n    final JScrollPane scrollPane2=new JScrollPane();    //创建滚动面板\n    //把滚动面板放到选项卡的第二个选项页\n    tabbedPane.addTab("文件的内容",null,scrollPane2,null);\n    ta_showText=new JTextArea();    //创建文本域\n    //把文本域添加到滚动面板的视图中\n    scrollPane2.setViewportView(ta_showText);\n}\n\n(3) 无论是从菜单栏还是工具栏选择“打开”文件操作时都是调用 openTextFile() 方法。该方法会弹出文件选择器让用户选择一个文件，然后使用文件流获取文件属性和读取文件的内容，再把信息呈现到界面上。openTextFile() 方法的实现代码如下：\n//用于打开文件并获得文件信息的方法\npublic void openTextFile()\n{\n    JFileChooser fileChooser=new JFileChooser();    //创建文件选择对话框\n    fileChooser.setFileFilter(new FileNameExtensionFilter("文本文件","txt"));\n    int returnValue=fileChooser.showOpenDialog(getContentPane());    //打开文件选择对话框\n    if(returnValue==JFileChooser.APPROVE_OPTION)\n    {\n        //判断用户是否选择了文件\n        File file=fileChooser.getSelectedFile();    //获得文件对象\n        //获得文件的绝对路径\n        ta_showProperty.append("文件的绝对路径是："+file.getAbsolutePath()+"\\n");\n        //是否为隐藏文件\n        ta_showProperty.append("该文件是隐藏文件吗？"+file.isHidden()+"\\n");\n        FileReader reader;    //声明字符流\n        BufferedReader in;    //声明字符缓冲流\n        try\n        {\n            reader=new FileReader(file);    //创建字符流\n            in=new BufferedReader(reader);    //创建字符缓冲流\n            String info=in.readLine();    //从文件中读取一行信息\n            while(info!=null)\n            {\n                //判断是否读到内容\n                ta_showText.append(info+"\\n");    //把读到的信息追加到文本域中\n                info=in.readLine();    //继续读下一行信息\n            }\n            in.close();    //关闭字符缓冲流\n            reader.close();    //关闭字符流\n        }\n        catch(Exception ex)\n        {\n            ex.printStackTrace();    //输出栈踪迹\n        }\n    }\n}\n\n(4) 运行程序，单击“打开”按钮，选择一个 TXT 文件。图 1 所示为查看文件属性效果，图 2 所示为查看文件内容效果。单击“退出”按钮，可以关闭程序。\n\n\n')])])]),e("p",[e("img",{attrs:{src:"http://c.biancheng.net/uploads/allimg/181107/3-1Q10G61555518.gif",alt:"RUNOOB 图标"}})])])}),[],!1,null,null,null);e.default=a.exports}}]);