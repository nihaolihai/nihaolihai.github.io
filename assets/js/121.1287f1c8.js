(window.webpackJsonp=window.webpackJsonp||[]).push([[121],{609:function(n,t,a){"use strict";a.r(t);var e=a(6),s=Object(e.a)({},(function(){var n=this,t=n.$createElement,a=n._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[a("h2",{attrs:{id:"java-switch-case-语句"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#java-switch-case-语句"}},[n._v("#")]),n._v(" Java switch case 语句")]),n._v(" "),a("p",[n._v("switch case 语句判断一个变量与一系列值中某个值是否相等，每个值称为一个分支。")]),n._v(" "),a("p",[n._v("语法\nswitch case 语句语法格式如下：")]),n._v(" "),a("p",[n._v("switch(expression){\ncase value :\n//语句\nbreak; //可选\ncase value :\n//语句\nbreak; //可选\n//你可以有任意数量的case语句\ndefault : //可选\n//语句\n}\nswitch case 语句有如下规则：")]),n._v(" "),a("p",[n._v("switch 语句中的变量类型可以是： byte、short、int 或者 char。从 Java SE 7 开始，switch 支持字符串 String 类型了，同时 case 标签必须为字符串常量或字面量。")]),n._v(" "),a("p",[n._v("switch 语句可以拥有多个 case 语句。每个 case 后面跟一个要比较的值和冒号。")]),n._v(" "),a("p",[n._v("case 语句中的值的数据类型必须与变量的数据类型相同，而且只能是常量或者字面常量。")]),n._v(" "),a("p",[n._v("当变量的值与 case 语句的值相等时，那么 case 语句之后的语句开始执行，直到 break 语句出现才会跳出 switch 语句。")]),n._v(" "),a("p",[n._v("当遇到 break 语句时，switch 语句终止。程序跳转到 switch 语句后面的语句执行。case 语句不必须要包含 break 语句。如果没有 break 语句出现，程序会继续执行下一条 case 语句，直到出现 break 语句。")]),n._v(" "),a("p",[n._v("switch 语句可以包含一个 default 分支，该分支一般是 switch 语句的最后一个分支（可以在任何位置，但建议在最后一个）。default 在没有 case 语句的值和变量值相等的时候执行。default 分支不需要 break 语句。")]),n._v(" "),a("p",[n._v("switch case 执行时，一定会先进行匹配，匹配成功返回当前 case 的值，再根据是否有 break，判断是否继续输出，或是跳出判断。")]),n._v(" "),a("p",[n._v("实例\nTest.java 文件代码：\npublic class Test {\npublic static void main(String args[]){\n//char grade = args[0].charAt(0);\nchar grade = 'C';")]),n._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",[a("code",[n._v('  switch(grade)\n  {\n     case \'A\' :\n        System.out.println("优秀"); \n        break;\n     case \'B\' :\n     case \'C\' :\n        System.out.println("良好");\n        break;\n     case \'D\' :\n        System.out.println("及格");\n        break;\n     case \'F\' :\n        System.out.println("你需要再努力努力");\n        break;\n     default :\n        System.out.println("未知等级");\n  }\n  System.out.println("你的等级是 " + grade);\n')])])]),a("p",[n._v("}\n}\n以上代码编译运行结果如下：")]),n._v(" "),a("p",[n._v("良好\n你的等级是 C\n如果 case 语句块中没有 break 语句时，JVM 并不会顺序输出每一个 case 对应的返回值，而是继续匹配，匹配不成功则返回默认 case。")]),n._v(" "),a("p",[n._v('Test.java 文件代码：\npublic class Test {\npublic static void main(String args[]){\nint i = 5;\nswitch(i){\ncase 0:\nSystem.out.println("0");\ncase 1:\nSystem.out.println("1");\ncase 2:\nSystem.out.println("2");\ndefault:\nSystem.out.println("default");\n}\n}\n}\n以上代码编译运行结果如下：')]),n._v(" "),a("p",[n._v("default\n如果 case 语句块中没有 break 语句时，匹配成功后，从当前 case 开始，后续所有 case 的值都会输出。")]),n._v(" "),a("p",[n._v('Test.java 文件代码：\npublic class Test {\npublic static void main(String args[]){\nint i = 1;\nswitch(i){\ncase 0:\nSystem.out.println("0");\ncase 1:\nSystem.out.println("1");\ncase 2:\nSystem.out.println("2");\ndefault:\nSystem.out.println("default");\n}\n}\n}\n以上代码编译运行结果如下：')]),n._v(" "),a("p",[n._v("1\n2\ndefault\n如果当前匹配成功的 case 语句块没有 break 语句，则从当前 case 开始，后续所有 case 的值都会输出，如果后续的 case 语句块有 break 语句则会跳出判断。")]),n._v(" "),a("p",[n._v('Test.java 文件代码：\npublic class Test {\npublic static void main(String args[]){\nint i = 1;\nswitch(i){\ncase 0:\nSystem.out.println("0");\ncase 1:\nSystem.out.println("1");\ncase 2:\nSystem.out.println("2");\ncase 3:\nSystem.out.println("3"); break;\ndefault:\nSystem.out.println("default");\n}\n}\n}\n以上代码编译运行结果如下：')]),n._v(" "),a("p",[n._v("1\n2\n3")])])}),[],!1,null,null,null);t.default=s.exports}}]);