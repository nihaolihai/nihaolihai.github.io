(window.webpackJsonp=window.webpackJsonp||[]).push([[470],{957:function(n,e,t){"use strict";t.r(e);var a=t(6),l=Object(a.a)({},(function(){var n=this.$createElement,e=this._self._c||n;return e("ContentSlotsDistributor",{attrs:{"slot-key":this.$parent.slotKey}},[e("h2",{attrs:{id:"swing-标签组件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#swing-标签组件"}},[this._v("#")]),this._v(" swing 标签组件")]),this._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v('在添加了容器并指定了布局管理方式之后，便可以向容器中添加各种展示类的组件，像标签、按钮、单选和多选框等。本节将介绍 Swing 中标签组件的用法。\n\n标签是一种可以包含文本和图片的非交互组件，其文本可以是单行文本，也可以是 HTML 文本。对于只包含文本的标签可以使用 JLabel 类，该类的主要构造方法有如下几种形式。\nJLabel()：创建无图像并且标题为空字符串的 JLabel。\nJLabel(Icon image)：创建具有指定图像的 JLabel。\nJLabel(String text)：创建具有指定文本的 JLabel。\nJLabel(String textjcon image,int horizontalAlignment)：创建具有指定文本、图像和水平对齐方式的 JLabel，horizontalAlignment 的取值有 3 个，即 JLabel.LEFT、JLabel.RIGHT 和 JLabel.CENTER。\n\nJLabel 的常用方法如表 1 所示。\n表1 JLabel类的常用方法\n方法名称\t说明\nvoid setText(Stxing text)\t定义 JLabel 将要显示的单行文本\nvoid setIcon(Icon image)\t定义 JLabel 将要显示的图标\nvoid setIconTextGap(int iconTextGap)\t如果 JLabel 同时显示图标和文本，则此属性定义它们之间的间隔\nvoid setHorizontalTextPosition(int textPosition)\t设置 JLabel 的文本相对其图像的水平位置\nvoid setHorizontalAlignment(int alignment)\t设置标签内容沿 X 轴的对齐方式\nint getText()\t返回 JLabel 所显示的文本字符串\nIcon getIcon()\t返回 JLabel 显示的图形图像\nComponent getLabelFor()\t获得将 JLabel 添加到的组件\nint getIconTextGap()\t返回此标签中显示的文本和图标之间的间隔量\nint getHorizontalTextPosition()\t返回 JLabel 的文本相对其图像的水平位置\nint getHorizontalAlignment()\t返回 JLabel 沿 X 轴的对齐方式\n例 1\n使用 JFrame 组件创建一个窗口，然后向窗口中添加 3 个标签，这 3 个标签分别使用不同的创建方法。实现代码如下：\n纯文本复制\npackage ch17;\nimport javax.swing.ImageIcon;\nimport javax.swing.JFrame;\nimport javax.swing.JLabel;\nimport javax.swing.JPanel;\npublic class JLabelDemo\n{\n    public static void main(String[] agrs)\n    {\n        JFrame frame=new JFrame("Java标签组件示例");    //创建Frame窗口\n        JPanel jp=new JPanel();    //创建面板\n        JLabel label1=new JLabel("普通标签");    //创建标签\n        JLabel label2=new JLabel();\n        label2.setText("调用setText()方法");\n        ImageIcon img=new ImageIcon("D:\\\\money.png");    //创建一个图标\n        //创建既含有文本又含有图标的JLabel对象\n        JLabel label3=new JLabel("开始理财",img,JLabel.CENTER);\n        jp.add(label1);    //添加标签到面板\n        jp.add(label2);\n        jp.add(label3);\n        frame.add(jp);\n        frame.setBounds(300,200,400,100);\n        frame.setVisible(true);\n        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n    }\n}\n')])])])])}),[],!1,null,null,null);e.default=l.exports}}]);