(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{502:function(n,e,t){"use strict";t.r(e);var o=t(6),r=Object(o.a)({},(function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[t("h2",{attrs:{id:"angular"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#angular"}},[n._v("#")]),n._v(" angular")]),n._v(" "),t("p",[t("a",{attrs:{href:"https://angularjs.org/",target:"_blank",rel:"noopener noreferrer"}},[n._v("AngularJS官网"),t("OutboundLink")],1)]),n._v(" "),t("p",[t("a",{attrs:{href:"http://www.angularjs.net.cn/",target:"_blank",rel:"noopener noreferrer"}},[n._v("AngularJS中文官网"),t("OutboundLink")],1)]),n._v(" "),t("p",[t("a",{attrs:{href:"https://angular.io/",target:"_blank",rel:"noopener noreferrer"}},[n._v("Angular官网"),t("OutboundLink")],1)]),n._v(" "),t("p",[t("a",{attrs:{href:"https://angular.cn/",target:"_blank",rel:"noopener noreferrer"}},[n._v("Angular中文官网"),t("OutboundLink")],1)]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[n._v('import {ActivatedRoute} from \'@angular/router\';\nthis.bookId = this.activedrouted.snapshot.params[\'bookId\'];\n$http.get(\'http://path/to/url\').success(function(data){\n  $scope.name = data.name;\n  $timeout(function(){\n    //do sth later, such as log\n  }, 0, false);\n});\n ng-repeat="name in names"\n  ng-for="name in names"\n  ng-if\n  ng-modal\n  ng-show="true"\n  ng-click="count = count + 1"\n\n1.初识angular\n\n安装npm install angular\n\n在页面的HTML部分添加angular标签\n\n<html lang="en" ng-app="App"></html>//表示html标签内可以作为angular的view部分\n1\n在JavaScript标签中定义angular模块\n\nconst app = angular.module(\'app\',[])\n1\n定义控制器（controller）最为链接model和view的桥梁\n\napp.controller(\'StudentController\',[\'$scope\',function($scope){\n    $scope.starts = [\n        {name:"周杰伦",sex:\'男\'},\n        {name:"刘德华",sex:\'男\'}\n    ]\n}])\n\n将controller与view相关联，通过给标签添加ng-controller属性\n\n<table ng-controller="StudentController">\n    <tr>\n        <td>姓名</td>\n        <td>性别</td>\n    </tr>\n    <tr ng-repeat="start in starts">\n        <td>{{student.name}}</td>\n        <td>{{student.sex}}</td>\n    </tr>\n</table>\n\n2.angular指令\n\n内置指令\n\nng-app             在带有该指令的标签的内部写angular语法才有效\nng-controller    控制器\nng-show            控制元素显示，true显示，false不显示\nng-hide          控制元素隐藏，true隐藏，false不隐藏\nng-if              控制元素是否存在，true存在，false不存在\nng-src            增强图片路径\nng-href            增强地址\nng-class        控制类名 <li ng-class="{red: true, blue: true}">ng-class指令</li>\nng-include        引入模板\nng-disabled        表单禁用\nng-readonly        表单只读\nng-checked        单/复选框表单选中\nng-selected        下拉框表单选中\nng-bind          绑定数据与{{}}效果相同 <li ng-bind="name"></li> <li>{{name}}</li>\n\n自定义指定，通过angular的全局对象directive方法实现\n\n<div tag></div>\n<tag></tag>\n<div class="tag"></div>\n\nvar app = angular.module(\'app\',[])\napp.directive(\'tag\',function(){\n    return {\n        //自定义指令类型 E(element)、A(attribute)、C(class)、M(mark replace必须为true)\n        restrict: \'EA\',\n        //是否替换原有标签\n        replace: true,\n        template: \'<h1>hello AngularJs</h1>\'\n        //templateUrl:\'./list.html\'\n    }\n})\n\n3.数据绑定\n\n单项绑定\n\nng-bind\n\n{{}}，当出现闪烁现象时，在标签属性上添加ng-clock指定、\n\n<li ng-cloak>{{name}}{{age}}</li>\n1\n绑定多个属性\n\n<li ng-bind-template="{{name}}{{age}}"></li>\n1\n双向数据绑定\n\nng-model属性添加到表单中实现view向controller的传递\n\n<input type="text" ng-model="msg">\n<h4>{{msg}}</h4>\n1\n2\nng-init初始化模型model数据\n\n<div ng-controller="DemoController" ng-init="name=\'itcast\';age=10">\n    <h1>{{name}}</h1>\n    <h2>{{age}}</h2>\n</div>\n\n4.事件处理\n\nng-click、ng-dblclick、ng-blur等方法\n\n例子\n\n<button ng-dblclick="double()">双击</button>\n\nvar App = angular.module(\'App\', [])\nApp.controller(\'DemoController\', [\'$scope\', function ($scope) {\n    $scope.double = function () {\n        alert(\'我被双击了\');\n    }\n}])\n\n5.循环中的逻辑处理\n\nng-repeat、ng-switch、ng-switch-when、on\n\n例子\n\n<li ng-repeat="(key, star) in stars">{{star.name}}{{star.age}}</li>\n<li ng-repeat="item in items" ng-switch="item">\n    <span ng-switch-when="css">{{item}}</span>\n</li>\n\n6.过滤器\n\n在{{}}中使用|来调用过滤器，使用：传递参数\n\n内置过滤器\n\n1、currency将数值格式化为货币格式\n<li>{{price|currency:\'￥\'}}</li>\n2、date日期格式化，年（y）、月（M）、日（d）、时（H/h）、分（m）、秒（s）、毫秒（.sss）\n<li>{{now|date:\'yyyy/MM/dd hh:mm:ss\'}}</li>\n3、filter在给定数组中选择满足条件的一个子集，并返回一个新数组，其条件可以是一个字符串、对象、函数\n<li>{{items|filter:\'s\'}}</li>\n<li>{{students|filter:{age: 16} }}</li>\n4、json将Javascrip对象转成JSON字符串\n<li>{{students|json}}</li>\n5、limitTo取出字符串或数组的前（正数）几位或后（负数）几位\n<li>{{items|limitTo:-1}}</li>\n<li>{{str|uppercase|limitTo:3}}</li>\n6、number数字格式化，可控制小位位数\n<li>{{str|lowercase}}</li>\n<li>{{num|number:2}}</li>\n<li>{{items|orderBy: \'\':true}}</li>\n<li>{{students|orderBy: \'age\': false}}</li>\n\n\n自定义过滤器\n\n通过模块提供的filter犯法自定义过滤器\n\n例子\n\n<div ng-controller="DemoController">\n    <h4>{{info|capitalize:123}}{{name}}</h4>\n</div>\n<script>        \nvar App = angular.module(\'App\', []);\n// 自定义过滤器\nApp.filter(\'capitalize\', function () {\n    return function (input, arg2) {\n        //input指的是controller传过来的\n        //arg2指的是：传过来的123\n        return input[0].toUpperCase() + input.slice(1);\n    }\n});\n// 自定义控制器的\nApp.controller(\'DemoController\', [\'$scope\', function ($scope) {\n    $scope.name = \'小明\';\n    $scope.info = \'my name is \';\n}]);\n<\/script>\n\n7.服务\n\n$location对原生location的封装\n\nvar App = angular.module(\'App\', []);\nApp.controller(\'DemoController\', [\'$scope\', \'$location\', function($scope, $location) {\n    $scope.title = \'学习$location服务\';\n    $scope.absUrl = $location.absUrl();\n    $scope.url = $location.url();\n    $scope.host = $location.host();\n    $scope.search = $location.search();\n    $scope.hash = $location.hash();\n    $scope.protocol = $location.protocol();\n    $scope.port = $location.port();\n}]);\n\n$timeout&$interval\n\n<div ng-controller="DemoController">\n    <ul>\n        <li>{{msg}}</li>\n        <li>{{now|date: \'yyyy-MM-dd hh:mm:ss\'}}</li>\n        <li><button ng-click="stop()">停</button></li>\n    </ul>\n</div>\n<script src="./libs/angular.min.js"><\/script>\n\nApp.controller(\'DemoController\', [\'$scope\', \'$timeout\', \'$interval\',function ($scope, $timeout, $interval) {\n    $timeout(function () {\n        $scope.msg = \'执行了\';\n    }, 3000);\n    var timer = $interval(function () {\n        $scope.now = new Date;\n    }, 1000);\n    $scope.stop = function () {\n        $interval.cancel(timer);\n    }\n}]);\n\n\n$filter格式化参数\n\n<ul ng-controller="DemoController">\n    <li>价格: {{price}}</li>\n    <li>大写：{{str}}</li>\n    <li>截取: {{str1}}</li>\n</ul>\n<script src="./libs/angular.min.js"><\/script>\n<script>\n    var App = angular.module(\'App\', []);\n    // $filter是过滤器\n    App.controller(\'DemoController\', [\'$scope\', \'$filter\', function ($scope, $filter) {\n        $scope.price = 11.11;\n        var currency = $filter(\'currency\');\n        $scope.price = currency($scope.price);\n        $scope.str = \'hello angular\';\n        var uppercase = $filter(\'uppercase\');\n        $scope.str = uppercase($scope.str);\n        $scope.str1 = $filter(\'limitTo\')($scope.str, 2);\n    }]);\n<\/script>\n\n$log打印调试信息\n\n<script>\n    var App = angular.module(\'App\', []);\n    // 使用日志服务\n    App.controller(\'DemoController\', [\'$log\', function ($log) {\n        $log.info(\'普通信息\');\n        $log.warn(\'警告信息\');\n        $log.error(\'错误信息\');\n        $log.log(\'打印信息\');\n        $log.debug(\'调试信息\');\n    }]);\n<\/script>\n\n$http用于向服务端发起异步请求\n\nvar App = angular.module(\'App\', []);\nApp.controller(\'DemoController\', [\'$scope\', \'$http\', \'$log\', function ($scope, $http, $log) {\n    $http({\n        url: \'example.php\',\n        method: \'post\',// method: \'get\',\n        headers: {\'Content-Type\': \'application/x-www-form-urlencoded\'},\n        params: { // get 参数\n            name: \'itcast\',\n            sex: \'男\'\n        },\n        data: { age: 10}\n    }).success(function (info) {\n        // info 就是返回的数据\n        $log.info(info);\n    });\n}]);\n\n自定义服务\n\nfactory方法\n\nvar App = angular.module(\'App\', []);\n// 定义一个名叫showTime的服务\nApp.factory(\'showTime\', [\'$filter\', function ($filter) {\n    var now = new Date();\n    var date = $filter(\'date\');\n    return {\n        now: date(now, \'y-M-d H:m:s\')\n    }\n}]);\nApp.controller(\'DemoController\', [\'$scope\', \'showTime\', function($scope, showTime) {\n    $scope.now = showTime.now;\n}])\n\nservice方法\n\nvar App = angular.module(\'App\', []);\n// 自定义服务显示日期\nApp.service(\'showTime\', [\'$filter\', function($filter) {\n    var now = new Date();\n    var date = $filter(\'date\');\n    this.now = date(now, \'y-M-d H:mm:ss\');\n}]);\nApp.controller(\'DemoController\', [\'$scope\', \'showTime\', function($scope, showTime) {\n    $scope.now = showTime.now;\n}])\n\nvalue方法\n\nvar App = angular.module(\'App\', []);\n// 自定义常量服务\nApp.value(\'author\', \'itcast\');\nApp.value(\'version\', \'1.0\');\n// 本质上一个服务,从表现形式上是一个常量,常量就是不变的值与变对量相对应,声明依赖调用服务\nApp.controller(\'DemoController\', [\'$scope\', \'author\', \'version\', function($scope, author, version) {\n    $scope.author = author;\n    $scope.ver = version;\n}]);\n\n8.模块加载\n\n每一个内置服务都有一个对应的provider，例如$logProvider、$httpProvider、$locationPorvider\n\n以$log为例\n\nvar App = angular.module(\'App\', []);\nApp.config([\'$logProvider\', \'$filterProvider\', function ($logProvider, $filterProvider) {\n    // 禁用debug功能\n    $logProvider.debugEnabled(false);\n    // 默认9个过滤器，通过配置可以新增一些过滤器\n    $filterProvider.register(\'capitalize\', function () {\n        // 新增一个过滤器\n        return function (input) {\n            return input[0].toUpperCase() + input.slice(1);\n        }\n    });\n}]);\nApp.controller(\'DemoController\', [\'$scope\', \'$log\', function ($scope, $log) {\n    // 测试配置后的结果\n    $log.debug(\'debug\');\n    $scope.str = \'hello angular\';\n}]);\n\n运行块,先运行，可以在此模块中初始化\n\nvar App = angular.module(\'App\', []);\n// 直接运行$http、$rootScope服务\nApp.run([\'$http\', \'$rootScope\', function ($http, $rootScope)\n    // 直接调用$http\n    $http({\n        url: \'example.php\',\n        method: \'get\'\n    });\n    // 根作用域\n    $rootScope.name = \'祖宗\';\n}]);\nApp.controller(\'DemoController\', [\'$scope\', function($scope) {\n    $scope.name = \'后代\';\n}])\n\n9.路由\n\n引入angular-route.js\n\n\x3c!-- AngularJS核心框架 --\x3e\n<script src="./libs/angular.min.js"><\/script>\n\x3c!-- 路由模块理解成插件 --\x3e\n<script src="./libs/angular-route.js"><\/script>\n\n实例化模块，将路由依赖传进来\n\nvar App = angular.module(\'App\', [\'ngRoute\']);\n1\n配置路由模块\n\n// 需要对路由模块进行配置，使其正常工作\nApp.config([\'$routeProvider\', function ($routeProvider) {\n    $routeProvider.when(\'/index\', {\n        // template: \'<h1>index Pages!</h1>\',\n        templateUrl: \'./abc.html\'\n    })\n        .when(\'/introduce\', {\n        template: \'<h1>introduce Pages!</h1>\'\n    })\n        .when(\'/contact\', {\n        // template: \'<h1>contact US Pages!</h1>\',\n        templateUrl: \'./contact.html\',\n        controller: \'ContactController\' // 定义控制器\n    })\n        .when(\'/list\', {\n        templateUrl: \'./list.html\', // 视图模板\n        controller: \'ListController\' // 定义控制器\n    })\n        .otherwise({\n        redirectTo: \'/index\'\n    });\n}]);\n\n// 列表控制器\nApp.controller(\'ListController\', [\'$scope\', \'$http\', function ($scope, $http) {\n    // 模型数据\n    $http({\n        url: \'10-02.php\',\n    }).success(function (info) {\n        $scope.items = info;\n    });\n}]);\nApp.controller(\'ContactController\', [\'$scope\', \'$http\', function ($scope, $http) {\n    $http({\n        url: \'contact.php\'\n    }).success(function (info) {\n        $scope.content = info;\n    });\n}]);\n\n布局模板\n\n<div class="wrapper">\n    \x3c!-- 导航菜单 --\x3e\n    <ul>\n        <li class="active">\n            <a href="#/index">Index</a>\n        </li>\n        <li>\n            <a href="#/introduce">Introduce</a>\n        </li>\n           <li>\n             <a href="#/contact">Contact Us</a>\n        </li>\n            <li>\n             <a href="#/list">List</a>\n        </li>\n    </ul>\n    \x3c!-- 内容 --\x3e\n    <div class="content">\n        \x3c!-- 占位符 --\x3e\n        <div ng-view></div>\n    </div>\n</div>\n\n\n\nwhen中的参数\n\n第一个参数，代表URL\n\n第二个参数\n\na、template 字符串形式的视图模板\nb、templateUrl 引入外部视图模板\nc、controller 视图模板所属的控制器\nd、redirectTo跳转到其它路由\n\n获取路由传递过来的参数\n\n<div class="wrapper">\n    \x3c!-- 导航菜单 --\x3e\n    <ul>\n        <li class="active">\n            <a href="#/index/5/abc/7">Index</a>\n        </li>\n        <li>\n             <a href="#/introduce">Introduce</a>\n        </li>\n        <li>\n             <a href="#/contact">Contact Us</a>\n        </li>\n        <li>\n             <a href="#/list">List</a>\n        </li>\n    </ul>\n    \x3c!-- 内容 --\x3e\n        <div class="content">\n            \x3c!-- 占位符 --\x3e\n        <div ng-view></div>\n    </div>\n</div>\n    \n// 依赖ngRoute模块\nvar App = angular.module(\'App\', [\'ngRoute\']);\n// 需要对路由模块进行配置，使其正常工作\nApp.config([\'$routeProvider\', function ($routeProvider) {\n    $routeProvider.when(\'/index/:id/:page/:p\', {\n        templateUrl: \'abc.html\',\n        controller: \'IndexController\'\n    })\n        .otherwise({\n        redirectTo: \'/index\'\n    });\n}]);\n// 提供了一个专门负责获取参数的一个服务$routeParams\nApp.controller(\'IndexController\', [\'$scope\', \'$http\', \'$routeParams\', function ($scope, $http, $routeParams) {\n    $scope.content = \'练习路由功能\';\n    console.log($routeParams);\n}]);\n\n\n10.其他\n\n转成jQuery对象，只实现jQuery部分方法\n\nvar box = document.querySelector(\'.box\');\nvar btn = document.querySelector(\'button\');\n// 转成jQuery对象\nbox = angular.element(box);\nbtn = angular.element(btn);\nbtn.on(\'click\', function () {\n    box.animate({\n        fontSize: \'40px\'\n    }, 400);\n});\n\nbower，基于nodejs的一个惊天资源管理工具\n\n1、依赖NodeJS环境和git工具。\n2、npm install -g bower安装bower\n3、bower search 查找资源信息\n4、bower install  安装（下载）资源，通过#号可以指定版本号\n5、bower info 查看资源信息\n6、bower uninstall 卸载（删除）资源\n7、bower init初始化，用来记录资源信息及依赖。\n\n\n<!DOCTYPE html>\n<html>\n<head>\n<meta charset="UTF-8">\n<title></title>\n<script src="libs/angular.min.js"><\/script>\n<script src="libs/jquery-1.11.0.min.js"><\/script>\n<script>\nvar app=angular.module("myApp",[]);\napp.controller("myCtrl",function($scope,$http){\n/*$scope.stu=[{\nname:"张三",\nsex:"男",\n   birth: new Date("1998-10-06" ),\n  zhuzhi:"北京西二旗"\n},{\nname:"李四",\nsex:"女",\n   birth: new Date("1997-11-26" ),\n  zhuzhi:"北京西二旗"\n},{\nname:"王五",\nsex:"男",\n   birth: new Date("1999-05-06" ),\n  zhuzhi:"北京西二旗"\n}];\n//定义城市\n$scope.pros=[{pro:"北京",children:["西二旗","上地"]},{pro:"河北",children:["石家庄","邯郸"]}];\n*/\n$http.get("students.json").then(function(response){\n$scope.stu=response.data;\n});\n$http.get("provinces.json").then(function(response){\n$scope.pros=response.data;\n})\n//全选反选\n$scope.checkAll=function(){\nfor(var i=0;i<$scope.stu.length;i++){\n$scope.stu[i].ck=!$scope.stu[i].ck\n}\n}\n//批量删除\n$scope.deleteAll=function(){\nfor(var i=0;i<$scope.stu.length;i++){\nif($scope.stu[i].ck){\n$scope.stu.splice(i,1);\ni--;\n}\n}\n}\n//删除\n$scope.deleteStu=function(dname){\nfor(var i=0;i<$scope.stu.length;i++){\nif($scope.stu[i].name==dname){\n$scope.stu.splice(i,1);\n}\n}\n}\n\n//联动\n$scope.changcity=function(pro){\n$scope.citys=pro.children;\n}\n//添加\n$scope.showAdd=false;\n$scope.addShow=function(){\n$scope.showAdd=true;\n}\n$scope.add=function(){\nvar student={};\nif($scope.addname==null||$scope.addname==""){\n$scope.showName=true;\nreturn;\n}else{\nstudent.name=$scope.addname;\n$scope.showName=false;\n}\nif($scope.chen==""||$scope.chen==null){\n$scope.showSex=true;\nreturn;\n}else{\nstudent.sex=$scope.chen;\n$scope.showSex=false;\n}\n\nif($scope.addbirth==""||$scope.addbirth==null){\n$scope.showBirth=true;\nreturn;\n}else{\nstudent.birth=$scope.addbirth;\n$scope.showBirth=false;\n}\nstudent.zhuzhi=$scope.s.pro+$scope.c;\n\n$scope.stu.push(student);\n$scope.showAdd=false;\n}\n//修改\n$scope.updateShow=function(upname){\nvar s ="";\n$scope.ShowUpdate=true;\nfor(var i=0;i<$scope.stu.length;i++){\ns=$scope.stu[i];\nif($scope.stu[i].name==upname){\n//回显\n$scope.upname=s.name;\n$scope.upchen=s.sex;\n$scope.upbirth=new Date(s.birth);\n\n$scope.upzhuzhi=s.zhuzhi;\n//alert($scope.stu[i].birth);\nbreak;\n}\n}\n//修改\n$scope.updateStu=function(){\ns.name=$scope.upname;\ns.sex=$scope.upchen;\ns.birth=$scope.upbirth;\ns.zhuzhi=$scope.upzhuzhi\n$scope.ShowUpdate=false;\n}\n}\n});\n<\/script>\n<style>\nspan{\ncolor: red;\n}\n.yellow{\nbackground-color: yellow;\n}\n.red{\nbackground-color: red;\n}\n\n\n</style>\n</head>\n<body ng-app="myApp" ng-controller="myCtrl">\n查询:<input type="text" placeholder="按照关键字模糊查询" ng-model="selectKey" />\n排序:<select ng-model="orderKey">\n<option value="">--请排序--</option>\n<option value="name">按名字排序</option>\n<option value="-name">按名字降序</option>\n<option value="birth">按年龄正序</option>\n<option value="-birth">按年龄倒序</option>\n</select><br />\n<br />\n<input type="button" value="全选反选" ng-click="checkAll()"/>\n<input type="button" value="批量删除" ng-click="deleteAll()" />\n<input type="button" value="添加" ng-click="addShow()" />\n<br />\n<br />\n<div ng-show="showAdd">\n姓名:<input type="text" placeholder="请输入姓名" ng-model="addname"/><span ng-show="showName">姓名不能为空</span><br />\n性别:男<input type="radio" name="sex" value="男" ng-model="chen"/> \n         女<input type="radio" name="sex" value="女" ng-model="chen"/><span ng-show="showSex">性别不能为空</span><br />\n出生日期:<input type="date" placeholder="年/月/日" ng-model="addbirth" /><span ng-show="showBirth">出生日期不能为空</span><br />\n住址:<select ng-init="s=pros[0]" ng-model="s" ng-options="p.pro for p in pros" ng-change="changcity(s)">\n<option value="">--请选择省份--</option>\n</select>\n<select ng-init="c=citys[0]" ng-model="c" ng-options="c for c in s.children">\n<option value="">--请选择城市--</option>\n</select><br />\n<input type="button" value="添加" ng-click="add()"/>\n</div>\n<br />\n\n<table border="1px" cellpadding="5px" cellspacing="0px">\n<tr>\n<th><input type="checkbox" ng-model="s.ck"/></th>\n<th>姓名</th>\n<th>性别</th>\n<th>出生日期</th>\n<th>住址</th>\n<th>操作</th>\n</tr>\n<tr ng-repeat="s in stu|filter:selectKey|orderBy:orderKey" class="{{$index%2? \'yellow\':\'red\'}}">\n<td><input type="checkbox" ng-model="s.ck"/></td>\n<td>{{s.name}}</td>\n<td>{{s.sex}}</td>\n<td >{{s.birth|date:\'yyyy-MM-dd\'}}</td>\n<td>{{s.zhuzhi}}</td>\n<td>\n<input type="button" value="删除 " ng-click="deleteStu(s.name)"/>\n<input type="button" value="修改" ng-click="updateShow(s.name)" />\n</td>\n</tr>\n</table>\n<br />\n<div ng-show="ShowUpdate">\n姓名:<input type="text" placeholder="请输入姓名" ng-model="upname"/><br />\n性别:男<input type="radio" name="sex" value="男" ng-model="upchen"/>\n         女<input type="radio" name="sex" value="女" ng-model="upchen"/><br />\n出生日期:<input type="date" ng-model="upbirth"/><br />\n住址:<input type="text" placeholder="请输入住址" ng-model="upzhuzhi" /><br />\n<input type="button" value="提交修改" ng-click="updateStu()" /><br />\n</div>\n\n\n</body>\n</html>\n')])])])])}),[],!1,null,null,null);e.default=r.exports}}]);