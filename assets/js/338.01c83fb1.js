(window.webpackJsonp=window.webpackJsonp||[]).push([[338],{827:function(a,s,r){"use strict";r.r(s);var t=r(6),n=Object(t.a)({},(function(){var a=this.$createElement,s=this._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":this.$parent.slotKey}},[s("h2",{attrs:{id:"spring-cloud使用hystrix-dashboard-熔断仪表盘-查看监控数据"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#spring-cloud使用hystrix-dashboard-熔断仪表盘-查看监控数据"}},[this._v("#")]),this._v(" Spring Cloud使用Hystrix Dashboard（熔断仪表盘）查看监控数据")]),this._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[this._v("我们已经知道 Hystrix 提供了监控的功能，可以通过 hystrix.stream 端点来获取监控数据，但是这些数据是以字符串的形式展现的，实际使用中不方便查看。我们可以借助 Hystrix Dashboard 对监控进行图形化展示。\n\nHystrix Dashboard 是一款针对 Hystrix 进行实时监控的工具，通过 Hystrix Dashboard 可以直观地看到各 Hystrix Command 的请求响应时间，请求成功率等数据。\n\n下面我们单独创建一个项目来集成 dashboard。\n\n创建一个 Maven 项目 hystrix-dashboard-demo，在 pom.xml 中添加 dashboard 的依赖，代码如下所示。\n<dependency>\n    <groupId>org.springframework.cloud</groupId>\n    <artifactId>spring-cloud-starter-netflix-hystrix-dashboard</artifactId>\n</dependency>\n\n创建启动类，在启动类上添加 @EnableHystrixDashboard 注解，代码如下所示。\n@SpringBootApplication\n@EnableHystrixDashboard\npublic class DashboardApplication {\n    public static void main(String[] args) {\n        SpringApplication.run(DashboardApplication.class, args);\n    }\n}\n在属性配置文件中只需要配置服务名称和服务端口：\nspring.application.name=hystrix-dashboard-demo\nserver.port=9011\n\n然后启动服务，访问 http://localhost:9011/hystrix\n\n")])])])])}),[],!1,null,null,null);s.default=n.exports}}]);