(window.webpackJsonp=window.webpackJsonp||[]).push([[585],{1073:function(t,e,n){"use strict";n.r(e);var a=n(6),r=Object(a.a)({},(function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h2",{attrs:{id:"html-标签"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#html-标签"}},[t._v("#")]),t._v(" HTML "),n("meta"),t._v("标签")]),t._v(" "),n("ol",[n("li",[t._v("name属性\nname 属性可以用来定义网页的关键字、描述、作者以及版权信息等等。我们来看一下它的常用属性值：")])]),t._v(" "),n("p",[t._v("name 常见属性值\n常用属性值\t说明\nkeywords\t用来定义网页的关键字。关键字可以是多个，之间需要用英文逗号,隔开。\ndescription\t用来定义网页的描述。\nauthor\t用来定义网页的作者。\ncopyright\t用来定义网页的版权信息。\n当 name 属性规定好这些信息后，后面还需紧跟 content 属性设置具体的内容，这样才可以生效。具体使用语法如下：\n")]),n("meta",{attrs:{name:"keywords",content:"<head>标签描述"}}),t._v(" "),n("meta",{attrs:{name:"description",content:"这篇文章主要对<head>标签进行详细讲解"}}),t._v(" "),n("meta",{attrs:{name:"author",content:"author"}}),t._v(" "),n("meta",{attrs:{name:"copyright",content:"本站所有教程均为原创，版权所有，禁止转载。否则将追究法律责任。"}}),n("p"),t._v(" "),n("ol",{attrs:{start:"2"}},[n("li",[t._v("charset属性\ncharset 是 HTML 5 中的新属性，用来定义页面的编码格式。它的常用属性值见下表：")])]),t._v(" "),n("p",[t._v("charset 常用属性值\n常用属性值\t说明\nISO-8859-1\t表示网页的默认编码格式。\nUTF-8\t表示万国码，是目前最常用的编码格式。\ngb2312\t表示国际汉字码，不包含繁体。\ngbk\t表示国家标准扩展版。增加了繁体，包含所有亚洲字符集。\n具体代码如下所示：\n")]),n("head",[n("meta",{attrs:{charset:"UTF-8"}}),t._v(" "),n("meta",{attrs:{charset:"gb2312"}}),t._v(" "),n("meta",{attrs:{charset:"ISO-8859-1"}}),t._v(" "),n("meta",{attrs:{charset:"gbk"}})]),t._v("\n以上为语法演示，在使用时根据需求，只使用其中一个即可。"),n("p"),t._v(" "),n("ol",{attrs:{start:"3"}},[n("li",[t._v("http-equiv属性\n所有主流浏览器都支持 http-equiv 属性。它可以设置网页的过期时间，自动刷新等，有以下几个常用属性值：")])]),t._v(" "),n("p",[t._v("http-equiv 常用属性值\n常用属性值\t说明\nexpires\t设置网页的过期时间。\nrefresh\t设置网页自动刷新的时间间隔，单位是秒。\ncontent-type\t定义文件的类型，用来告诉浏览器该以什么格式和编码来解析此文件。\n我们通过一段简单的代码来看一下如何使用：\n<!DOCTYPE html>\n")]),n("html",{attrs:{lang:"en"}},[n("head",[n("meta",{attrs:{charset:"UTF-8"}}),t._v(" "),n("meta",{attrs:{"http-equiv":"content-type",content:"text/html"}}),t._v(" "),n("meta",{attrs:{"http-equiv":"expires",content:"Dec 20 2090"}}),t._v(" "),n("meta",{attrs:{"http-equiv":"refresh",content:"1000"}}),t._v(" "),n("title",[t._v("Document")])]),t._v(" "),n("body")]),t._v("\n上面使用了 "),n("meta"),t._v(" 的几个常用属性，我们来看一下：\n"),n("meta",{attrs:{charset:"UTF-8"}}),t._v(" 设置了网页的编码格式为 utf-8；\n"),n("meta",{attrs:{"http-equiv":"content-type",content:"text/html"}}),t._v(" 用来告诉浏览器本网页编写的是 HTML 代码，需要用 HTML 的格式来进行解析。在下面会附上 content-type 常用文件类型值讲解；\n"),n("meta",{attrs:{"http-equiv":"expires",content:"Dec 20 2090"}}),t._v(" 定义网页于 2090 年 12 月 20 日过期；\n"),n("meta",{attrs:{"http-equiv":"refresh",content:"1000"}}),t._v(" 设置了页面每隔 1000 秒就会进行一次刷新。\n我们可以看出，http-equiv 属性和 name 属性一般与 content 属性配合使用，有点类似固定搭配。以上只是 "),n("meta"),t._v(" 标签常用的属性，实际上它的属性远远不止这些，但是到目前为止，我们只需会用上面讲过的这几个属性即可。"),n("p"),t._v(" "),n("ol",{attrs:{start:"4"}},[n("li",[t._v("content-type常用属性值\n上面我们提到了 content-type 用来定义文件的类型，在此处为读者附上 content-type 常用文件类型值（只做了解）：")])]),t._v(" "),n("p",[t._v("content-type 常用文件类型值\n常用属性值\t说明\ntext/html\t表示该文档是 HTML 格式的文档。\ntext/plain\t表示该文档是纯文本格式的文档。\ntext/xml\t表示该文档是 XML 格式的文档。\nimage/gif\t表示该文档是 gif 图片格式的文档。\nimage/jpeg\t表示该文档是 jpg 图片格式的文档。\nimage/png\t表示该文档是 png 图片格式的文档。")])])}),[],!1,null,null,null);e.default=r.exports}}]);