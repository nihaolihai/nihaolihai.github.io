(window.webpackJsonp=window.webpackJsonp||[]).push([[602],{1093:function(t,n,l){"use strict";l.r(n);var e=l(6),h=Object(e.a)({},(function(){var t=this.$createElement,n=this._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":this.$parent.slotKey}},[n("h2",{attrs:{id:"绝对路径和相对路径"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#绝对路径和相对路径"}},[this._v("#")]),this._v(" 绝对路径和相对路径")]),this._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[this._v("1. 绝对路径\n绝对路径分为本地绝对路径和网络绝对路径两种。本地绝对路径一般指从盘符开始，到文件名称结束；网络绝对路径指从网站的域名开始，到文件名结束，在使用时需要加上协议。绝对路径之所以称为绝对，是指当所有页面引用同一个文件时，使用的路径都是一样的。\n\n示例如下：\n\n①D:/Hbulider/HBuilder/tools/nview/index.js\n②C:/Users/admin/Desktop/C语言中文网/url/url.html\n③http://c.biancheng.net/view/7410.html\n④http://c.biancheng.net:80/view/7410.html\n⑤http://c.biancheng.net \n\n我们来具体分析一下：\n ① 和 ② 表示本地绝对路径，因为它们是从盘符开始的；\n ③ ④ ⑤表示网络绝对路径，其中，③ 和 ④ 表示的地址是相同的（因为 http 默认端口号是 80，而且可以省略），类似于 ⑤ 这种省略路径和文件名的 url 属于特例，浏览器在解析时会自动解析项目里的 index.html 文件。\n2. 相对路径\n相对路径与绝对路径类似，不同的是在描述目录或文件路径时，所采用的参考点不同。绝对路径以域名或盘符为参考点，到文件名称结束；相对路径以当前文件位置为参考点，到文件名称结束。\n\n目前有一个需求，在 index.html 页面中有一个 <a> 标签，点击它要跳转到 login.html，那么我们可以怎么实现呢？\n\n毫无疑问，可以使用上面讲过的绝对路径 <a href=”http://c.biancheng.net/html/login.html”></a> 来跳转到 login.html；此处我们还可以使用相对路径实现。具体有以下几种方式：\n<a href=”./html/login.html”>跳转到login.html</a>\n<a href=”html/login.html”>跳转到login.html</a>\n<a href=”../html/login.html”>跳转到login.html</a>\n\n在上述3种方式中，我们使用了 ./ 以及 ../，接下来看一下他们分别代表什么呢？\n ./ 表示同级目录；\n ../ 表示上一级目录， ../../ 表示上两级目录，以此类推。\n\n其中，./可以省略不写，也就是说./html/login.html与html/login.html被浏览器解析为同一个路径。\n相对路径的写法可以有多种，我们只需要把./以及../代表的含义搞清楚，就可以应对所有的相对路径。\n")])])])])}),[],!1,null,null,null);n.default=h.exports}}]);