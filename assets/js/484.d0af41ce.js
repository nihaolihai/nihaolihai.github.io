(window.webpackJsonp=window.webpackJsonp||[]).push([[484],{972:function(e,n,t){"use strict";t.r(n);var o=t(6),s=Object(o.a)({},(function(){var e=this.$createElement,n=this._self._c||e;return n("ContentSlotsDistributor",{attrs:{"slot-key":this.$parent.slotKey}},[n("h2",{attrs:{id:"mongodb删除数据-remove-和delete-方法"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#mongodb删除数据-remove-和delete-方法"}},[this._v("#")]),this._v(" MongoDB删除数据：remove()和delete()方法")]),this._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[this._v('remove() 方法\n如果不再需要 MongoDB 中存储的文档，可以通过删除命令将其永久删除。删除 MongoDB 集合中的数据可以使用 remove() 函数。\n\nremove() 函数可以接受一个查询文档作为可选参数来有选择性地删除符合条件的文档。删除文档是永久性的，不能撤销，也不能恢复。因此，在执行 remove() 函数前最好先用 find() 命令来查看是否正确。\n\nremove() 方法的基本语法格式如下所示：\ndb.collection.remove(\n    <query>,\n    {\n        justOne: <boolean>, writeConcern: <document>\n    }\n)\n\n参数说明：\nquery：必选项，是设置删除的文档的条件。\njustOne：布尔型的可选项，默认为false，删除符合条件的所有文档，如果设为 true，则只删除一个文档。\nwriteConcem：可选项，设置抛出异常的级别。\n\n下面举例说明删除集合中的文档，先进行两次插入操作，代码如下：\n>db.test.insert(\n    {\n        title : \'MongoDB\',\n        description : \'MongoDB 是一个 NoSQL 数据库\',\n        by : \'C语言中文网\',\n        tags : [\'mongodb\', \'database\', \'NoSQL\'],\n        likes : 100\n    }\n)\n使用 find() 函数查询的代码如下：\n> db.test.find()\n{ "_id" : Objectld ("5ba9d8b：L24857a5fefclfde6"), "titlen : "MongoDB", "description" : "MongoDB 是一个 NoSQL 数据库", "by" : "C语言中文网", "tags" : [ "mongodb", "database", "NoSQL" ], "Tikes" : 100 }\n{ "_id" : ObjectId("5ba9d90924857a5fefclfde7"), "title" : "MongoDB ", "description" : "MongoDB 是一个 NoSQL 数据库", "by" : "C语言中文网", "tags" : [ "mongodb", "database", "NoSQL"], "likes" : 100 }\n接下来移除 title 为“MongoDB”的文档，执行以下操作后，查询会发现两个文档记录均被删除：\n>db.test.remove({\'title\': \'MongoDB\'})\nWriteResult({ \'nRemoved\' : 2 })    #删除了两条数据\n另外，可以设置比较条件，如下操作为删除 price 大于 3 的文档记录：\n>db.test.remove(\n    {\n        price:{$gt:3}\n    }\n)\ndelete() 方法\n官方推荐使用 deleteOne() 和 deleteMany() 方法删除文档，语法格式如下：\ndb.collection.deleteMany ({})\ndb.collection.deleteMany ({ status : "A" })\ndb.collection.delete.One ({ status : "D" })\n\n第一条语句删除集合下所有的文档，第二条语句删除 status 等于 A 的全部文档，第三条语句删除 status 等于 D 的一个文档。\n\n')])])])])}),[],!1,null,null,null);n.default=s.exports}}]);