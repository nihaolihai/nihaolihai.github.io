(window.webpackJsonp=window.webpackJsonp||[]).push([[584],{1071:function(t,n,e){"use strict";e.r(n);var o=e(6),a=Object(o.a)({},(function(){var t=this.$createElement,n=this._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":this.$parent.slotKey}},[n("h2",{attrs:{id:"html-form-标签"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#html-form-标签"}},[this._v("#")]),this._v(" HTML(form)标签")]),this._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[this._v('1. 简述<form>标签\nHTML 中规定，使用 <form> 标签来表示表单。我们都知道表格的行、列及单元格需要放在 <table></table> 标签中，表单里的元素也不例外，同样需要放在 <form></form> 标签中。<form> 标签有几个常用的属性，见下表：\n\n<form> 标签的常用属性\n常用属性\t属性值\t说明\naction\turl\t用户点击提交按钮时，表单被提交到的位置。\nmethod\tget / post\t表单提交时所使用的 http 请求方法，只能是 get 或 post 中的任意一种。\nname\t自定义\t表单的名称，不能包含特殊字符和空格。\n\n具体语法如下：\n\n<form action="url" method="post" name="formName"></form>\n\n此处使用提交方法为post，还可以设置为get。我们来看一下两者之间有什么区别：\nget ：用户点击提交按钮后，提交的信息会被显示在页面的地址栏中。一般情况下，get提交方式中不建议包含密码，因为密码被提交到地址栏，不安全。\npost：如果表单包含密码这种敏感信息，建议使用post方式进行提交，这样数据会传送到后台，不显示在地址栏中，相对安全。\n\n2. <form>标签所有属性\n以上我们列举的是 <form> 标签的常用属性，接下来看一下它的所有属性：\n\n<form> 标签的所有属性\n所有属性\t描述\naction\t规定用户点击提交按钮时，表单被提交到的位置。\nmethod\t规定表单提交时所使用的 http 请求方法，只能是 get 或 post 中的任意一种。\nname\t定义表单的名称，不能包含特殊字符和空格。\naccept-charset\t规定在被提交表单中使用的字符集（默认：页面字符集）。\nautocomplete\t规定浏览器应该自动完成表单（默认：开启）。\nenctype\t规定被提交数据的编码（默认：url-encoded）。\nnovalidate\t规定浏览器不验证表单。\ntarget\t规定 action 属性中地址的目标（默认：_self）。\n')])])])])}),[],!1,null,null,null);n.default=a.exports}}]);