(window.webpackJsonp=window.webpackJsonp||[]).push([[171],{658:function(n,i,e){"use strict";e.r(i);var t=e(6),l=Object(t.a)({},(function(){var n=this,i=n.$createElement,e=n._self._c||i;return e("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[e("h2",{attrs:{id:"java-文件写入"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#java-文件写入"}},[n._v("#")]),n._v(" Java 文件写入")]),n._v(" "),e("p",[n._v("/**\nauthor by runoob.com\nMain.java\n*/")]),n._v(" "),e("p",[n._v("import java.io.*;")]),n._v(" "),e("p",[n._v('public class Main {\npublic static void main(String[] args)  {\ntry {\nBufferedWriter out = new BufferedWriter(new FileWriter("runoob.txt"));\nout.write("菜鸟教程");\nout.close();\nSystem.out.println("文件创建成功！");\n} catch (IOException e) {\n}\n}\n}')]),n._v(" "),e("p",[n._v('public class Main {\npublic static void main(String[] args)  {\ntry {\nBufferedReader in = new BufferedReader(new FileReader("test.log"));\nString str;\nwhile ((str = in.readLine()) != null) {\nSystem.out.println(str);\n}\nSystem.out.println(str);\n} catch (IOException e) {\n}\n}\n}')]),n._v(" "),e("p",[n._v("import java.io.*;")]),n._v(" "),e("p",[n._v('public class Main\n{\npublic static void main(String[] args)\n{\ntry{\nFile file = new File("c:\\test.txt");\nif(file.delete()){\nSystem.out.println(file.getName() + " 文件已被删除！");\n}else{\nSystem.out.println("文件删除失败！");\n}\n}catch(Exception e){\ne.printStackTrace();\n}\n}\n}')]),n._v(" "),e("ul",[e("li",[n._v("复制")])]),n._v(" "),e("p",[n._v("import java.io.*;")]),n._v(" "),e("p",[n._v('public class Main {\npublic static void main(String[] args) throws Exception {\nBufferedWriter out1 = new BufferedWriter(new FileWriter("srcfile"));\nout1.write("string to be copied\\n");\nout1.close();\nInputStream in = new FileInputStream(new File("srcfile"));\nOutputStream out = new FileOutputStream\n(new File("destnfile"));\nbyte[] buf = new byte[1024];\nint len;\nwhile ((len = in.read(buf)) > 0) {\nout.write(buf, 0, len);\n}\nin.close();\nout.close();\nBufferedReader in1 = new BufferedReader(new FileReader("destnfile"));\nString str;\nwhile ((str = in1.readLine()) != null) {\nSystem.out.println(str);\n}\nin1.close();\n}\n}')]),n._v(" "),e("ul",[e("li",[n._v("追加")])]),n._v(" "),e("p",[n._v("import java.io.*;")]),n._v(" "),e("p",[n._v('public class Main {\npublic static void main(String[] args) throws Exception {\ntry {\nBufferedWriter out = new BufferedWriter(new FileWriter("filename"));\nout.write("aString1\\n");\nout.close();\nout = new BufferedWriter(new FileWriter("filename",true));\nout.write("aString2");\nout.close();\nBufferedReader in = new BufferedReader(new FileReader("filename"));\nString str;\nwhile ((str = in.readLine()) != null) {\nSystem.out.println(str);\n}\nin.close();\n}\ncatch (IOException e) {\nSystem.out.println("exception occoured"+ e);\n}\n}\n}')]),n._v(" "),e("ul",[e("li",[n._v("文件大小")])]),n._v(" "),e("p",[n._v('public class Main {\npublic static long getFileSize(String filename) {\nFile file = new File(filename);\nif (!file.exists() || !file.isFile()) {\nSystem.out.println("文件不存在");\nreturn -1;\n}\nreturn file.length();\n}\npublic static void main(String[] args) {\nlong size = getFileSize("c:/java.txt");\nSystem.out.println("java.txt文件大小为: " + size);\n}\n}')]),n._v(" "),e("ul",[e("li",[n._v("文件重命名")])]),n._v(" "),e("p",[n._v('public class RunoobTest {\npublic static void main(String[] args) throws IOException {\n// 旧的文件或目录\nFile oldName = new File("./runoob-test.txt");\n// 新的文件或目录\nFile newName = new File("./runoob-test-2.txt");\nif (newName.exists()) {  //  确保新的文件名不存在\nthrow new java.io.IOException("file exists");\n}\nif(oldName.renameTo(newName)) {\nSystem.out.println("已重命名");\n} else {\nSystem.out.println("Error");\n}\n}\n}')]),n._v(" "),e("ul",[e("li",[n._v("文件只读")])]),n._v(" "),e("p",[n._v('public class Main {\npublic static void main(String[] args) {\nFile file = new File("C:/java.txt");\nSystem.out.println(file.setReadOnly());\nSystem.out.println(file.canWrite());\n}\n}')]),n._v(" "),e("ul",[e("li",[n._v("文件存在")])]),n._v(" "),e("p",[n._v('public class Main {\npublic static void main(String[] args) {\nFile file = new File("C:/java.txt");\nSystem.out.println(file.exists());\n}\n}')]),n._v(" "),e("ul",[e("li",[n._v("指定路径下创建文件")])]),n._v(" "),e("p",[n._v('public class Main {\npublic static void main(String[] args) throws Exception {\nFile file = null;\nFile dir = new File("C:/");\nfile = File.createTempFile\n("JavaTemp", ".javatemp", dir);\nSystem.out.println(file.getPath());\n}\n}')]),n._v(" "),e("ul",[e("li",[n._v("临时文件已创建")])]),n._v(" "),e("p",[n._v('public class Main {\npublic static void main(String[] args) throws Exception {\nFile temp = File.createTempFile("testrunoobtmp", ".txt");\nSystem.out.println("文件路径: "+temp.getAbsolutePath());\ntemp.deleteOnExit();\nBufferedWriter out = new BufferedWriter(new FileWriter(temp));\nout.write("aString");\nSystem.out.println("临时文件已创建:");\nout.close();\n}\n}')]),n._v(" "),e("ul",[e("li",[n._v("修改文件修改时间")])]),n._v(" "),e("p",[n._v('public class Main {\npublic static void main(String[] args) throws Exception {\nFile fileToChange = new File("C:/myjavafile.txt");\nfileToChange.createNewFile();\nDate filetime = new Date(fileToChange.lastModified());\nSystem.out.println(filetime.toString());\nSystem.out.println(fileToChange.setLastModified(System.currentTimeMillis()));\nfiletime = new Date(fileToChange.lastModified());\nSystem.out.println(filetime.toString());\n}\n}')]),n._v(" "),e("ul",[e("li",[n._v("获取文件修改时间")])]),n._v(" "),e("p",[n._v("import java.io.File;\nimport java.util.Date;")]),n._v(" "),e("p",[n._v('public class Main {\npublic static void main(String[] args) {\nFile file = new File("Main.java");\nLong lastModified = file.lastModified();\nDate date = new Date(lastModified);\nSystem.out.println(date);\n}\n}')]),n._v(" "),e("ul",[e("li",[n._v("创建文件")])]),n._v(" "),e("p",[n._v('public class Main {\npublic static void main(String[] args) {\ntry{\nFile file = new File("C:/myfile.txt");\nif(file.createNewFile())\nSystem.out.println("文件创建成功！");\nelse\nSystem.out.println("出错了，该文件已经存在。");\n}\ncatch(IOException ioe) {\nioe.printStackTrace();\n}\n}\n}')]),n._v(" "),e("ul",[e("li",[n._v("文件路径比较")])]),n._v(" "),e("p",[n._v('public class Main {\npublic static void main(String[] args) {\nFile file1 = new File("C:/File/demo1.txt");\nFile file2 = new File("C:/java/demo1.txt");\nif(file1.compareTo(file2) == 0) {\nSystem.out.println("文件路径一致！");\n} else {\nSystem.out.println("文件路径不一致！");\n}\n}\n}')]),n._v(" "),e("ul",[e("li",[n._v("循环文件")])]),n._v(" "),e("p",[n._v('public class Main {\npublic static void main(String[] argv) throws Exception {\nSystem.out.println("遍历目录");\nFile dir = new File("/www/java"); //要遍历的目录\nvisitAllDirsAndFiles(dir);\n}\npublic static void visitAllDirsAndFiles(File dir) {\nSystem.out.println(dir);\nif (dir.isDirectory()) {\nString[] children = dir.list();\nfor (int i = 0; i < children.length; i++) {\nvisitAllDirsAndFiles(new File(dir, children[i]));\n}\n}\n}\n}')]),n._v(" "),e("p",[n._v('class Main {\npublic static void main(String[] args) {\nFile dir = new File("F:");\nFile[] files = dir.listFiles();\nFileFilter fileFilter = new FileFilter() {\npublic boolean accept(File file) {\nreturn file.isDirectory();\n}\n};\nfiles = dir.listFiles(fileFilter);\nSystem.out.println(files.length);\nif (files.length == 0) {\nSystem.out.println("目录不存在或它不是一个目录");\n}\nelse {\nfor (int i=0; i< files.length; i++) {\nFile filename = files[i];\nSystem.out.println(filename.toString());\n}\n}\n}\n}')]),n._v(" "),e("p",[n._v('class Main {\npublic static void main(String[] args) {\nFile dir = new File("C:");\nFilenameFilter filter = new FilenameFilter() {\npublic boolean accept\n(File dir, String name) {\nreturn name.startsWith("b");\n}\n};\nString[] children = dir.list(filter);\nif (children == null) {\nSystem.out.println("目录不存在或它不是一个目录");\n}\nelse {\nfor (int i=0; i < children.length; i++) {\nString filename = children[i];\nSystem.out.println(filename);\n}\n}\n}\n}')])])}),[],!1,null,null,null);i.default=l.exports}}]);