(window.webpackJsonp=window.webpackJsonp||[]).push([[456],{944:function(n,e,t){"use strict";t.r(e);var a=t(6),i=Object(a.a)({},(function(){var n=this.$createElement,e=this._self._c||n;return e("ContentSlotsDistributor",{attrs:{"slot-key":this.$parent.slotKey}},[e("h2",{attrs:{id:"swing-星座选择器界面的实现"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#swing-星座选择器界面的实现"}},[this._v("#")]),this._v(" swing 星座选择器界面的实现")]),this._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v('(1) 创建一个 SampeDemo 类，在 main() 方法中调用它的构造方法。代码如下：\npackage ch17;\nimport java.awt.event.ActionEvent;\nimport java.awt.event.ActionListener;\nimport java.awt.event.ItemEvent;\nimport java.awt.event.ItemListener;\nimport javax.swing.JButton;\nimport javax.swing.JComboBox;\nimport javax.swing.JFrame;\nimport javax.swing.JLabel;\nimport javax.swing.JPanel;\nimport javax.swing.JTextField;\npublic class SampeDemo\n{\n    public static void main(String[] args)\n    {\n        new SampeDemo();    //调用构造方法\n    }\n}\n\n(2) 创建 SampeDemo  构造方法完成窗口的创建，按钮和下拉列表的添加，以及相应事件的监听。具体代码如下：\nprivate JPanel panel=new JPanel();\nprivate JComboBox cmb=new JComboBox();    //创建JComboBox\nprivate JLabel label=new JLabel("添加新星座：");\nprivate JLabel showInfo=new JLabel();    //用于显示信息\nprivate JTextField jtf=new JTextField(16);    //用于输入信息\nprivate JButton buttonAdd=new JButton("新增");\nprivate JButton buttonDel=new JButton("删除");\npublic SampeDemo()\n{\n    JFrame frame=new JFrame("选择你的星座");\n    cmb.addItem("--请选择--");    //向下拉列表中添加一项\n    cmb.addItem("巨蟹座");\n    cmb.addItem("狮子座");\n    cmb.addItem("双鱼座");\n    panel.add(cmb);\n    panel.add(label);\n    panel.add(jtf);\n    panel.add(buttonAdd);\n    panel.add(buttonDel);\n    frame.add(panel);\n    buttonAdd.addActionListener(new MyActionListener());    //“添加”按钮的事件\n    buttonDel.addActionListener(new MyActionListener());    //“删除”按钮的事件\n    cmb.addItemListener(new MyItemListener());    //下拉列表的事件\n    frame.setBounds(300,200,600,200);\n    frame.setVisible(true);\n    frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n}\n\n上述程序创建的下拉列表为 cmb，调用它的 addItem() 方法向其中添加了两个选项。程序分别监听了按下“新增”按钮和“删除”按钮时的单击事件，以及从下拉列表中选择项时的选中事件。\n\n(3) 创建 MyItemListener 类，实现 ItemListener 接口对选中事件进行处理，此时将选中项显示到文本框中。实现代码如下：\n// 监听选中事件\nclass MyItemListener implements ItemListener\n{\n    @Override\n    public void itemStateChanged(ItemEvent e)\n    {\n        String str=e.getItem().toString();\n        panel.add(showInfo);\n        showInfo.setText("您选择的星座是："+str);\n    }\n}\n\n(4) 创建 MyActionListener 类，实现 ActionListener 接口对按钮的单击事件进行处理。实现代码如下：\n// 监听添加和删除按钮事件\nclass MyActionListener implements ActionListener\n{\n    @Override\n    public void actionPerformed(ActionEvent e)\n    {\n        String command=e.getActionCommand();\n        //添加按钮处理\n        if(command.equals("新增"))\n        {\n            if(jtf.getText().length()!=0)\n            {\n                cmb.addItem(jtf.getText());    //添加项\n                panel.add(showInfo);\n                showInfo.setText("添加成功，新增了："+jtf.getText());\n            }\n            else\n            {\n                panel.add(showInfo);\n                showInfo.setText("请输入要添加星座");\n            }\n        }\n        //删除按钮处理\n        if(command.equals("删除"))\n        {\n            if(cmb.getSelectedIndex()!=-1)\n            {\n                //先获得要删除的项的值\n                String strDel=cmb.getSelectedItem().toString();\n                cmb.removeItem(strDel);    //删除项\n                panel.add(showInfo);\n                showInfo.setText("删除成功，删除了："+strDel);\n            }\n            else\n            {\n                panel.add(showInfo);\n                showInfo.setText("请选择要删除的星座");\n            }\n        }\n    }\n}\n\n(5) 运行程序，在下拉列表中会出现 4 个选项，选择其中的“狮子座”项，此时显示效果如图 1 所示。\n\n')])])]),e("p",[e("img",{attrs:{src:"http://c.biancheng.net/uploads/allimg/181105/3-1Q1051G00Y00.gif",alt:"RUNOOB 图标"}})])])}),[],!1,null,null,null);e.default=i.exports}}]);