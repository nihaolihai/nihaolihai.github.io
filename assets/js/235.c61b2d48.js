(window.webpackJsonp=window.webpackJsonp||[]).push([[235],{725:function(e,t,a){"use strict";a.r(t);var n=a(6),s=Object(n.a)({},(function(){var e=this.$createElement,t=this._self._c||e;return t("ContentSlotsDistributor",{attrs:{"slot-key":this.$parent.slotKey}},[t("h2",{attrs:{id:"mybatis中settings属性配置详解"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#mybatis中settings属性配置详解"}},[this._v("#")]),this._v(" MyBatis中settings属性配置详解")]),this._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v('在 MyBatis 中 settings 是最复杂的配置，它能深刻影响 MyBatis 底层的运行，但是在大部分情况下使用默认值便可以运行，所以在大部分情况下不需要大量配置它，只需要修改一些常用的规则即可，比如自动映射、驼峰命名映射、级联规则、是否启动缓存、执行器（Executor）类型等。settings 配置项说明，如表 1 所示。\n\n表 1 settings 配置项说明\n配置项\t作用\t配置选项\t默认值\ncacheEnabled\t该配置影响所有映射器中配置缓存的全局开关\ttrue|false\ttrue\nlazyLoadingEnabled\t延迟加载的全局开关。当开启时，所有关联对象都会延迟加载。在特定关联关系中可通过设置 fetchType 属性来覆盖该项的开关状态 \ttrue|false\tfalse\naggressiveLazyLoading\t当启用时，对任意延迟属性的调用会使带有延迟加载属性的对象完整加载；反之，每种属性将会按需加载\ttrue|felse\t版本3.4.1 （不包含）\n之前 true，之后 false\nmultipleResultSetsEnabled \t是否允许单一语句返回多结果集（需要兼容驱动）\ttrue|false\ttrue\nuseColumnLabel\t使用列标签代替列名。不同的驱动会有不同的表现，具体可参考相关驱动文档或通过测试这两种不同的模式来观察所用驱动的结果\ttrue|false\ttrue\nuseGeneratedKeys\t允许JDBC 支持自动生成主键，需要驱动兼容。如果设置为 true，则这个设置强制使用自动生成主键，尽管一些驱动不能兼容但仍可正常工作（比如 Derby）\ttrue|false\tfalse\nautoMappingBehavior\t指定 MyBatis 应如何自动映射列到字段或属性。\nNONE 表示取消自动映射。\nPARTIAL 表示只会自动映射，没有定义嵌套结果集和映射结果集。\nFULL 会自动映射任意复杂的结果集（无论是否嵌套）\tNONE、PARTIAL、FULL\tPARTIAL\nautoMappingUnkno wnColumnBehavior\t指定自动映射当中未知列（或未知属性类型）时的行为。 默认是不处理，只有当日志级别达到 WARN 级别或者以下，才会显示相关日志，如果处理失败会抛出 SqlSessionException 异常\tNONE、WARNING、FAILING\tNONE\ndefaultExecutorType\t配置默认的执行器。SIMPLE 是普通的执行器；REUSE 会重用预处理语句（prepared statements）；BATCH 执行器将重用语句并执行批量更新 \tSIMPLE、REUSE、BATCH\tSIMPLE\ndefaultStatementTimeout\t设置超时时间，它决定驱动等待数据库响应的秒数\t任何正整数\tNot Set (null)\ndefaultFetchSize\t设置数据库驱动程序默认返回的条数限制，此参数可以重新设置\t任何正整数  \tNot Set (null)\nsafeRowBoundsEnabled\t允许在嵌套语句中使用分页（RowBounds）。如果允许，设置 false\ttrue|false\tfalse\nsafeResultHandlerEnabled\t允许在嵌套语句中使用分页（ResultHandler）。如果允许，设置false\ttrue|false\ttrue\nmapUnderscoreToCamelCase\t是否开启自动驼峰命名规则映射，即从经典数据库列名 A_COLUMN 到经典 Java 属性名 aColumn 的类似映射\ttrue|false\tfalse\nlocalCacheScope\nMyBatis 利用本地缓存机制（Local Cache）防止循环引用（circular references）和加速联复嵌套査询。\n默认值为 SESSION，这种情况下会缓存一个会话中执行的所有查询。若设置值为 STATEMENT，本地会话仅用在语句执行上，对相同 SqlScssion 的不同调用将不会共享数据  \tSESSION|STATEMENT\tSESSION\njdbcTypeForNull\n当没有为参数提供特定的 JDBC 类型时，为空值指定 JDBC 类型。某些驱动需要指定列的 JDBC 类型，多数情况直接用一般类型即可，比如 NULL、VARCHAR 或 OTHER\tNULL、VARCHAR、OTHER  \tOTHER\nlazyLoadTriggerMethods\n指定哪个对象的方法触发一次延迟加载\t—\tequals、clone、hashCode、toString\ndefaultScriptingLanguage\n指定动态 SQL 生成的默认语言\t—\torg.apache.ibatis\n.script.ing.xmltags\n.XMLDynamicLanguageDriver\ncallSettersOnNulls\n指定当结果集中值为 null 时，是否调用映射对象的 setter（map 对象时为 put）方法，这对于 Map.kcySet() 依赖或 null 值初始化时是有用的。注意，基本类型（int、boolean 等）不能设置成 null\ttrue|false\tfalse\nlogPrefix\n指定 MyBatis 增加到日志名称的前缀 \t任何字符串\tNot set\nloglmpl\n指定 MyBatis 所用日志的具体实现，未指定时将自动査找\tSLF4J|LOG4J|LOG4J2|JDK_LOGGING\n|COMMONS_LOGGING\n|ST DOUT_LOGGING|NO_LOGGING\tNot set\nproxyFactory\t指定 MyBatis 创建具有延迟加栽能力的对象所用到的代理工具\tCGLIB|JAVASSIST\tJAVASSIST （MyBatis 版本为 3.3 及以上的）\nvfsImpl\t指定 VFS 的实现类  \t提供 VFS 类的全限定名，如果存在多个，可以使用逗号分隔 \tNot set\nuseActualParamName\t允许用方法参数中声明的实际名称引用参数。要使用此功能，项目必须被编译为 Java 8 参数的选择。（从版本 3.4.1 开始可以使用）\ttrue|false\ttruesettings 的配置项很多，但是真正用到的不会太多，我们把常用的配置项研究清楚就可以了，比如关于缓存的 cacheEnabled，关于级联的 lazyLoadingEnabled 和 aggressiveLazy Loading，关于自动映射的 autoMappingBehavior 和 mapUnderscoreToCamelCase，关于执行器类型的 defaultExecutorType 等。\n\n这里给出一个全量的配置样例，如下所示。\n纯文本复制\n<settings>\n    <setting name="cacheEnabled" value="true"/>\n    <setting name="lazyLoadingEnabled" value="true"/>\n    <setting name="multipleResultSetsEnabled" value="true"/>\n    <setting name="useColumnLabel" value="true"/>\n    <setting name="useGeneratedKeys" value="false"/>\n    <setting name="autoMappingBehavior" value="PARTIAL"/>\n    <setting name="autoMappingUnknownColumnBehavior" value="WARNING"/>\n    <setting name="defaultExecutorType" value="SIMPLE"/>\n    <setting name="defaultStatementTimeout" value="25"/>\n    <setting name="defaultFetchSize" value="100"/>\n    <setting name="safeRowBoundsEnabled" value="false"/>\n    <setting name="mapUnderscoreToCamelCase" value="false"/>\n    <setting name="localCacheScope" value="SESSION"/>\n    <setting name="jdbcTypeForNull" value="OTHER"/>\n    <setting name="lazyLoadTriggerMethods" value="equals,clone,hashCode,toString"/>\n</settings>\n\n')])])])])}),[],!1,null,null,null);t.default=s.exports}}]);