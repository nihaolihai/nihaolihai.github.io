(window.webpackJsonp=window.webpackJsonp||[]).push([[504],{992:function(t,n,s){"use strict";s.r(n);var a=s(6),e=Object(a.a)({},(function(){var t=this,n=t.$createElement,s=t._self._c||n;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"nginx"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#nginx"}},[t._v("#")]),t._v(" nginx")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[t._v("    常用命令\n    start nginx：打开 \n    start nginx：打开 \n    nginx "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("t ：测试配置文件是否有语法错误\n    nginx "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("s reopen：重启\n    nginx "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("c "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("D")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("\\orac\\nginx"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.18")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v(".0")]),t._v("\\conf\\nginx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("conf： 修改nginx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("conf文件需执行 \n    nginx "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("s reload：重新加载"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Nginx")]),t._v("配置文件，然后以优雅的方式重启\n    nginx "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("s stop：强制停止"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Nginx")]),t._v("服务\n    nginx "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("s quit：优雅地停止"),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Nginx")]),t._v("服务（即处理完所有请求后再停止服务）\n    查看运行情况 【ps aux"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v("grep nginx】 如下则启动成功\n    浏览器输入localhost"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("test"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("api能访问到内网机器"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v(".0")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v(".1")]),t._v("的"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3000")]),t._v("端口\n    nginx下的config配置\n    location "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("^")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("~")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("test"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("api  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            proxy_pass http"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v(".0")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v(".1")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            client_max_body_size "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),t._v("m"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            proxy_connect_timeout "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("300")]),t._v("s"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            proxy_send_timeout "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("300")]),t._v("s"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            proxy_read_timeout "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("300")]),t._v("s"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            access_by_lua_file "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("usr"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("local"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("nginx"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("lua"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("rose"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("lua"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    在浏览器中输入xxx123"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("tk的时候访问的内网服务器"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("192.168")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v(".10")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v(".38")]),t._v("的"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3000")]),t._v("端口"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("输入xxx456"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("tk访问"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("192.168")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v(".10")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v(".40")]),t._v("的"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),t._v("端口\n    server\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        listen "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        server_name xxx123"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("tk"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        charset utf"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        location "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            proxy_redirect off"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            proxy_set_header "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Host")]),t._v(" $host"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            proxy_set_header "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("X")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Real")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("IP $remote_addr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            proxy_set_header "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("X")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Forwarded")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("For")]),t._v(" $proxy_add_x_forwarded_for"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            proxy_pass http"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("192.168")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v(".10")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v(".38")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        access_log logs"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("xxx123"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("tk_access"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("log"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    \n    server\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        listen "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        server_name xxx456"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("tk"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        location "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            proxy_redirect off"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            proxy_set_header "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Host")]),t._v(" $host"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            proxy_set_header "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("X")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Real")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("IP $remote_addr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            proxy_set_header "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("X")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Forwarded")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("For")]),t._v(" $proxy_add_x_forwarded_for"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            proxy_pass http"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("192.168")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v(".10")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v(".40")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        access_log logs"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("xxx456"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("tk_access"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("log"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    如果想对后端机器做负载均衡，像下面这配置就可以把对nagios"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("xxx123"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("tk的请求分发给内网的"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("131")]),t._v("和"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("132")]),t._v("这两台机器做负载均衡了\n    upstream monitor_server "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        server "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("192.168")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v(".10")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v(".40")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        server "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("192.168")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v(".10")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v(".38")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3000")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    \n    server\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        listen "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        server_name nagios"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("xxx123"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("tk"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        location "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            client_max_body_size "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),t._v("m"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            proxy_connect_timeout "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("300")]),t._v("s"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            proxy_send_timeout "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("300")]),t._v("s"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            proxy_read_timeout "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("300")]),t._v("s"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            proxy_set_header "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Host")]),t._v(" $host"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            proxy_set_header "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("X")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Real")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("IP $remote_addr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            proxy_set_header "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("X")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Real")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Port")]),t._v(" $remote_port"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            proxy_set_header "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("X")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Forwarded")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("For")]),t._v(" $proxy_add_x_forwarded_for"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            access_by_lua_file "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("usr"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("local"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("nginx"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("lua"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("rose"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("lua"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            proxy_pass http"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("monitor_server"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        access_log logs"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("nagios"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("xxx123"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("tk_access"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("log"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    rose"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("lua\n    local cjson "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" require "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"cjson"')]),t._v("\n    local client "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" require "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"resty.kafka.client"')]),t._v("\n    local producer "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" require "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"resty.kafka.producer"')]),t._v("\n\n    local broker_list "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" host "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"127.0.0.1"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" port "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("19092")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    local log_json "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    local h "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" ngx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("req"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("get_headers")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    log_json"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"authorization"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" h"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"authorization"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    log_json"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"reqId"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" h"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"reqId"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    log_json"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"rose"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" h"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"rose"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    log_json"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"roseNum"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" h"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"roseNum"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    log_json"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"requri"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" ngx"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("request_uri"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    log_json"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"version"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"1.0.1"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    local bp "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" producer"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("broker_list"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" producer_type "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"async"')]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    local ok"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" err "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" bp"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("send")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"rose"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" key"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" cjson"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("encode")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("log_json"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    成功案例\n    upstream cluster "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        server "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v(".0")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v(".1")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3344")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        server "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v(".0")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v(".1")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3355")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        server "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v(".0")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v(".1")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3366")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    server "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        listen       "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1111")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        server_name  localhost"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        location "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("nacos "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            proxy_pass http"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("cluster"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        location "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("^")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("~")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("api  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            proxy_pass http"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v(".0")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v(".1")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3377")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            client_max_body_size "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),t._v("m"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            proxy_connect_timeout "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("300")]),t._v("s"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            proxy_send_timeout "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("300")]),t._v("s"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            proxy_read_timeout "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("300")]),t._v("s"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            #deny "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v(".0")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v(".1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  #拒绝的ip\n            #allow "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("172.18")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v(".5")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v(".54")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" #允许的ip       \n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        #location "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("~")]),t._v(" \\"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("php$ "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        #    proxy_pass   http"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("127.0")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v(".0")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v(".1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        #"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        #location "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("^")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("~")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("psd"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("api "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        #    proxy_pass http"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("192.168")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v(".7")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v(".21")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("25008")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        #    client_max_body_size "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),t._v("m"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        #    proxy_connect_timeout "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("300")]),t._v("s"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        #    proxy_send_timeout "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("300")]),t._v("s"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        #    proxy_read_timeout "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("300")]),t._v("s"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        #    proxy_set_header "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Host")]),t._v(" $host"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        #    proxy_set_header "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("X")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Real")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("IP $remote_addr"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        #    proxy_set_header "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("X")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Real")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Port")]),t._v(" $remote_port"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        #    proxy_set_header "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("X")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Forwarded")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("For")]),t._v(" $proxy_add_x_forwarded_for"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        #    access_by_lua_file "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("usr"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("local"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("nginx"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("lua"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("rose"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("lua"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        #"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    启动nginx和nacos服务\n    nacos登录\n    访问：http"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("localhost"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1111")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("nacos\n    调用接口\n    "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.")]),t._v("内网接口\n    http"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("localhost"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3377")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("api"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("configinfo\n    "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.")]),t._v("配置nginx\n    http"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("localhost"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1111")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("api"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("configinfo\n")])])]),s("p",[t._v("文章目录\n前言\n一、nginx简介")]),t._v(" "),s("ol",[s("li",[t._v("什么是 nginx 和可以做什么事情\n2.Nginx 作为 web 服务器")]),t._v(" "),s("li",[t._v("正向代理")]),t._v(" "),s("li",[t._v("反向代理")]),t._v(" "),s("li",[t._v("负载均衡\n6.动静分离\n二、Nginx 的安装(Linux:centos为例)")]),t._v(" "),s("li",[t._v("准备工作")]),t._v(" "),s("li",[t._v("开始安装")]),t._v(" "),s("li",[t._v("运行nginx")]),t._v(" "),s("li",[t._v("防火墙问题\n三、 Nginx 的常用命令和配置文件")]),t._v(" "),s("li",[t._v("Nginx常用命令\na. 使用nginx操作命令前提\nb. 查看 nginx 的版本号\nc. 启动 nginx\nd. 关闭nginx\ne. 重新加载 nginx")]),t._v(" "),s("li",[t._v("Nginx配置文件\na. 配置文件位置\nb. nginx 的组成部分\n第一部分：全局块\n第二部分：events块\n第三部分：\n四、 Nginx 反向代理 配置实例 1.1")]),t._v(" "),s("li",[t._v("实现效果")]),t._v(" "),s("li",[t._v("准备工作")]),t._v(" "),s("li",[t._v("访问过程的分析\n4、具体配置\na. 第一步 在 windows 系统的 host 文件进行域名和 ip 对应关系的配置")]),t._v(" "),s("li",[t._v("第二步 在 nginx 进行请求转发的配置（反向代理配置）\n5、最终测试\n五、 Nginx 反向代理 配置实例 1.2")]),t._v(" "),s("li",[t._v("实现效果")]),t._v(" "),s("li",[t._v("准备工作\na. 第一步，两个tomcat端口和测试页面\nb. 第二步，修改 nginx 的配置文件\n六、 Nginx 负载均衡 配置实例 2")]),t._v(" "),s("li",[t._v("实现效果")]),t._v(" "),s("li",[t._v("准备工作\na.准备两台 tomcat 服务器\nb. 修改一处\nc. 测试页面")]),t._v(" "),s("li",[t._v("在 nginx 的配置文件中进行负载均衡的配置")]),t._v(" "),s("li",[t._v("最终测试")]),t._v(" "),s("li",[t._v("nginx 分配服务器策略\na. 轮询（默认）\nb. weight\nc. ip_hash\nd. fair（第三方）\n七、 Nginx 动静分离 配置实例 3")]),t._v(" "),s("li",[t._v("什么是动静分离")]),t._v(" "),s("li",[t._v("准备工作")]),t._v(" "),s("li",[t._v("具体配置\na. 在 nginx 配置文件中进行配置")]),t._v(" "),s("li",[t._v("最终测试\na. 测试 image\nb. 测试 www\n八、 Nginx 的高可用集群")]),t._v(" "),s("li",[t._v("什么是nginx 高可用")]),t._v(" "),s("li",[t._v("配置高可用的准备工作")]),t._v(" "),s("li",[t._v("在两台服务器安装keepalived\na)安装：\nb) 配置文件\n完成高可用配置（主从配置）\na) 修改 keepalived.conf 配置文件\nb) 添加检测脚本\nc) 开启nginx 和 keepalived")]),t._v(" "),s("li",[t._v("最终测试\na)在浏览器地址栏输入 虚拟 ip 地址 192.168.17.50\nb)把主服务器（192.168.17.129）nginx 和 keepalived 停止，再输入 192.168.17.50\n九、 Nginx 的原理")]),t._v(" "),s("li",[t._v("mater 和 worker")]),t._v(" "),s("li",[t._v("master-workers 的机制的好处")]),t._v(" "),s("li",[t._v("设置多少个 worker")]),t._v(" "),s("li",[t._v("连接数 worker_connection\n前言\n一、nginx简介")]),t._v(" "),s("li",[t._v("什么是 nginx 和可以做什么事情\nNginx 是高性能的 HTTP 和反向代理的web服务器，处理高并发能力是十分强大的，能经受高负 载的考验,有报告表明能支持高达 50,000 个并发连接数。")])]),t._v(" "),s("p",[t._v("其特点是占有内存少，并发能力强，事实上nginx的并发能力确实在同类型的网页服务器中表现较好，中国大陆使用nginx网站用户有：百度、京东、新浪、网易、腾讯、淘宝等。")]),t._v(" "),s("p",[t._v("2.Nginx 作为 web 服务器\nNginx 可以作为静态页面的 web 服务器，同时还支持 CGI 协议的动态语言，比如 perl、php 等。但是不支持 java。Java 程序只能通过与 tomcat 配合完成。Nginx 专为性能优化而开发， 性能是其最重要的考量,实现上非常注重效率 ，能经受高负载的考验,有报告表明能支持高 达 50,000 个并发连接数。\nhttps://lnmp.org/nginx.html\n3. 正向代理\nNginx 不仅可以做反向代理，实现负载均衡。还能用作正向代理来进行上网等功能。 正向代理：如果把局域网外的 Internet 想象成一个巨大的资源库，则局域网中的客户端要访 问 Internet，则需要通过代理服务器来访问，这种代理服务就称为正向代理。")]),t._v(" "),s("p",[t._v("简单一点：通过代理服务器来访问服务器的过程 就叫 正向代理。\n需要在客户端配置代理服务器进行指定网站访问")]),t._v(" "),s("ol",{attrs:{start:"4"}},[s("li",[s("p",[t._v("反向代理\n反向代理，其实客户端对代理是无感知的，因为客户端不需要任何配置就可以访问。\n我们只 需要将请求发送到反向代理服务器，由反向代理服务器去选择目标服务器获取数据后，在返 回给客户端，此时反向代理服务器和目标服务器对外就是一个服务器，暴露的是代理服务器 地址，隐藏了真实服务器 IP 地址。")])]),t._v(" "),s("li",[s("p",[t._v("负载均衡\n增加服务器的数量，然后将请求分发到各个服务器上，将原先请求集中到单个服务器上的 情况改为将请求分发到多个服务器上，将负载分发到不同的服务器，也就是我们所说的负 载均衡")])])]),t._v(" "),s("p",[t._v("客户端发送多个请求到服务器，服务器处理请求，有一些可能要与数据库进行交互，服 务器处理完毕后，再将结果返回给客户端。")]),t._v(" "),s("p",[t._v("这种架构模式对于早期的系统相对单一，并发请求相对较少的情况下是比较适合的，成 本也低。但是随着信息数量的不断增长，访问量和数据量的飞速增长，以及系统业务的复杂 度增加，这种架构会造成服务器相应客户端的请求日益缓慢，并发量特别大的时候，还容易 造成服务器直接崩溃。很明显这是由于服务器性能的瓶颈造成的问题，那么如何解决这种情 况呢？")]),t._v(" "),s("p",[t._v("我们首先想到的可能是升级服务器的配置，比如提高 CPU 执行频率，加大内存等提高机 器的物理性能来解决此问题，但是我们知道摩尔定律的日益失效，硬件的性能提升已经不能 满足日益提升的需求了。最明显的一个例子，天猫双十一当天，某个热销商品的瞬时访问量 是极其庞大的，那么类似上面的系统架构，将机器都增加到现有的顶级物理配置，都是不能 够满足需求的。那么怎么办呢？上面的分析我们去掉了增加服务器物理配置来解决问题的办法，也就是说纵向解决问题 的办法行不通了，那么横向增加服务器的数量呢？这时候集群的概念产生了，单个服务器解 决不了，我们增加服务器的数量，然后将请求分发到各个服务器上，将原先请求集中到单个服务器上的情况改为将请求分发到多个服务器上，将负载分发到不同的服务器，也就是我们 所说的负载均衡")]),t._v(" "),s("p",[t._v("6.动静分离\n为了加快网站的解析速度，可以把动态页面和静态页面由不同的服务器来解析，加快解析速 度。降低原来单个服务器的压力。")]),t._v(" "),s("p",[t._v("二、Nginx 的安装(Linux:centos为例)\nnginx安装时，用到的包，我都准备好啦，方便使用：\nhttps://download.csdn.net/download/qq_40036754/11891855\n本来想放百度云的，但是麻烦，所以我就直接上传到我的资源啦，大家也可以直接联系我，我直接给大家的。")]),t._v(" "),s("ol",[s("li",[t._v("准备工作\n打开虚拟机，使用finallshell链接Linux操作系统\n到nginx下载软件\nhttp://nginx.org/")])]),t._v(" "),s("p",[t._v("先安装其依赖软件，最后安装nginx。\n依赖工具：pcre-8.3.7.tar.gz， openssl-1.0.1t.tar.gz， zlib-1.2.8.tar.gz， nginx-1.11.1.tar.gz。 我这里也提供下。\n2. 开始安装\n都有两种方式，一种直接下载，第二种使用解压包方式。这里大多使用解压包方式。\n我的安装路径：/usr/feng/\n安装pcre\n方式一、wget http://downloads.sourceforge.net/project/pcre/pcre/8.37/pcre-8.37.tar.gz 。\n方拾二、上传源码压缩包，解压、编译、安装 三部曲。\n1）、解压文件， 进入pcre目录，\n2）、./configure 完成后，\n3）、执行命令： make && make install\n安装 openssl\n下载OpenSSL的地址:\nhttp://distfiles.macports.org/openssl/\n1）、解压文件， 回到 openssl目录下，\n2）、./configure 完成后，\n3）、执行命令： make && make install\n安装 zlib\n1）、解压文件， 回到 zlib 目录下，\n2）、./configure 完成后，\n3）、执行命令： make && make install\n**安装 nginx **\n1）、解压文件， 回到 nginx 目录下，\n2）、./configure 完成后，\n3）、执行命令： make && make install\n3. 运行nginx\n安装完nginx后，会在 路径 /usr/local 下nginx 的文件夹。这是自动生成的。\n进入这个目录：\ncd /usr/local/nginx\n1\n目录内容如下：")]),t._v(" "),s("p",[t._v("进入sbin文件夹,里面有两个文件：nginx 和 nginx.old。\n执行命令：./nginx 即可执行\n测试启动： ps -ef | grep nginx")]),t._v(" "),s("p",[t._v("已经启动。\n查看nginx默认端口（默认为80），使用网页的形式测试，（像Tomcat一样。）\n进入目录查看端口：cd /usr/local/nginx/conf 下的 nginx.conf文件。这个文件也是nginx的配置文件。vim 下：\n如下\n输入IP:80，则显示：")]),t._v(" "),s("ol",{attrs:{start:"4"}},[s("li",[t._v("防火墙问题\n在 windows 系统中访问 linux 中 nginx，默认不能访问的，因为防火墙问题 （1）关闭防火墙 （2）开放访问的端口号，80 端口")])]),t._v(" "),s("p",[t._v("查看开放的端口号")]),t._v(" "),s("p",[t._v("firewall-cmd --list-all\n1\n设置开放的端口号")]),t._v(" "),s("p",[t._v("firewall-cmd --add-service=http –permanent\nfirewall-cmd --add-port=80/tcp --permanent\n1\n2\n重启防火墙")]),t._v(" "),s("p",[t._v("firewall-cmd –reload\n1\n三、 Nginx 的常用命令和配置文件")]),t._v(" "),s("ol",[s("li",[t._v("Nginx常用命令\na. 使用nginx操作命令前提\n使用nginx操作命令前提：必须进入到nginx的自动生成目录的下/sbin文件夹下。\nnginx有两个目录：\n第一个：安装目录，我放在：\n/usr/feng/\n第二个：自动生成目录：\n/usr/local/nginx/\nb. 查看 nginx 的版本号\n./nginx -v\nc. 启动 nginx\n./nginx\nd. 关闭nginx\n./nginx -s stop\ne. 重新加载 nginx\n在目录：/usr/local/nginx/sbin 下执行命令，不需要重启服务器，自动编译。\n./nginx -s reload")]),t._v(" "),s("li",[t._v("Nginx配置文件\na. 配置文件位置\n/usr/local/nginx/conf/nginx.conf\nb. nginx 的组成部分\n配置文件中有很多#， 开头的表示注释内容，我们去掉所有以 # 开头的段落，精简之后的 内容如下：")])]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[t._v("worker_processes  "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nevents "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    worker_connections  "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1024")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\nhttp "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    include       mime"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("types"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    default_type  application"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("octet"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("stream"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    sendfile        on"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    keepalive_timeout  "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("65")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    server "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        listen       "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        server_name  localhost"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        location "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            root   html"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            index  index"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("html index"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("htm"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        error_page   "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("500")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("502")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("503")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("504")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("50")]),t._v("x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("html"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        location "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("50")]),t._v("x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("html "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            root   html"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("ul",[s("li",[t._v("access_log log/access.log myFormat;  #combined为日志格式的默认值")]),t._v(" "),s("li",[t._v("sendfile on;   #允许sendfile方式传输文件，默认为off，可以在http块，server块，location块。")]),t._v(" "),s("li",[t._v("sendfile_max_chunk 100k;  #每个进程每次调用传输数量不能大于设定的值，默认为0，即不设上限。")]),t._v(" "),s("li",[t._v("keepalive_timeout 65;  #连接超时时间，默认为75s，可以在http，server，location块。")]),t._v(" "),s("li",[t._v("proxy_connect_timeout 1;   #nginx服务器与被代理的服务器建立连接的超时时间，默认60秒")]),t._v(" "),s("li",[t._v("proxy_read_timeout 1; #nginx服务器想被代理服务器组发出read请求后，等待响应的超时间，默认为60秒。")]),t._v(" "),s("li",[t._v("proxy_send_timeout 1; #nginx服务器想被代理服务器组发出write请求后，等待响应的超时间，默认为60秒。")]),t._v(" "),s("li",[t._v("proxy_http_version 1.0 ; #Nginx服务器提供代理服务的http协议版本1.0，1.1，默认设置为1.0版本。")]),t._v(" "),s("li",[t._v("proxy_method get;    #支持客户端的请求方法。post/get；")]),t._v(" "),s("li",[t._v("proxy_ignore_client_abort on;  #客户端断网时，nginx服务器是否终端对被代理服务器的请求。默认为off。")]),t._v(" "),s("li",[t._v('proxy_ignore_headers "Expires" "Set-Cookie";  #Nginx服务器不处理设置的http相应投中的头域，这里空格隔开可以设置多个。')]),t._v(" "),s("li",[t._v("proxy_intercept_errors on;    #如果被代理服务器返回的状态码为400或者大于400，设置的error_page配置起作用。默认为off。")]),t._v(" "),s("li",[t._v("proxy_headers_hash_max_size 1024; #存放http报文头的哈希表容量上限，默认为512个字符。")]),t._v(" "),s("li",[t._v("proxy_headers_hash_bucket_size 128; #nginx服务器申请存放http报文头的哈希表容量大小。默认为64个字符。")]),t._v(" "),s("li",[t._v("proxy_next_upstream timeout;  #反向代理upstream中设置的服务器组，出现故障时，被代理服务器返回的状态值。error|timeout|invalid_header|")]),t._v(" "),s("li",[t._v("http_500|http_502|http_503|http_504|http_404|off")]),t._v(" "),s("li",[t._v("proxy_ssl_session_reuse on; 默认为on，如果我们在错误日志中发现“SSL3_GET_FINSHED:digest check failed”的情况时，可以将该指令设置为off。")])]),t._v(" "),s("p",[t._v("负载均衡写法")]),t._v(" "),s("p",[t._v("nginx默认就是轮询其权重都默认为1，服务器处理请求的顺序:ABABABABAB")]),t._v(" "),s("p",[t._v("upstream mysvr {\nserver 192.168.10.121:3333;\nserver 192.168.10.122:3333;\n}\nserver {\nlocation  ~*^.+$ {"),s("br"),t._v("\nproxy_pass  http://mysvr;  #请求转向mysvr 定义的服务器列表"),s("br"),t._v("\n}\n}")]),t._v(" "),s("p",[t._v("下面服务器的请求顺序为：ABBABBABBABBABB")]),t._v(" "),s("p",[t._v("upstream mysvr {\nserver 127.0.0.1:7878 weight=1;\nserver 192.168.10.121:3333 weight=2;\n}")]),t._v(" "),s("p",[t._v("ip_hash:nginx会让相同的客户端ip请求相同的服务器。")]),t._v(" "),s("p",[t._v("upstream mysvr {\nserver 127.0.0.1:7878;\nserver 192.168.10.121:3333;\nip_hash;\n}")]),t._v(" "),s("p",[t._v("nginx 配置文件有三部分组成\n第一部分：全局块\n从配置文件开始到 events 块之间的内容，主要会设置一些影响nginx 服务器整体运行的配置指令，主要包括配 置运行 Nginx 服务器的用户（组）、允许生成的 worker process 数，进程 PID 存放路径、日志存放路径和类型以 及配置文件的引入等。\n比如上面第一行配置的：\nworker_processes  1;\n这是 Nginx 服务器并发处理服务的关键配置，worker_processes 值越大，可以支持的并发处理量也越多，但是 会受到硬件、软件等设备的制约。")]),t._v(" "),s("p",[t._v("第二部分：events块\n比如上面的配置：")]),t._v(" "),s("p",[t._v("events {\nworker_connections  1024;\n}")]),t._v(" "),s("p",[t._v("events 块涉及的指令:主要影响 Nginx 服务器与用户的网络连接，常用的设置包括是否开启对多 work process 下的网络连接进行序列化，是否 允许同时接收多个网络连接，选取哪种事件驱动模型来处理连接请求，每个 word process 可以同时支持的最大连接数等。\n上述例子就表示每个 work process 支持的最大连接数为 1024.\n这部分的配置对 Nginx 的性能影响较大，在实际中应该灵活配置。")]),t._v(" "),s("p",[t._v("第三部分：")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[t._v("http "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    include       mime"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("types"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    default_type  application"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v("octet"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("stream"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    sendfile        on"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    keepalive_timeout  "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("65")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    server "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        listen       "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        server_name  localhost"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        location "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            root   html"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            index  index"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("html index"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("htm"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        error_page   "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("500")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("502")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("503")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("504")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("50")]),t._v("x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("html"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        location "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("/")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("50")]),t._v("x"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("html "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            root   html"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),s("p",[t._v("这算是 Nginx 服务器配置中最频繁的部分，代理、缓存和日志定义等绝大多数功能和第三方模块的配置都在这里。")]),t._v(" "),s("p",[t._v("需要注意的是：http 块也可以包括 http全局块、server 块。")]),t._v(" "),s("p",[t._v("http全局块\nhttp全局块配置的指令包括文件引入、MIME-TYPE 定义、日志自定义、连接超时时间、单链接请求数上限等。\nserver 块\n这块和虚拟主机有密切关系，虚拟主机从用户角度看，和一台独立的硬件主机是完全一样的，该技术的产生是为了 节省互联网服务器硬件成本。\n每个 http 块可以包括多个 server 块，而每个 server 块就相当于一个虚拟主机。\n而每个 server 块也分为全局 server 块，以及可以同时包含多个 locaton 块。\n全局 server 块\n最常见的配置是本虚拟机主机的监听配置和本虚拟主机的名称或IP配置。\nlocation 块\n一个 server 块可以配置多个 location 块。\n这块的主要作用是基于 Nginx 服务器接收到的请求字符串（例如 server_name/uri-string），对虚拟主机名称 （也可以是IP 别名）之外的字符串（例如 前面的 /uri-string）进行匹配，对特定的请求进行处理。 地址定向、数据缓 存和应答控制等功能，还有许多第三方模块的配置也在这里进行。\n四、 Nginx 反向代理 配置实例 1.1")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("实现效果\n打开浏览器，在浏览器地址栏输入地址 www.123.com，跳转到 liunx 系统 tomcat 主页 面中")])]),t._v(" "),s("li",[s("p",[t._v("准备工作\n（1）在 liunx 系统安装 tomcat，使用默认端口 8080，我这里8080被其他应用占用，所以我已修改端口为8081。在conf目录下的server.xml配置文件中，如下，将port改为 8081，其实下面也有类似的Connector 标签，但是要看protocol协议为HTTP/1.1的标签修改即可。")]),t._v(" "),s("Connector",{attrs:{port:"8081",protocol:"HTTP/1.1",connectionTimeout:"20000",redirectPort:"8443"}})],1)]),t._v(" "),s("p",[t._v("tomcat 安装文件放到 liunx 系统中，解压。\nTomcat的路径：/usr/feng/apach-tomcat/tomcat8081下\n进入 tomcat 的 bin 目录中，./startup.sh 启动 tomcat 服务器。\n（2）对外开放访问的端口 （我这里不需要）")]),t._v(" "),s("p",[t._v("firewall-cmd --add-port=8080/tcp --permanent\nfirewall-cmd –reload\n查看已经开放的端口号 firewall-cmd --list-all\n（3）在 windows 系统中通过浏览器访问 tomcat 服务器\n别忘了开启tomcat，在bin目录下，使用 命令：")]),t._v(" "),s("p",[t._v("./startup.sh")]),t._v(" "),s("ol",{attrs:{start:"3"}},[s("li",[t._v("访问过程的分析")])]),t._v(" "),s("p",[t._v("4、具体配置\na. 第一步 在 windows 系统的 host 文件进行域名和 ip 对应关系的配置\n添加内容在 host 文件中\n2. 第二步 在 nginx 进行请求转发的配置（反向代理配置）\n5、最终测试\n如上配置，我们监听 80 端口，访问域名为 www.123.com，不加端口号时默认为 80 端口，故 访问该域名时会跳转到 127.0.0.1:8081 路径上。在浏览器端输入 www.123.com 结果如下：")]),t._v(" "),s("p",[t._v("五、 Nginx 反向代理 配置实例 1.2")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("实现效果\n实现效果：使用 nginx 反向代理，根据访问的路径跳转到不同端口的服务中\nnginx 监听端口为 9001，\n访问 http://127.0.0.1:9001/edu/ 直接跳转到 127.0.0.1:8081\n访问 http://127.0.0.1:9001/vod/ 直接跳转到 127.0.0.1:8082")])]),t._v(" "),s("li",[s("p",[t._v("准备工作\na. 第一步，两个tomcat端口和测试页面\n准备两个 tomcat，一个 8081 端口，一个 8082 端口。\n在**/usr/feng/apach-tomcat/下 新建tomcat8081和tomcat8082两个文件夹，将 Tomcat安装包 分别上传到两个文件夹，进行解压缩安装，8081的Tomcat只改一个http协议默认端口号** 就行，直接启动即可。\n这里需要改8082的端口号，需要修改三个端口，只修改一个端口号的话，是启动不了的，我已经测试过了（如果只修改http协议默认端口的话，8081和8082只会启动一个）。因为默认的都是8080（没有的直接创建文件夹，好多都是刚建的，与上面的第一个示例示例有点改动）\ntomcat8081 解压包，然后进入到 /bin 下 ，使用命令 ./startup 启动")])])]),t._v(" "),s("p",[t._v("tomcat8082\n使用命令 编辑 文件 ：/conf/server.xml 文件\nvim server.xml\n修改后如下：\n1、修改server 的默认端口，由默认8005->8091\n2、修改http协议的默认端口，由默认的8080->8082")]),t._v(" "),s("p",[t._v("3、修改默认ajp协议的默认端口，由默认的8009->9001")]),t._v(" "),s("p",[t._v("并准备好测试的页面\n写一个a.html页面，\ntomcat8081的tomcat，放到目录 /webapp/vod 下，内容：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[t._v("<h1>fengfanchen-nginx-8081!!!</h1>\n")])])]),s("p",[t._v("tomcat8082的tomcat，放到目录 /webapp/edu 下，内容：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[t._v("<h1>fengfanchen-nginx-8082!!!</h1>\n")])])]),s("p",[t._v("测试页面")]),t._v(" "),s("p",[t._v("b. 第二步，修改 nginx 的配置文件\n修改 nginx 的配置文件 在 http 块中添加 server{}\n修改其中注释的就行。")]),t._v(" "),s("p",[t._v("修改成功后\n开发的端口： nginx监听端口：8001，tomcat8081端口：8081，tomcat8082端口：8082。\n测试结果\nlocation 指令说明\n该指令用于匹配 URL。\n语法如下：\n1、= ：用于不含正则表达式的 uri 前，要求请求字符串与 uri 严格匹配，如果匹配 成功，就停止继续向下搜索并立即处理该请求。\n2、~：用于表示 uri 包含正则表达式，并且区分大小写。\n3、~*：用于表示 uri 包含正则表达式，并且不区分大小写。\n4、^~：用于不含正则表达式的 uri 前，要求 Nginx 服务器找到标识 uri 和请求字 符串匹配度最高的 location 后，立即使用此 location 处理请求，而不再使用 location 块中的正则 uri 和请求字符串做匹配。")]),t._v(" "),s("p",[t._v("注意：如果 uri 包含正则表达式，则必须要有 ~ 或者 ~*标识。")]),t._v(" "),s("p",[t._v("六、 Nginx 负载均衡 配置实例 2")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("实现效果\n浏览器地址栏输入地址 http://208.208.128.122/edu/a.html，负载均衡效果，平均 8081 和 8082 端口中")])]),t._v(" "),s("li",[s("p",[t._v("准备工作\na.准备两台 tomcat 服务器\n准备两台 tomcat 服务器，一台 8081，一台 8082\n上面的反向代理第二个实例中已经配置成功了。但是需要添加点东西，如下哦。\nb. 修改一处\n在两台 tomcat 里面 webapps 目录中，创建名称是 edu 文件夹，在 edu 文件夹中创建 页面 a.html，用于测试。\n由于第二个实例中，8082中有了 edu 的文件夹，所以只在8081 文件夹下创建即可。\n然后使用在vod文件下使用命令：\ncp a.html ../edu/\n即可完成，\n查看命令")])])]),t._v(" "),s("p",[t._v("cd ../edu/  # 进入到 edu 目录下\ncat a.html  #查看内容\nc. 测试页面\n测试URL")]),t._v(" "),s("p",[t._v("http://208.208.128.122:8081/edu/a.html")]),t._v(" "),s("p",[t._v("http://208.208.128.122:8082/edu/a.html")]),t._v(" "),s("ol",{attrs:{start:"3"}},[s("li",[s("p",[t._v("在 nginx 的配置文件中进行负载均衡的配置\n修改了第一个示例的 配置")]),t._v(" "),s("p",[t._v("upstream myserver {\nserver 208.208.128.122:8081;\nserver 208.208.128.122:8082;\n}\nserver {\nlisten       80;\nserver_name  208.208.128.122;")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[t._v(" #charset koi8-r;\n\n #access_log  logs/host.access.log  main;\n\n location / {\n     root   html;\n     proxy_pass   http://myserver;\n     #proxy_pass   http://127.0.0.1:8081;\n     index  index.html index.htm;\n")])])]),s("p",[t._v("}")])]),t._v(" "),s("li",[s("p",[t._v("最终测试\n测试url")])])]),t._v(" "),s("p",[t._v("http://208.208.128.122/edu/a.html")]),t._v(" "),s("ol",{attrs:{start:"4"}},[s("li",[t._v("nginx 分配服务器策略\n随着互联网信息的爆炸性增长，负载均衡（load balance）已经不再是一个很陌生的话题， 顾名思义，负载均衡即是将负载分摊到不同的服务单元，既保证服务的可用性，又保证响应 足够快，给用户很好的体验。快速增长的访问量和数据流量催生了各式各样的负载均衡产品， 很多专业的负载均衡硬件提供了很好的功能，但却价格不菲，这使得负载均衡软件大受欢迎， nginx 就是其中的一个，在 linux 下有 Nginx、LVS、Haproxy 等等服务可以提供负载均衡服 务，而且 Nginx 提供了几种分配方式(策略)：")])]),t._v(" "),s("p",[t._v("a. 轮询（默认）\n每个请求按时间顺序逐一分配到不同的后端服务器，如果后端服务器 down 掉，能自动剔除。\n配置方式：")]),t._v(" "),s("p",[t._v("b. weight\nweight 代表权重, 默认为 1,权重越高被分配的客户端越多")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[t._v("upstream myserver {\n    server 208.208.128.122:8081 weight=10;   #  在这儿\n    server 208.208.128.122:8082 weight=10;\n}\nserver {\n    listen       80;\n    server_name  208.208.128.122;\n    location / {\n        root   html;\n        proxy_pass   http://myserver;\n        index  index.html index.htm;\n}\n")])])]),s("p",[t._v("c. ip_hash\nip_hash 每个请求按访问 ip 的 hash 结果分配，这样每个访客固定访问一个后端服务器")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[t._v("upstream myserver {\n\tip_hash;\t\t\t\t\t\t\t//  在这儿\n    server 208.208.128.122:8081 ;   \n    server 208.208.128.122:8082 ;\n}\nserver {\n    listen       80;\n    server_name  208.208.128.122;\n    location / {\n        root   html;\n        proxy_pass   http://myserver;\n        index  index.html index.htm;\n}\n")])])]),s("p",[t._v("d. fair（第三方）\nfair（第三方），按后端服务器的响应时间来分配请求，响应时间短的优先分配。")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[t._v("upstream myserver {\t\t\t\t\t\n    server 208.208.128.122:8081 ;   \n    server 208.208.128.122:8082 ;\n    fair; \t\t\t\t\t\t\t\t\t\t\t\t\t\t#  在这儿\n}\nserver {\n    listen       80;\n    server_name  208.208.128.122;\n    location / {\n        root   html;\n        proxy_pass   http://myserver;\n        index  index.html index.htm;\n}\n")])])]),s("p",[t._v("七、 Nginx 动静分离 配置实例 3")]),t._v(" "),s("ol",[s("li",[t._v("什么是动静分离")])]),t._v(" "),s("p",[t._v("Nginx 动静分离简单来说就是把动态跟静态请求分开，不能理解成只是单纯的把动态页面和 静态页面物理分离。严格意义上说应该是动态请求跟静态请求分开，可以理解成使用 Nginx 处理静态页面，Tomcat 处理动态页面。动静分离从目前实现角度来讲大致分为两种：")]),t._v(" "),s("p",[t._v("一种是纯粹把静态文件独立成单独的域名，放在独立的服务器上，也是目前主流推崇的方案；")]),t._v(" "),s("p",[t._v("另外一种方法就是动态跟静态文件混合在一起发布，通过 nginx 来分开。")]),t._v(" "),s("p",[t._v("通过 location 指定不同的后缀名实现不同的请求转发。通过 expires 参数设置，可以使 浏览器缓存过期时间，减少与服务器之前的请求和流量。具体 Expires 定义：是给一个资 源设定一个过期时间，也就是说无需去服务端验证，直接通过浏览器自身确认是否过期即可， 所以不会产生额外的流量。此种方法非常适合不经常变动的资源。（如果经常更新的文件， 不建议使用 Expires 来缓存），我这里设置 3d，表示在这 3 天之内访问这个 URL，发送 一个请求，比对服务器该文件最后更新时间没有变化，则不会从服务器抓取，返回状态码 304，如果有修改，则直接从服务器重新下载，返回状态码 200。\n2. 准备工作\n在Linux 系统中准备 静态资源，用于进行访问。\nwww文件夹中 a.html\n")]),s("h1",[t._v("fengfanchen-test-html")]),t._v("\nimage 中的 01.jpg\n我的照片哈！！！（自动忽略）\n3. 具体配置\na. 在 nginx 配置文件中进行配置\n4. 最终测试\na. 测试 image\nhttp://208.208.128.122/image/\nhttp://208.208.128.122/image/01.jpg"),s("p"),t._v(" "),s("p",[t._v("b. 测试 www\nhttp://208.208.128.122/www/a.html")]),t._v(" "),s("p",[t._v("八、 Nginx 的高可用集群")]),t._v(" "),s("ol",[s("li",[t._v("什么是nginx 高可用")])]),t._v(" "),s("p",[t._v("配置示例流程：")]),t._v(" "),s("p",[t._v("需要两台nginx 服务器\n需要keepalived\n需要虚拟IP\n2. 配置高可用的准备工作\n需要两台服务器 208.208.128.122 和 208.208.128.85\n在两台服务器安装 nginx(流程最上面有)\n第二台服务器的默认端口 改为 9001 ，运行并测试，如下：")]),t._v(" "),s("p",[t._v("在两台服务器安装 keepalived\n2. 在两台服务器安装keepalived\na)安装：\n第一种方式：命令安装")]),t._v(" "),s("p",[t._v("yum install keepalived -y")]),t._v(" "),s("h1",{attrs:{id:"查看版本"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#查看版本"}},[t._v("#")]),t._v(" 查看版本：")]),t._v(" "),s("p",[t._v("rpm -q -a keepalived")]),t._v(" "),s("p",[t._v("第二种方式：安装包方式（这里我使用这个）\n将压缩包上传至：/usr/feng/\n命令如下：")]),t._v(" "),s("p",[t._v("cd /usr/feng/\ntar -zxvf keepalived-2.0.18.tar.gz\ncd keepalived-2.0.18\n./configure\nmake && make install")]),t._v(" "),s("p",[t._v("b) 配置文件\n安装之后，在 etc 里面生成目录 keepalived，有文件 keepalived.conf 。\n这个就是主配置文件。\n主从模式主要在这个文件里配置。")]),t._v(" "),s("p",[t._v("完成高可用配置（主从配置）\na) 修改 keepalived.conf 配置文件\n修改/etc/keepalived/keepalivec.conf 配置文件")]),t._v(" "),s("p",[t._v("global_defs {\nnotification_email {\nacassen@firewall.loc\nfailover@firewall.loc\nsysadmin@firewall.loc\n}\nnotification_email_from Alexandre.Cassen@firewall.loc\nsmtp_server 208.208.128.122\nsmtp_connect_timeout 30\nrouter_id LVS_DEVEL\n}")]),t._v(" "),s("p",[t._v("vrrp_script chk_http_port {")]),t._v(" "),s("p",[t._v('script "/usr/local/src/nginx_check.sh"')]),t._v(" "),s("p",[t._v("interval 2      #（检测脚本执行的间隔）")]),t._v(" "),s("p",[t._v("weight 2")]),t._v(" "),s("p",[t._v("}")]),t._v(" "),s("p",[t._v("vrrp_instance VI_1 {"),s("br"),t._v("\nstate MASTER   # 备份服务器上将 MASTER 改为 BACKUP"),s("br"),t._v("\ninterface ens192  //网卡"),s("br"),t._v("\nvirtual_router_id 51   # 主、备机的 virtual_router_id 必须相同"),s("br"),t._v("\npriority 100     # 主、备机取不同的优先级，主机值较大，备份机值较小\nadvert_int 1\nauthentication {\nauth_type PASS\nauth_pass 1111\n}\nvirtual_ipaddress {"),s("br"),t._v("\n208.208.128.50 // VRRP H 虚拟地址\n}\n}")]),t._v(" "),s("p",[t._v("b) 添加检测脚本\n在/usr/local/src 添加检测脚本")]),t._v(" "),s("p",[t._v("#!/bin/bash\nA="),s("code",[t._v("ps -C nginx –no-header |wc -l")]),t._v("\nif [ $A -eq 0 ];then\n/usr/local/nginx/sbin/nginx\nsleep 2\nif [ "),s("code",[t._v("ps -C nginx --no-header |wc -l")]),t._v(" -eq 0 ];then\nkillall keepalived\nfi\nfi\nc) 开启nginx 和 keepalived\n把两台服务器上 nginx 和 keepalived 启动 ：\n启动 nginx：./nginx\n启动 keepalived：systemctl start keepalived.service")]),t._v(" "),s("p",[t._v("85服务一样。\n4. 最终测试\na)在浏览器地址栏输入 虚拟 ip 地址 192.168.17.50")]),t._v(" "),s("p",[t._v("b)把主服务器（192.168.17.129）nginx 和 keepalived 停止，再输入 192.168.17.50\n九、 Nginx 的原理")]),t._v(" "),s("ol",[s("li",[t._v("mater 和 worker\nnginx 启动后，是由两个进程组成的。master（管理者）和worker（工作者）。")])]),t._v(" "),s("p",[t._v("一个nginx 只有一个master。但可以有多个worker\n，过来的请求由master管理，worker进行争抢式的方式去获取请求。")]),t._v(" "),s("ol",{attrs:{start:"2"}},[s("li",[t._v("master-workers 的机制的好处\n首先，对于每个 worker 进程来说，独立的进程，不需要加锁，所以省掉了锁带来的开销， 同时在编程以及问题查找时，也会方便很多。\n可以使用 nginx –s reload 热部署，利用 nginx 进行热部署操作\n其次，采用独立的进程，可以让互相之间不会 影响，一个进程退出后，其它进程还在工作，服务不会中断，master 进程则很快启动新的 worker 进程。当然，worker 进程的异常退出，肯定是程序有 bug 了，异常退出，会导致当 前 worker 上的所有请求失败，不过不会影响到所有请求，所以降低了风险。")]),t._v(" "),s("li",[t._v("设置多少个 worker\nNginx 同 redis 类似都采用了 io 多路复用机制，每个 worker 都是一个独立的进程，但每个进 程里只有一个主线程，通过异步非阻塞的方式来处理请求， 即使是千上万个请求也不在话 下。每个 worker 的线程可以把一个 cpu 的性能发挥到极致。所以 worker 数和服务器的 cpu 数相等是最为适宜的。设少了会浪费 cpu，设多了会造成 cpu 频繁切换上下文带来的损耗。")])]),t._v(" "),s("p",[t._v("worker 数和服务器的 cpu 数相等是最为适宜\n4. 连接数 worker_connection\n第一个：发送请求，占用了 woker 的几个连接数？")]),t._v(" "),s("p",[t._v("答案：2 或者 4 个\n第二个：nginx 有一个 master，有四个 woker，每个 woker 支持最大的连接数 1024，支持的 最大并发数是多少？")]),t._v(" "),s("p",[t._v("普通的静态访问最大并发数是： worker_connections * worker_processes /2，\n而如果是 HTTP 作 为反向代理来说，最大并发数量应该是 worker_connections * worker_processes/4。\n这个值是表示每个 worker 进程所能建立连接的最大值，所以，一个 nginx 能建立的最大连接 数，应该是 worker_connections * worker_processes。当然，这里说的是最大连接数，对于 HTTP 请 求 本 地 资 源 来 说 ， 能 够 支 持 的 最 大 并 发 数 量 是 worker_connections * worker_processes，如果是支持 http1.1 的浏览器每次访问要占两个连接，所以普通的静态访 问最大并发数是： worker_connections * worker_processes /2，而如果是 HTTP 作 为反向代 理来说，最大并发数量应该是 worker_connections * worker_processes/4。因为作为反向代理服务器，每个并发会建立与客户端的连接和与后端服 务的连接，会占用两个连接。")]),t._v(" "),s("p",[t._v("下面这段代码会监听 9009 端口，并在收到 HTTP 请求后，输出一些信息")]),t._v(" "),s("div",{staticClass:"language-java extra-class"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" http "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("require")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'http'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\nhttp"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("createServer")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("function "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("req"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" res"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    res"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("writeHead")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("200")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Content-Type'")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'text/plain'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    res"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("write")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'remoteAddress: '")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" req"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("connection"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("remoteAddress "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'\\n'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    res"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("write")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'x-forwarded-for: '")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" req"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("headers"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'x-forwarded-for'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'\\n'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    res"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("write")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'x-real-ip: '")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" req"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("headers"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'x-real-ip'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'\\n'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    res"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("end")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("listen")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("9009")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'0.0.0.0'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("location / {\nproxy_set_header X-Real-IP $remote_addr;\nproxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;\nproxy_set_header Host $http_host;\nproxy_set_header X-NginX-Proxy true;")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",[s("code",[t._v("proxy_pass http://127.0.0.1:9009/;\nproxy_redirect off;\n")])])]),s("p",[t._v("}")]),t._v(" "),s("p",[t._v("curl http://t1.imququ.com:9009/")]),t._v(" "),s("p",[t._v("lsof 查看端口占用语法格式：")]),t._v(" "),s("p",[t._v("lsof -i:9009")]),t._v(" "),s("p",[t._v("使用df -h命令来查看磁盘信息")]),t._v(" "),s("ul",[s("li",[t._v("Filesystem：文件系统")]),t._v(" "),s("li",[t._v("Size： 分区大小")]),t._v(" "),s("li",[t._v("Used： 已使用容量")]),t._v(" "),s("li",[t._v("Avail： 还可以使用的容量")]),t._v(" "),s("li",[t._v("Use%： 已用百分比")]),t._v(" "),s("li",[t._v("Mounted on： 挂载点　\n相关命令：")]),t._v(" "),s("li",[t._v("df -hl：查看磁盘剩余空间")]),t._v(" "),s("li",[t._v("df -h：查看每个根路径的分区大小")]),t._v(" "),s("li",[t._v("du -sh [目录名]：返回该目录的大小")]),t._v(" "),s("li",[t._v("du -sm [文件夹]：返回该文件夹总M数")]),t._v(" "),s("li",[t._v("du -h [目录名]：查看指定文件夹下的所有文件大小（包含子文件夹）")])])])}),[],!1,null,null,null);n.default=e.exports}}]);