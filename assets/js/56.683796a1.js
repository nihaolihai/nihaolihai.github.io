(window.webpackJsonp=window.webpackJsonp||[]).push([[56],{543:function(t,v,_){"use strict";_.r(v);var n=_(6),s=Object(n.a)({},(function(){var t=this,v=t.$createElement,_=t._self._c||v;return _("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[_("h2",{attrs:{id:"软件设计"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#软件设计"}},[t._v("#")]),t._v(" 软件设计")]),t._v(" "),_("p",[t._v("何为软件设计。你眼中的软件设计是一张张UML图和一个word软件设计文档吗。")]),t._v(" "),_("p",[t._v("我很少看到过软件设计文档，我们经常看到的应该叫做需求文档，软件开发文档。")]),t._v(" "),_("p",[t._v("很难具体定义软件设计文档应该是什么样的。设计是非常抽象的一个概念。")]),t._v(" "),_("p",[t._v("真正的设计应该是代码验证了的，或者干脆说源代码就是设计。")]),t._v(" "),_("p",[t._v("软件设计我更认同敏捷设计的做法。")]),t._v(" "),_("p",[t._v("传统开发设计非常少或者无设计。所谓的设计，也就是写好了开发文档，开发人员按照文档开干，后面的事就全靠\n开发人员的素养了。但我遇到的开发很多都是CV编程，平时写的最多的便是CRUD代码，甚至这些代码都是模板生成的，\n又何来设计一说。虽然我们使用的是面向对象的语言，但也只是使用面向对象提供的语言特性，实际并没有面向对象\n编程，我们依然是面向数据库编程。大量贫血模型，逻辑通过三层架构中的Service层进行粘合。")]),t._v(" "),_("p",[t._v("关键问题出在哪？\n我认为还是出在开发阶段，或者说当前开发困境，我们为了赶进度牺牲代码质量。久而久之，开发人员对代码要求质量\n也不高，一个模块的代码经过无数人修改后，已散发出难掩的代码臭味。但是由于代码本身没什么设计，开发人员倾向于以\n最省力的方式解决问题。")]),t._v(" "),_("p",[t._v("关于设计我们并没有很好的实践方式，在敏捷中可以通过迭代重构等方式来驱动设计，我们就不说测试驱动开发了，甚至单元\n测试都不写，又如何不断的来演进和打磨我们的设计呢，这导致2个极端，要么没设计，因为不懂程序设计，要么滥用设计，\n一上来就各种设计模式，导致代码无比复杂。")]),t._v(" "),_("h3",{attrs:{id:"什么是软件设计"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#什么是软件设计"}},[t._v("#")]),t._v(" 什么是软件设计")]),t._v(" "),_("p",[t._v("软件设计是对能支撑起不断膨胀的需求的，能应对长期变化的核心模型的设计")]),t._v(" "),_("p",[t._v("软件设计架设在需求和解决方案间的桥梁")]),t._v(" "),_("p",[t._v("软件设计是在开发团队中构建一个理解软件的结构，即模型。")]),t._v(" "),_("p",[t._v("数据库模型。")]),t._v(" "),_("p",[t._v("模型包括业务实体，调度器\n模型粒度")]),t._v(" "),_("h3",{attrs:{id:"软件设计原则-solid"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#软件设计原则-solid"}},[t._v("#")]),t._v(" 软件设计原则 solid")]),t._v(" "),_("p",[t._v("单一职责原则\n谁有单一职责。因为是面向对象，因此单一指接口，类，对象的职责单一。\n开闭原则\n里氏替换\n接口隔离\n依赖倒置")])])}),[],!1,null,null,null);v.default=s.exports}}]);