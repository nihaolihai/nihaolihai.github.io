(window.webpackJsonp=window.webpackJsonp||[]).push([[167],{657:function(e,n,a){"use strict";a.r(n);var t=a(6),r=Object(t.a)({},(function(){var e=this,n=e.$createElement,a=e._self._c||n;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h2",{attrs:{id:"java-文档注释"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#java-文档注释"}},[e._v("#")]),e._v(" Java 文档注释")]),e._v(" "),a("p",[e._v("Java 支持三种注释方式。前两种分别是 // 和 /* "),a("em",[e._v("/，第三种被称作说明注释，它以 /")]),e._v("* 开始，以 */结束。")]),e._v(" "),a("p",[e._v("说明注释允许你在程序中嵌入关于程序的信息。你可以使用 javadoc 工具软件来生成信息，并输出到HTML文件中。")]),e._v(" "),a("p",[e._v("说明注释，使你更加方便的记录你的程序信息。")]),e._v(" "),a("p",[e._v("javadoc 标签\njavadoc 工具软件识别以下标签：")]),e._v(" "),a("p",[e._v("标签\t描述\t示例\n@author\t标识一个类的作者\t@author description\n@deprecated\t指名一个过期的类或成员\t@deprecated description\n{@docRoot}\t指明当前文档根目录的路径\tDirectory Path\n@exception\t标志一个类抛出的异常\t@exception exception-name explanation\n{@inheritDoc}\t从直接父类继承的注释\tInherits a comment from the immediate surperclass.\n{@link}\t插入一个到另一个主题的链接\t{@link name text}\n{@linkplain}\t插入一个到另一个主题的链接，但是该链接显示纯文本字体\tInserts an in-line link to another topic.\n@param\t说明一个方法的参数\t@param parameter-name explanation\n@return\t说明返回值类型\t@return explanation\n@see\t指定一个到另一个主题的链接\t@see anchor\n@serial\t说明一个序列化属性\t@serial description\n@serialData\t说明通过writeObject( ) 和 writeExternal( )方法写的数据\t@serialData description\n@serialField\t说明一个ObjectStreamField组件\t@serialField name type description\n@since\t标记当引入一个特定的变化时\t@since release\n@throws\t和 @exception标签一样.\tThe @throws tag has the same meaning as the @exception tag.\n{@value}\t显示常量的值，该常量必须是static属性。\tDisplays the value of a constant, which must be a static field.\n@version\t指定类的版本\t@version info\n文档注释\n在开始的 /** 之后，第一行或几行是关于类、变量和方法的主要描述。")]),e._v(" "),a("p",[e._v("之后，你可以包含一个或多个各种各样的 @ 标签。每一个 @ 标签必须在一个新行的开始或者在一行的开始紧跟星号(*).")]),e._v(" "),a("p",[e._v("多个相同类型的标签应该放成一组。例如，如果你有三个 @see 标签，可以将它们一个接一个的放在一起。")]),e._v(" "),a("p",[e._v("下面是一个类的说明注释的实例：")]),e._v(" "),a("p",[e._v("/*** 这个类绘制一个条形图")]),e._v(" "),a("ul",[a("li",[e._v("@author runoob")]),e._v(" "),a("li",[e._v("@version 1.2\n*/\njavadoc 输出什么\njavadoc 工具将你 Java 程序的源代码作为输入，输出一些包含你程序注释的HTML文件。")])]),e._v(" "),a("p",[e._v("每一个类的信息将在独自的HTML文件里。javadoc 也可以输出继承的树形结构和索引。")]),e._v(" "),a("p",[e._v("由于 javadoc 的实现不同，工作也可能不同，你需要检查你的 Java 开发系统的版本等细节，选择合适的 Javadoc 版本。")]),e._v(" "),a("p",[e._v("实例\n下面是一个使用说明注释的简单实例。注意每一个注释都在它描述的项目的前面。")]),e._v(" "),a("p",[e._v("在经过 javadoc 处理之后，SquareNum 类的注释将在 SquareNum.html 中找到。")]),e._v(" "),a("p",[e._v("SquareNum.java 文件代码：\nimport java.io.*;")]),e._v(" "),a("p",[e._v("/**")]),e._v(" "),a("ul",[a("li",[e._v("这个类演示了文档注释")]),e._v(" "),a("li",[e._v("@author Ayan Amhed")]),e._v(" "),a("li",[e._v("@version 1.2\n"),a("em",[e._v("/\npublic class SquareNum {\n/")]),e._v("*\n"),a("ul",[a("li",[e._v("This method returns the square of num.")]),e._v(" "),a("li",[e._v("This is a multiline description. You can use")]),e._v(" "),a("li",[e._v("as many lines as you like.")]),e._v(" "),a("li",[e._v("@param num The value to be squared.")]),e._v(" "),a("li",[e._v("@return num squared.\n"),a("em",[e._v("/\npublic double square(double num) {\nreturn num * num;\n}\n/")]),e._v("*")]),e._v(" "),a("li",[e._v("This method inputs a number from the user.")]),e._v(" "),a("li",[e._v("@return The value input as a double.")]),e._v(" "),a("li",[e._v("@exception IOException On input error.")]),e._v(" "),a("li",[e._v("@see IOException\n"),a("em",[e._v("/\npublic double getNumber() throws IOException {\nInputStreamReader isr = new InputStreamReader(System.in);\nBufferedReader inData = new BufferedReader(isr);\nString str;\nstr = inData.readLine();\nreturn (new Double(str)).doubleValue();\n}\n/")]),e._v("*")]),e._v(" "),a("li",[e._v("This method demonstrates square().")]),e._v(" "),a("li",[e._v("@param args Unused.")]),e._v(" "),a("li",[e._v("@return Nothing.")]),e._v(" "),a("li",[e._v("@exception IOException On input error.")]),e._v(" "),a("li",[e._v('@see IOException\n*/\npublic static void main(String args[]) throws IOException\n{\nSquareNum ob = new SquareNum();\ndouble val;\nSystem.out.println("Enter value to be squared: ");\nval = ob.getNumber();\nval = ob.square(val);\nSystem.out.println("Squared value is " + val);\n}\n}\n如下，使用 javadoc 工具处理 SquareNum.java 文件：')])])])]),e._v(" "),a("p",[e._v("$ javadoc SquareNum.java\nLoading source file SquareNum.java...\nConstructing Javadoc information...\nStandard Doclet version 1.5.0_13\nBuilding tree for all the packages and classes...\nGenerating SquareNum.html...\nSquareNum.java:39: warning - @return tag cannot be used"),a("br"),e._v("\nin method with void return type.\nGenerating package-frame.html...\nGenerating package-summary.html...\nGenerating package-tree.html...\nGenerating constant-values.html...\nBuilding index for all the packages and classes...\nGenerating overview-tree.html...\nGenerating index-all.html...\nGenerating deprecated-list.html...\nBuilding index for all classes...\nGenerating allclasses-frame.html...\nGenerating allclasses-noframe.html...\nGenerating index.html...\nGenerating help-doc.html...\nGenerating stylesheet.css...\n1 warning")])])}),[],!1,null,null,null);n.default=r.exports}}]);