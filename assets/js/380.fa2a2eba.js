(window.webpackJsonp=window.webpackJsonp||[]).push([[380],{868:function(e,n,a){"use strict";a.r(n);var r=a(6),t=Object(r.a)({},(function(){var e=this.$createElement,n=this._self._c||e;return n("ContentSlotsDistributor",{attrs:{"slot-key":this.$parent.slotKey}},[n("h2",{attrs:{id:"swagger常用注解使用详解"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#swagger常用注解使用详解"}},[this._v("#")]),this._v(" Swagger常用注解使用详解")]),this._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[this._v('Swagger 通过注解的方式对接口进行描述，本节主要讲解一些常用生成接口文档的注解。\n1. Api\n@Api 用在类上，说明该类的作用。可以标记一个 Controller 类作为 Swagger 文档资源，使用方式代码如下所示。\n@Api(tags={"用户接口"})\n@RestController\npublic class UserController {\n}\n效果图如图 1 所示。\n\nAPI描述\n图 1  API 描述\n\ntags：接口说明，可以在页面中显示。可以配置多个，当配置多个的时候，在页面中会显示多个接口的信息。\n2. ApiModel\n@ApiModel 用在类上，表示对类进行说明，用于实体类中的参数接收说明。使用方式代码如下所示。\n@ApiModel(value = "com.biancheng.auth.param.AddUserParam", description = "新增用户参数")\npublic class AddUserParam {\n}\n\n效果图如图 2 所示。\n\nAPIModel描述\n图 2  APIModel 描述\n\n3. ApiModelProperty\n@ApiModelProperty() 用于字段，表示对 model 属性的说明。使用方式代码如下所示。\n@Data\n@ApiModel(value = "com.biancheng.auth.param.AddUserParam", description = "新增用户参数")\npublic class AddUserParam {\n    @ApiModelProperty(value = "ID")\n    private String id;\n    @ApiModelProperty(value = "名称")\n    private String name;\n    @ApiModelProperty(value = "年龄")\n    private int age;\n}\n效果如图 2 右下角。\n4. ApiParam\n@ApiParam 用于 Controller 中方法的参数说明。使用方式代码如下所示。\n@PostMapping("/user")\npublic UserDto addUser(@ApiParam(value = "新增用户参数", required = true) @RequestBody AddUserParam param) {\n    System.err.println(param.getName());\n    return new UserDto();\n}\n效果如图 2 中登录参数的展示。\nvalue：参数说明\nrequired：是否必填\n5. ApiOperation\n@ApiOperation 用在 Controller 里的方法上，说明方法的作用，每一个接口的定义。使用方式代码如下所示。\n@ApiOperation(value="新增用户", notes="详细描述")\npublic UserDto addUser(@ApiParam(value = "新增用户参数", required = true) @RequestBody AddUserParam param) {\n\n}\n\n效果图如图 3 所示。\n\nApiOperation描述\n图 3  ApiOperation 描述\n\nvalue：接口名称\nnotes：详细说明\n6. ApiResponse 和 ApiResponses\n@ApiResponse 用于方法上，说明接口响应的一些信息；@ApiResponses 组装了多个 @ApiResponse。使用方式代码如下所示。\n@ApiResponses({ @ApiResponse(code = 200, message = "OK", response = UserDto.class) })\n@PostMapping("/user")\npublic UserDto addUser(@ApiParam(value = "新增用户参数", required = true) @RequestBody AddUserParam param) {\n}\n7. ApiImplicitParam 和 ApiImplicitParams\n用于方法上，为单独的请求参数进行说明。使用方式代码如下所示。\n@ApiImplicitParams({\n        @ApiImplicitParam(name = "id", value = "用户ID", dataType = "string", paramType = "query", required = true, defaultValue = "1") })\n@ApiResponses({ @ApiResponse(code = 200, message = "OK", response = UserDto.class) })\n@GetMapping("/user")\npublic UserDto getUser(@RequestParam("id") String id) {\n    return new UserDto();\n}\nname：参数名，对应方法中单独的参数名称。\nvalue：参数中文说明。\nrequired：是否必填。\nparamType：参数类型，取值为 path、query、body、header、form。\ndataType：参数数据类型。\ndefaultValue：默认值。\n\n')])])]),n("p",[n("img",{attrs:{src:"http://c.biancheng.net/uploads/allimg/190830/5-1ZS0123246235.png",alt:"RUNOOB 图标"}})]),this._v(" "),n("p",[n("img",{attrs:{src:"http://c.biancheng.net/uploads/allimg/190830/5-1ZS0130051362.png",alt:"RUNOOB 图标"}})]),this._v(" "),n("p",[n("img",{attrs:{src:"http://c.biancheng.net/uploads/allimg/190830/5-1ZS01304495M.png",alt:"RUNOOB 图标"}})])])}),[],!1,null,null,null);n.default=t.exports}}]);