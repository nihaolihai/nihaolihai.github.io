(window.webpackJsonp=window.webpackJsonp||[]).push([[573],{1062:function(t,e,n){"use strict";n.r(e);var s=n(6),o=Object(s.a)({},(function(){var t=this.$createElement,e=this._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":this.$parent.slotKey}},[e("h2",{attrs:{id:"servlet-监听器统计网站在线人数"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#servlet-监听器统计网站在线人数"}},[this._v("#")]),this._v(" servlet 监听器统计网站在线人数")]),this._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v('在许多网站或者软件应用中都有统计当前在线人数这一功能。在通常情况下，当一个用户进入网站时就会创建一个 HttpSession 对象，而当用户离开网站时，HttpSession 对象就会被销毁。\n\n在 Servlet 的八种监听器中，HttpSessionListener 监听器就可以监听 Web 应用中 HttpSession 对象的创建和销毁过程。因此，可以使用实现了 HttpSessionListener 接口的监听器统计网站的当前在线人数。下面将分步骤讲解如何使用监听器统计网站当前在线人数。\n1. 创建监听器\n在 filterDemo01 项目的 com.mengma.listener 包中，创建一个实现了 HttpSessionListener 接口的监听器类 OnlineListener，在该类中编写用于实现统计网站在线人数的代码，如下所示。\npackage com.mengma.listener;\nimport javax.servlet.ServletContext;\nimport javax.servlet.http.HttpSessionEvent;\nimport javax.servlet.http.HttpSessionListener;\npublic class OnlineListener implements HttpSessionListener {\n    private int count = 0; // 用于统计在线人数\n    @Override\n    public void sessionCreated(HttpSessionEvent hse) {\n        count++; // Session对象创建时count变量加1\n        ServletContext context = hse.getSession().getServletContext();\n        context.setAttribute("count", new Integer(count));\n    }\n    @Override\n    public void sessionDestroyed(HttpSessionEvent hse) {\n        count--; // session对象销毁时count变量减1\n        ServletContext context = hse.getSession().getServletContext();\n        context.setAttribute("count", new Integer(count));\n    }\n}\n在 OnlineListener.java 中，首先定义了一个用于统计在线人数的成员变量 count。当每次监听到 HttpSession 对象创建时，count 成员变量会加 1。当每次监听到 HttpSession 对象销毁时，count 成员变量会减 1。\n\n在每次修改 count 成员变量后，还应该将 count 成员变量的值保存到 ServletContext 对象中，以便其他 JSP 页面程序可以从 ServletContext 对象中取出 count 成员变量，从而在页面上显示当前在线用户数量。\n\n在 web.xml 文件中，配置 OnlineListener 事件监听器，具体代码如下：\n<listener>\n    <listener-class>\n        com.mengma.listener.OnlineListener\n    </listener-class>\n</listener>\n需要注意的是，这个 HttpSession 对象在不活动时的最长存活时间仍然是 2min。\n2. 创建首页和注销页面\n1）实现首页\n在项目的 WebContext 目录中，创建一个名称为 index.jsp 的页面，该页面用于保存在 ServletContext 对象中的 count 变量值，即相当于显示当前在线人数，如下所示。\n<%@ page language="java" contentType="text/html; charset=utf-8"\n    pageEncoding="utf-8"%>\n<html>\n<head>\n<title>首页</title>\n</head>\n<body>\n    <h3>\n            当前在线人数为：<%=application.getAttribute("count") %>\n    </h3>\n    <a href="<%=response.encodeUrl("logout.jsp") %>">退出登录</a>\n</body>\n</html>\n2）实现注销页面\n在项目的 WebContext 目录中，编写注销页面 logout.jsp，logout.jsp 页面用于使当前 Session 对象失效，即完成用户注销功能，如下所示。\n<%@ page language="java" contentType="text/html; charset=utf-8"\n    pageEncoding="utf-8"%>\n<html>\n<head>\n<title>注销页面</title>\n</head>\n<body>\n    <%session.invalidate();%>\n    <h3>您已退出本系统</h3>\n</body>\n</html>\n3. 运行项目并查看结果\n启动 Tomcat 服务器，在浏览器的地址栏中输入地址 http://localhost:8080/filterDemo01/index.jsp 访问 index.jsp 页面，然后再分别开启两个不同的浏览器窗口（如火狐和谷歌浏览器）同时访问 index.jsp 页面（目的是防止同一个浏览器共享同一个Session会话），此时，各个浏览器窗口中显示的结果如图 1 所示。\n\n\n')])])])])}),[],!1,null,null,null);e.default=o.exports}}]);