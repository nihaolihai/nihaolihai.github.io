(window.webpackJsonp=window.webpackJsonp||[]).push([[228],{718:function(t,e,s){"use strict";s.r(e);var n=s(6),a=Object(n.a)({},(function(){var t=this.$createElement,e=this._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":this.$parent.slotKey}},[e("h2",{attrs:{id:"使用myecplise构建maven项目"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#使用myecplise构建maven项目"}},[this._v("#")]),this._v(" 使用MyEcplise构建Maven项目")]),this._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("现在工程创建好，相关的代码也写好了，接下来就是程序员的惯例：清理旧操作、编译源代码、运行测试案例、打包安装。\n\n以前的操作是用 mvn clean→compile→test→install 命令实现的，现在在 MyEclipse 中，单击命令选项就行。\n\n右击左边的“工程”，选择 Run As→Maven clean→test→install 命令\n\n当然，这里面缺少一个编译（compile）的选项，不过这也是正常的。MyEclipse 一般都是自动编译的，而且在运行 test 之前，它都会把所有代码重新编译一遍。\n\n如果一定要明确做编译的动作也是可以的。选择 Run As 后面的 Maven build… 命令（注意，是后面带“…”的命令），弹出如图 2 所示界面，在 Goals 后面的输入框中输入“compile”命令，单击 Run 按钮，就会执行编译操作。\n\n")])])])])}),[],!1,null,null,null);e.default=a.exports}}]);