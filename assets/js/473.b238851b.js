(window.webpackJsonp=window.webpackJsonp||[]).push([[473],{961:function(n,t,e){"use strict";e.r(t);var a=e(6),r=Object(a.a)({},(function(){var n=this.$createElement,t=this._self._c||n;return t("ContentSlotsDistributor",{attrs:{"slot-key":this.$parent.slotKey}},[t("h2",{attrs:{id:"swing-文本域组件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#swing-文本域组件"}},[this._v("#")]),this._v(" swing 文本域组件")]),this._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v('文本域与文本框的最大区别就是文本域允许用户输入多行文本信息。在 Swing 中使用 JTextArea 类实现一个文本域，其常用构造方法如下。\nJTextArea()：创建一个默认的文本域。\nJTextArea(int rows,int columns)：创建一个具有指定行数和列数的文本域。\nJTextArea(String text)：创建一个包含指定文本的文本域。\nJTextArea(String text,int rows,int columns)：创建一个既包含指定文本，又包含指定行数和列数的多行文本域。\n\nJTextArea 类的常用方法如表 1 所示。\n表1 JTextArea类的常用方法\n方法名称\t说明\nvoid append(String str)\t将字符串 str 添加到文本域的最后位置\nvoid setColumns(int columns)\t设置文本域的行数\nvoid setRows(int rows)\t设置文本域的列数\nint getColumns()\t获取文本域的行数\nvoid setLineWrap(boolean wrap)\t设置文本域的换行策略\nint getRows()\t获取文本域的列数\nvoid insert(String str,int position)\t插入指定的字符串到文本域的指定位置\nvoid replaceRange(String str,int start,int end)\t将指定的开始位 start 与结束位 end 之间的字符串用指定的字符串 str 取代\n例 1\n使用 JFrame 组件创建一个窗口，再向窗口中添加一个文本域，并将文本域中的文本设置为自动换行，允许显示滚动条。具体代码如下：\npackage ch17;\nimport java.awt.Color;\nimport java.awt.Dimension;\nimport java.awt.Font;\nimport javax.swing.JFrame;\nimport javax.swing.JPanel;\nimport javax.swing.JScrollPane;\nimport javax.swing.JTextArea;\npublic class JTextAreaDemo\n{\n    public static void main(String[] agrs)\n    {\n        JFrame frame=new JFrame("Java文本域组件示例");    //创建Frame窗口\n        JPanel jp=new JPanel();    //创建一个JPanel对象\n        JTextArea jta=new JTextArea("请输入内容",7,30);\n        jta.setLineWrap(true);    //设置文本域中的文本为自动换行\n        jta.setForeground(Color.BLACK);    //设置组件的背景色\n        jta.setFont(new Font("楷体",Font.BOLD,16));    //修改字体样式\n        jta.setBackground(Color.YELLOW);    //设置按钮背景色\n        JScrollPane jsp=new JScrollPane(jta);    //将文本域放入滚动窗口\n        Dimension size=jta.getPreferredSize();    //获得文本域的首选大小\n        jsp.setBounds(110,90,size.width,size.height);\n        jp.add(jsp);    //将JScrollPane添加到JPanel容器中\n        frame.add(jp);    //将JPanel容器添加到JFrame容器中\n        frame.setBackground(Color.LIGHT_GRAY);\n        frame.setSize(400,200);    //设置JFrame容器的大小\n        frame.setVisible(true);\n    }\n}\n\n在上述代码中将 JTextArea 文本域放入滚动窗口中，并通过 getPreferredSize() 方法获得文本域的显示大小。将滚动窗口的大小设置成与文本域大小相同，再将滚动窗口添加到 JPanel 面板中。\n\n')])])])])}),[],!1,null,null,null);t.default=r.exports}}]);