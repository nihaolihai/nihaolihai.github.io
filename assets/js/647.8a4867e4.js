(window.webpackJsonp=window.webpackJsonp||[]).push([[647],{1139:function(e,n,t){"use strict";t.r(n);var r=t(6),o=Object(r.a)({},(function(){var e=this,n=e.$createElement,t=e._self._c||n;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h2",{attrs:{id:"springbootrocketmq"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#springbootrocketmq"}},[e._v("#")]),e._v(" springbootrocketmq")]),e._v(" "),t("p",[e._v("rocketmq的安装\n"),t("a",{attrs:{href:"http://rocketmq.apache.org/",target:"_blank",rel:"noopener noreferrer"}},[e._v("rocketMq官网"),t("OutboundLink")],1)]),e._v(" "),t("p",[e._v("下载比较简单.rocketmq-3.5.8.zip,和rocketmq-externals-master扩展的,里面有控制台,比较方便也下载下来")]),e._v(" "),t("p",[e._v("我以前下载过,就不过多介绍,解压出来:")]),e._v(" "),t("p",[e._v("这是rocketmq源码,\n"),t("img",{attrs:{src:"https://img-blog.csdnimg.cn/20201101115421771.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM1OTExMTE4,size_16,color_FFFFFF,t_70#pic_center",alt:"在这里插入图片描述"}})]),e._v(" "),t("p",[e._v("这是扩展源码:\n"),t("img",{attrs:{src:"https://img-blog.csdnimg.cn/20201101115441656.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM1OTExMTE4,size_16,color_FFFFFF,t_70#pic_center",alt:"在这里插入图片描述"}})]),e._v(" "),t("p",[e._v("因为是源码都直接运行不了的,需要进行编译,因为是java语言编写的,肯定需要java环境,直接执行install.bat,然后进入target目录.rocket就是一个maven项目.\n"),t("img",{attrs:{src:"https://img-blog.csdnimg.cn/20201101115508732.png#pic_center",alt:"在这里插入图片描述"}})]),e._v(" "),t("p",[e._v("targe里面就可以直接执行了")]),e._v(" "),t("p",[e._v("执行文件都在bin里面:\n"),t("img",{attrs:{src:"https://img-blog.csdnimg.cn/20201101115323731.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM1OTExMTE4,size_16,color_FFFFFF,t_70#pic_center",alt:"在这里插入图片描述"}}),e._v(" "),t("img",{attrs:{src:"https://img-blog.csdnimg.cn/20201101115345204.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM1OTExMTE4,size_16,color_FFFFFF,t_70#pic_center",alt:"在这里插入图片描述"}})]),e._v(" "),t("p",[e._v("分别执行这两个,一般没报错就成功了,\n"),t("img",{attrs:{src:"https://img-blog.csdnimg.cn/20201101115543444.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM1OTExMTE4,size_16,color_FFFFFF,t_70#pic_center",alt:"在这里插入图片描述"}})]),e._v(" "),t("p",[e._v("console的页面控制台基本同理:\n"),t("img",{attrs:{src:"https://img-blog.csdnimg.cn/20201101115535895.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM1OTExMTE4,size_16,color_FFFFFF,t_70#pic_center",alt:"在这里插入图片描述"}})]),e._v(" "),t("p",[e._v("在这里插入图片描述\n有个window的批处理文件,直接点击很方便很人性化.然后也是一个springboot项目,看到最后的启动成功就ok了,看得到端口,12581\n"),t("img",{attrs:{src:"https://img-blog.csdnimg.cn/20201101115555587.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM1OTExMTE4,size_16,color_FFFFFF,t_70#pic_center",alt:"在这里插入图片描述"}})]),e._v(" "),t("p",[e._v("刚进去的画面很酷,可以更换语言,简体中文.很方便,都是中文很方便\n"),t("img",{attrs:{src:"https://img-blog.csdnimg.cn/20201101115605363.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzM1OTExMTE4,size_16,color_FFFFFF,t_70#pic_center",alt:"在这里插入图片描述"}})]),e._v(" "),t("p",[e._v("启动注意我使用的老版本,新版本好像不用设置了:")]),e._v(" "),t("p",[e._v("先启动mynameserver")]),e._v(" "),t("p",[e._v("在启动mqbroker的时候需要指定autoCreateTopicEnable=true。例如：")]),e._v(" "),t("p",[e._v("nohup sh mqbroker -n 192.168.180.133:9876 autoCreateTopicEnable=true > ~/logs/rocketmqlogs/broker.log 2>&1 &")]),e._v(" "),t("p",[e._v("window系统下：\n在window系统下需要在cmd中启动mqbroker才行。命令格式如下：\nmqbroker.exe -n localhost:9876 autoCreateTopicEnable=true")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('1 依赖包\n<dependency> <groupId>org.apache.rocketmq</groupId> <artifactId>rocketmq-spring-boot-starter</artifactId> <version>2.0.3</version> </dependency>\n2配置\nrocketmq: name-server: 127.0.0.1:9876\nproducer: group: my-group\nrocketmq. producer.send-nd-message-timeout=300000\nrocketmq. producer.compess-message-body-threshold=4096\nrocketmq.producer.max-message-size=4194304\nrocketmq.producer.retry-times-when-send-async-failed=2\nsms-uhen-send- async-failed-e\nrocketmq.producer.retry-next.server=true\nrocketmq.producer.retry-times-when-send-failed=2\n\n\n编写个生产者\nimport com.mr.pojo.OrderPaidEvent;\nimport org.apache.rocketmq.spring.core.RocketMQTemplate;\nimport org.junit.Test;\nimport org.junit.runner.RunWith;\nimport org.springframework.boot.test.context.SpringBootTest;\nimport org.springframework.messaging.support.MessageBuilder;\nimport org.springframework.test.context.junit4.SpringRunner;\n\nimport javax.annotation.Resource;\nimport java.math.BigDecimal;\n\n/**\n* @ClassName RocketMqTest\n* @Description RocketMqTest\n* @Author stack\n* @Version 1.0\n* @since 2019/6/23 18:32\n*/\n@RunWith(SpringRunner.class)\n@SpringBootTest\npublic class RocketMqTest {\n\n@Resource\nprivate RocketMQTemplate rocketMQTemplate;\n\n@Test\npublic void testRocketMq1() {\n\nString name = "aaa";\nrocketMQTemplate.convertAndSend("test-topic-1", name);\nrocketMQTemplate.send("test-topic-2", MessageBuilder.withPayload(new OrderPaidEvent("aa,22",new BigDecimal("22"))).build());\n\nSystem.err.println("发送成功...");\n\n}\n\n}\n\n实体类\n\npublic class OrderPaidEvent implements Serializable {\n\nprivate String orderId;\n\nprivate int paidMoney;\n\npublic OrderPaidEvent() {\n}\n\npublic OrderPaidEvent(String orderId, int paidMoney) {\nthis.orderId = orderId;\nthis.paidMoney = paidMoney;\n}\n\npublic String getOrderId() {\nreturn orderId;\n}\n\npublic void setOrderId(String orderId) {\nthis.orderId = orderId;\n}\n\npublic int getPaidMoney() {\nreturn paidMoney;\n}\n\npublic void setPaidMoney(int paidMoney) {\nthis.paidMoney = paidMoney;\n}\n\n}\n\n编写个消费者\n@Service\n@RocketMQMessageListener(topic = "test-topic-2", consumerGroup = "my-consumer_test-topic-2")\npublic class OrderPaidEventConsumer implements RocketMQListener<OrderPaidEvent> {\n\n@Override\npublic void onMessage(OrderPaidEvent message) {\n\nSystem.out.print("------- OrderPaidEventConsumer received:"+ JSON.toJSONString(message));\n}\n\n}\n\n\n\n')])])])])}),[],!1,null,null,null);n.default=o.exports}}]);