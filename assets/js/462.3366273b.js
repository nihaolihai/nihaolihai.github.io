(window.webpackJsonp=window.webpackJsonp||[]).push([[462],{966:function(n,e,a){"use strict";a.r(e);var t=a(6),r=Object(t.a)({},(function(){var n=this.$createElement,e=this._self._c||n;return e("ContentSlotsDistributor",{attrs:{"slot-key":this.$parent.slotKey}},[e("h2",{attrs:{id:"swing-窗口容器和面板容器"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#swing-窗口容器和面板容器"}},[this._v("#")]),this._v(" swing 窗口容器和面板容器")]),this._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v('JFrame 窗口\nJFrame 用来设计类似于 Windows 系统中窗口形式的界面。JFrame 是 Swing 组件的顶层容器，该类继承了 AWT 的 Frame 类，支持 Swing 体系结构的高级 GUI 属性。\n\nJFrame 类的常用构造方法如下所示。\nJFrame()：构造一个初始时不可见的新窗体。\nJFrame(String title)：创建一个具有 title 指定标题的不可见新窗体。\n\n当创建一个 JFrame 类的实例化对象后，其他组件并不能够直接放到容器上面，需要将组件添加至内容窗格，而不是直接添加至 JFrame 对象。示例代码如下：\nframe.getContentPane().add(b);\n\n使用 JFrame 类创建 GUI 界面时，其组件的布局组织示意如图 1 所示。\n\nJFrame窗口组件组织\n图1 JFrame窗口组件组织\n\n在图 1 中显示有“大家好”的 Swing 组件需要放到内容窗格的上面，内容窗格再放到 JFrame 顶层容器的上面。菜单栏可以直接放到顶层容器 JFrame 上，而不通过内容窗格。内容窗格是一个透明的没有边框的中间容器。\n\nJFrame 类中的常用方法如表 1 所示。\n\n表1 JFrame类的常用方法\n方法名称\t概述\ngetContentPane()\t返回此窗体的 contentPane 对象\ngetDefaultCloseOperation()\t返回用户在此窗体上单击“关闭”按钮时执行的操作\nsetContentPane(Container contentPane)\t设置 contentPane 属性\nsetDefaultCloseOperation(int operation)\t设置用户在此窗体上单击“关闭”按钮时默认执行的操作\nsetDefaultLookAndFeelDecorated (boolean\ndefaultLookAndFeelDecorated)\t设置 JFrame 窗口使用的 Windows 外观（如边框、关\n闭窗口的 小部件、标题等）\nsetIconImage(Image image)\t设置要作为此窗口图标显不的图像\nsetJMenuBar( JMenuBar menubar)\t设置此窗体的菜单栏\nsetLayout(LayoutManager manager)\t设置 LayoutManager 属性\n例 1\n在了解窗口组件 JFrame 的语法之后，下面使用 JFrame 类创建一个窗口。要求设置窗口的标题为“Java 第一个 GUI 程序”，并向窗口内添加“这是使用 JFrame 类创建的窗口”文本。具体实现代码如下：\npackage ch17;\nimport javax.swing.JFrame;\nimport javax.swing.JLabel;\nimport java.awt.*;\npublic class JFrameDemo extends JFrame\n{\n    public JFrameDemo()\n    {\n        setTitle("Java 第一个 GUI 程序");    //设置显示窗口标题\n        setSize(400,200);    //设置窗口显示尺寸\n        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);    //置窗口是否可以关闭\n        JLabel jl=new JLabel("这是使用JFrame类创建的窗口");    //创建一个标签\n        Container c=getContentPane();    //获取当前窗口的内容窗格\n        c.add(jl);    //将标签组件添加到内容窗格上\n        setVisible(true);    //设置窗口是否可见\n    }\n    public static void main(String[] agrs)\n    {\n        new JFrameDemo();    //创建一个实例化对象\n    }\n}\n\n上述代码创建的 JFrameDemo 类继承了 JFrame 类，因此 JFrameDemo 类可以直接使用 JFrame 类的方法。setTitle() 方法用来设置窗口标题，setDefaultCloseOperation() 方法用来设置响应方式，即当单击“关闭”按钮时退出该程序。\n\n在构造方法中使用 JLabel 类创建一个标签对象 jl，其参数是标签的文本提示信息。JFrame 框架的 getContentPane() 方法获取了内容窗格对象，并使用 add() 方法将标签添加到内容窗格上。最后的 setVisible() 方法是从父类中继承的方法。\n\n程序运行的窗口结果如图 2 所示。\n\n![RUNOOB 图标](http://c.biancheng.net/uploads/allimg/181102/3-1Q102141R3E6.gif)\n\n窗口运行结果\n图2 窗口运行结果\nJPanel 面板\nJPanel 是一种中间层容器，它能容纳组件并将组件组合在一起，但它本身必须添加到其他容器中使用。JPanel 类的构造方法如下。\nJPanel()：使用默认的布局管理器创建新面板，默认的布局管理器为 FlowLayout。\nJPanel(LayoutManagerLayout layout)：创建指定布局管理器的 JPanel 对象。\n\nJPanel 类的常用方法如表 2 所示。\n\n表2 JPanel类的常用方法\n方法名及返回值类型\t说明\nComponent add(Component comp)\t将指定的组件追加到此容器的尾部\nvoid remove(Component comp)\t从容器中移除指定的组件\nvoid setFont(Font f)\t设置容器的字体\nvoid setLayout(LayoutManager mgr)\t设置容器的布局管理器\nvoid setBackground(Color c)\t设置组件的背景色\n例 2\n编写一个使用 JPanel 组件的窗口程序。要求设置标题为“Java的第二个GUI程序”，然后向窗口中添加一个面板，并设置面板上显示的文本为“这是放在JPanel上的标签”，设置面板背景颜色为白色。具体实现代码如下：\npackage ch17;\nimport javax.swing.JFrame;\nimport javax.swing.JLabel;\nimport javax.swing.JPanel;\nimport java.awt.*;\npublic class JPanelDemo\n{   \n    public static void main(String[] agrs)\n    {\n        JFrame jf=new JFrame("Java第二个GUI程序");    //创建一个JFrame对象\n        jf.setBounds(300, 100, 400, 200);    //设置窗口大小和位置\n        JPanel jp=new JPanel();    //创建一个JPanel对象\n        JLabel jl=new JLabel("这是放在JPanel上的标签");    //创建一个标签\n        jp.setBackground(Color.white);    //设置背景色\n        jp.add(jl);    //将标签添加到面板\n        jf.add(jp);    //将面板添加到窗口\n        jf.setVisible(true);    //设置窗口可见\n    }\n}\n\n如上述代码，首先创建了一个 JFrame 对象，并设置其大小和位置，然后创建了一个 JPanel对象表示面板，调用 setBackground() 方法设置面板的背景色为白色，调用 add() 方法将标签添加到此面板。JFrame 类的 add() 方法将 JPanel 面板添加到 JFmme 窗口中。最后调用 setVisible() 方法将窗口设置为可见。\n')])])]),e("p",[e("img",{attrs:{src:"http://c.biancheng.net/uploads/allimg/181102/3-1Q10214191E32.gif",alt:"RUNOOB 图标"}})])])}),[],!1,null,null,null);e.default=r.exports}}]);