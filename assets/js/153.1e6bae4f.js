(window.webpackJsonp=window.webpackJsonp||[]).push([[153],{642:function(n,e,t){"use strict";t.r(e);var a=t(6),s=Object(a.a)({},(function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[t("h2",{attrs:{id:"java-object-equals-方法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#java-object-equals-方法"}},[n._v("#")]),n._v(" Java Object equals() 方法")]),n._v(" "),t("p",[n._v("Object equals() 方法用于比较两个对象是否相等。")]),n._v(" "),t("p",[n._v("equals() 方法比较两个对象，是判断两个对象引用指向的是同一个对象，即比较 2 个对象的内存地址是否相等。")]),n._v(" "),t("p",[n._v("注意：如果子类重写了 equals() 方法，就需要重写 hashCode() 方法，比如 String 类就重写了 equals() 方法，同时也重写了 hashCode() 方法。")]),n._v(" "),t("p",[n._v("语法\nobject.equals(Object obj)\n参数\nobj - 要比较的对象。")]),n._v(" "),t("p",[n._v("返回值\n如果两个对象相等返回 true，否则返回 false。")]),n._v(" "),t("p",[n._v("实例\n以下实例演示了 equals() 方法的使用：")]),n._v(" "),t("p",[n._v("实例\nclass RunoobTest {\npublic static void main(String[] args) {")]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[n._v("    // Object 类使用 equals() 方法\n    // 创建两个对象\n    Object obj1 = new Object();\n    Object obj2 = new Object();\n\n    // 判断 obj1 与 obj2 是否相等\n    // 不同对象，内存地址不同，不相等，返回 false\n    System.out.println(obj1.equals(obj2)); // false\n\n    // obj1 赋值给 obj3\n    // String 重写了 equals() 方法\n    // 对象引用，内存地址相同，相等，返回 true\n    Object obj3 = obj1;\n    System.out.println(obj1.equals(obj3)); // true\n}\n")])])]),t("p",[n._v("}\n以上程序执行结果为：")]),n._v(" "),t("p",[n._v("false\ntrue\nString 类重写了 equals() 方法，用于比较两个字符串是否相等：")]),n._v(" "),t("p",[n._v("实例\nclass RunoobTest {\npublic static void main(String[] args) {")]),n._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",[t("code",[n._v('    // String 类使用 equals() 方法\n    // 创建两个对象\n    String obj1 = new String();\n    String obj2 = new String();\n\n    // 判断 obj1 与 obj2 是否相等\n    // 初始化的两个对象都为 null，所以是相等，返回 true\n    System.out.println(obj1.equals(obj2)); // true\n\n    // 给对象赋值\n    obj1 = "Runoob";\n    obj2 = "Google";\n\n    // 判断 obj1 与 obj2 是否相等\n    // 两个值不同，内存地址也不同，所以不相等，返回 false\n    System.out.println(obj1.equals(obj2)); // false\n\n}\n')])])]),t("p",[n._v("}\n以上程序执行结果为：")]),n._v(" "),t("p",[n._v("true\nfalse")])])}),[],!1,null,null,null);e.default=s.exports}}]);