(window.webpackJsonp=window.webpackJsonp||[]).push([[433],{921:function(e,n,r){"use strict";r.r(n);var t=r(6),o=Object(t.a)({},(function(){var e=this.$createElement,n=this._self._c||e;return n("ContentSlotsDistributor",{attrs:{"slot-key":this.$parent.slotKey}},[n("h2",{attrs:{id:"spring-mvc使用handlerexceptionresolver接口异常处理"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#spring-mvc使用handlerexceptionresolver接口异常处理"}},[this._v("#")]),this._v(" Spring MVC使用HandlerExceptionResolver接口异常处理")]),this._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[this._v('org.springframework.web.servlet.HandlerExceptionResolver 接口用于解析请求处理过程中所产生的异常。开发者可以开发该接口的实现类进行 Spring MVC 应用的异常统一处理。\n\n在 springMVCDemo10 应用的 exception 包中创建一个 HandlerExceptionResolver 接口的实现类 MyExceptionHandler，具体代码如下：\npackage exception;\nimport java.sql.SQLException;\nimport java.util.HashMap;\nimport java.util.Map;\nimport javax.servlet.http.HttpServletRequest;\nimport javax.servlet.http.HttpServletResponse;\nimport org.springframework.web.servlet.HandlerExceptionResolver;\nimport org.springframework.web.servlet.ModelAndView;\npublic class MyExceptionHandler implements HandlerExceptionResolver {\n    @Override\n    public ModelAndView resolveException(HttpServletRequest arg0,\n            HttpServletResponse arg1, Object arg2, Exception arg3) {\n        Map<String, Object> model = new HashMap<String, Object>();\n        model.put("ex", arg3);\n        // 根据不同错误转向不同页面（统一处理），即异常与View的对应关系\n        if (arg3 instanceof MyException) {\n            return new ModelAndView("my-error", model);\n        } else if (arg3 instanceof SQLException) {\n            return new ModelAndView("sql-error", model);\n        } else {\n            return new ModelAndView("error", model);\n        }\n    }\n}\n需要将实现类 MyExceptionHandler 在配置文件中托管给 Spring MVC 框架才能进行异常的统一处理，配置代码为 <bean class="exception.MyExceptionHandler"/>。\n\n在实现 HandlerExceptionResolver 接口统一处理异常时将配置文件的代码修改如下：\n<?xml version="1.0" encoding="UTF-8"?>\n<beans xmlns="http://www.springframework.org/schema/beans"\n    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"\n    xmlns:context="http://www.springframework.org/schema/context"\n    xsi:schemaLocation="\n        http://www.springframework.org/schema/beans\n        http://www.springframework.org/schema/beans/spring一beans.xsd\n        http://www.springframework.org/schema/context\n        http://www.springframework.org/schema/context/spring-context.xsd">\n    \x3c!-- 使用扫描机制扫描包 --\x3e\n    <context:component-scan base-package="controller" />\n    <context:component-scan base-package="service" />\n    <context:component-scan base-package="dao" />\n    \x3c!-- 配置视图解析器 --\x3e\n    <bean\n        class="org.springframework.web.servlet.view.InternalResourceViewResolver"\n        id="internalResourceViewResolver">\n        \x3c!--前缀 --\x3e\n        <property name="prefix" value="/WEB-INF/jsp/" />\n        \x3c!-- 后缀 --\x3e\n        <property name="suffix" value=".jsp" />\n    </bean>\n    \x3c!--托管MyExceptionHandler--\x3e\n    <bean class="exception.MyExceptionHandler"/>\n</beans>\n发布 springMVCDemo10 应用到 Tomcat 服务器并启动服务器，然后即可通过地址“http://localhost:8080/springMVCDemo10/”测试应用。\n\n')])])])])}),[],!1,null,null,null);n.default=o.exports}}]);