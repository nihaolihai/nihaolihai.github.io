(window.webpackJsonp=window.webpackJsonp||[]).push([[625],{1114:function(n,r,i){"use strict";i.r(r);var t=i(6),s=Object(t.a)({},(function(){var n=this.$createElement,r=this._self._c||n;return r("ContentSlotsDistributor",{attrs:{"slot-key":this.$parent.slotKey}},[r("h2",{attrs:{id:"spring目录结构和基础jar包介绍"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#spring目录结构和基础jar包介绍"}},[this._v("#")]),this._v(" Spring目录结构和基础JAR包介绍")]),this._v(" "),r("p",[r("a",{attrs:{href:"http://repo.spring.io/simple/libs-release-local/org/springframework/spring/",target:"_blank",rel:"noopener noreferrer"}},[this._v("spring"),r("OutboundLink")],1)]),this._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[this._v("目前 Spring 框架的最新版本是 5.1.8，本教程是基于 Spring 的稳定版本 3.2.13 进行讲解的。读者可以通过网址 \n\n下载名称为 springframework-3.2.13.RELEASE-dist.zip 的压缩包。\n\n表 1 Spring 的目录介绍\n名称\t作用\ndocs\t包含 Spring 的 API 文档和开发规范\nlibs\t包含开发需要的 JAR 包和源码包\nschema\t包含开发所需要的 schema 文件，在这些文件中定义了 Spring 相关配置文件的约束\n在 libs 目录中，包含了 Spring 框架提供的所有 JAR 文件，其中有四个 JAR 文件是 Spring 框架的基础包，分别对应 Spring 容器的四个模块，具体如表 2 所示。\n\n表 2 Spring 依赖 JAR 包介绍\n名称\t作用\nspring-core-3.2.13.RELEASE.jar\t包含 Spring 框架基本的核心工具类，Spring 其他组件都要用到这个包中的类，是其他组件的基本核心。\nspring-beans-3.2.13.RELEASE.jar\t所有应用都要用到的，它包含访问配置文件、创建和管理 bean 以及进行 Inversion of Control（IoC）或者 Dependency Injection（DI）操作相关的所有类。\nspring-context-3.2.13.RELEASE.jar\tSpring 提供在基础 IoC 功能上的扩展服务，此外还提供许多企业级服务的支持，如邮件服务、任务调度、JNDI 定位、EJB 集成、远程访问、缓存以及各种视图层框架的封装等\nspring-expression-3.2.13.RELEASE.jar\t定义了 Spring 的表达式语言。\n需要注意的是，在使用 Spring 开发时，除了 Spring 自带的 JAR 包以外，还需要一个第三方 JAR 包 commons.logging 处理日志信息\n读者可以通过网址 http://commons.apache.org/proper/commons-logging/download_logging.cgi 下载。该 JAR 包现在最新版本为 commons-logging.1.2，下载完成后，解压即可找到。\n\n使用 Spring 框架时，只需将 Spring 的四个基础包以及 commons-logging-1.2.jar 包复制到项目的 lib 目录，并发布到类路径中即可。\n\n")])])])])}),[],!1,null,null,null);r.default=s.exports}}]);