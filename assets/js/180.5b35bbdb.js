(window.webpackJsonp=window.webpackJsonp||[]).push([[180],{671:function(t,e,n){"use strict";n.r(e);var a=n(6),s=Object(a.a)({},(function(){var t=this.$createElement,e=this._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":this.$parent.slotKey}},[e("h2",{attrs:{id:"java-拼接josn"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#java-拼接josn"}},[this._v("#")]),this._v(" java 拼接josn")]),this._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v('package com.example.springbootdemo.utils;\n\n\nimport com.alibaba.fastjson.JSONArray;\nimport com.alibaba.fastjson.JSONObject;\nimport com.alibaba.fastjson.serializer.SerializerFeature;\nimport com.google.common.collect.Maps;\nimport org.apache.commons.io.FileUtils;\nimport org.slf4j.Logger;\nimport org.slf4j.LoggerFactory;\n\nimport java.io.File;\nimport java.util.*;\nimport java.util.stream.Collectors;\n\npublic class TestJsonPackge {\n\n    public static final Logger log = LoggerFactory.getLogger(TestJsonPackge.class);\n\n    /**\n     * <dependency>\n     *             <groupId>org.apache.commons</groupId>\n     *             <artifactId>commons-lang3</artifactId>\n     *             <version>3.8.1</version>\n     *         </dependency>\n     *         <dependency>\n     *             <groupId>org.apache.commons</groupId>\n     *             <artifactId>commons-collections4</artifactId>\n     *             <version>4.4</version>\n     *         </dependency>\n     *          <dependency>\n     *             <groupId>com.alibaba</groupId>\n     *             <artifactId>fastjson</artifactId>\n     *             <version>1.2.66</version>\n     *         </dependency>\n     * @param res\n     */\n    public static void main(String[] res){\n        String typeName = "DecHead";\n        String msg = "";\n        String msgId = UUID.randomUUID().toString();\n        StringBuffer message = new StringBuffer();\n        Map<String, Object> headMap = Maps.newHashMap();\n        List<Map<String, Object>> packMap = new ArrayList<>();\n        headMap.put("test1","测试1");\n        headMap.put("test2","测试2");\n        headMap.put("testType","99,");\n        String wrapType = headMap.get("testType").toString().trim();\n        String[] strArr= wrapType.split(",");\n        List<String> strList = Arrays.asList(strArr);\n         if(strList.size()>1){\n            headMap.put("testType","99");\n             List<String> typeList = strList.parallelStream().filter(string -> !string.isEmpty() && !"99".equals(string)).collect(Collectors.toList());\n             for (String string:typeList) {\n                Map<String, Object> wrapTypeMap = Maps.newHashMap();\n                wrapTypeMap.put("PackQty","");\n                wrapTypeMap.put("PackType",string.trim());\n                packMap.add(wrapTypeMap);\n            }\n        }\n        try {\n            msg = packageMsgJson(headMap, typeName, message);\n        } catch (Exception ex) {\n            throw new ErrorException(400, "报关单表头组装失败:" + ex.getMessage());\n        }\n        if(packMap.size()>0){\n            //2.1.1组装包装种类\n            typeName = "DecOtherPack";\n            try {\n                for (int i = 0; i < packMap.size(); i++) {\n                    msg = packageMsgJson(packMap.get(i), typeName, message);\n                }\n            } catch (Exception ex) {\n                throw new ErrorException(400, "报关单包装种类组装失败:" + ex.getMessage());\n            }\n            writeLogger("报关单包装种类组装成功,MESSAGE_ID", msgId, false);\n        }\n         /*组装完后的json写入文件*/\n        try {\n            writeJsonToFile(msg, msgId);\n        } catch (Exception e) {\n            e.printStackTrace();\n        }\n    }\n\n    private static String packageMsgJson(Map<String, Object> map, String typeName, StringBuffer message) {\n        if (message.length() > 0) {\n            message.append("\\r\\n");\n        }\n        List<Map<String, Object>> packMap = new ArrayList<>();\n        Map<String, Object> headMap = new HashMap<>();\n        headMap.put("test6","测试6");\n        headMap.put("test8","测试8");\n        headMap.put("test9","测试8");\n        packMap.add(headMap);\n        message.append(String.format("{\\"%s\\":", typeName));\n        message.append(JSONArray.toJSONString(map, SerializerFeature.WriteMapNullValue));\n        //message.append(","+String.format("\\"%s\\":", "packd"));\n        //message.append(JSONArray.toJSONString(packMap, SerializerFeature.WriteMapNullValue));\n        message.append("}");\n        String msg = message.toString().replace("null", "\\"\\"");\n        return msg;\n    }\n    private static void writeJsonToFile(String msg, String msgId) throws Exception {\n        String dirPath = "E://测试上传";\n        File dirFile = new File(dirPath);\n        FileUtils.forceMkdir(dirFile);\n        String filePath = dirPath + File.separator + msgId + ".json";\n        File file = new File(filePath);\n        FileUtils.write(file, msg, "utf-8", false);\n    }\n    /**\n     * 写入日志\n     *\n     * @param logInfo    写入信息\n     * @param prefix     日志描述前缀\n     * @param isErrorLog true：是错误日志 false：是描述性日志\n     */\n    public static void writeLogger(String logInfo, String prefix, boolean isErrorLog) {\n\n        if (isErrorLog) {\n            log.error(String.format("%s-----%s", prefix, logInfo));\n        } else {\n            log.info(String.format("%s-----%s", prefix, logInfo));\n        }\n    }\n\n    /**\n     * 组装xml\n     * @return\n     */\n    public String packageMessage(DcBillStaPushTask dcBillStaPushTask, JSONObject paramsCode){\n        String paramsCodes = "{Url:23,UrlName:\'sds\'}";\n        JSONObject jsonObj = JSONObject.parseObject(paramsCodes);\n        if(paramsCode == null) return null;\n\n        String url = paramsCode.get("Url") == null ? "" : paramsCode.get("Url").toString();\n        String urlName = paramsCode.get("UrlName") == null ? "" : paramsCode.get("UrlName").toString();\n        String userName = paramsCode.get("UserName") == null ? "" : paramsCode.get("UserName").toString();\n        String passWord = paramsCode.get("PassWord") == null ? "" : paramsCode.get("PassWord").toString();\n        String preSeqNo = dcBillStaPushTask.getPreSeqNo() == null ? "" : dcBillStaPushTask.getPreSeqNo();\n        String tradeCode = dcBillStaPushTask.getTradeCode() == null ? "" : dcBillStaPushTask.getTradeCode();\n        String emsListNo = dcBillStaPushTask.getEmsListNo() == null ? "" : dcBillStaPushTask.getEmsListNo();\n        String listNo = dcBillStaPushTask.getListNo() == null ? "" : dcBillStaPushTask.getListNo();\n        String entryNo = dcBillStaPushTask.getEntryNo() == null ? "" : dcBillStaPushTask.getEntryNo();\n        String relEntryNo = dcBillStaPushTask.getRelEntryNo() == null ? "" : dcBillStaPushTask.getRelEntryNo();\n        String listIochkptStatus = dcBillStaPushTask.getListIochkptStatus() == null ? "" : dcBillStaPushTask.getListIochkptStatus();\n        String relListNo = dcBillStaPushTask.getRelListNo() == null ? "" : dcBillStaPushTask.getRelListNo();\n        String listStat = dcBillStaPushTask.getListStat() == null ? "" : dcBillStaPushTask.getListStat();\n        String vrfdedMark = dcBillStaPushTask.getVrfdedMark() == null ? "" : dcBillStaPushTask.getVrfdedMark();\n        StringBuffer sb = new StringBuffer();\n        sb.append("requestData={");\n        sb.append("\\"DxpSeq\\":\\""+ preSeqNo + "\\",");\n        sb.append("\\"DealFlag\\": \\"Y\\",");\n        sb.append("\\"Url\\":\\""+ url + "\\",");\n        sb.append("\\"UrlName\\":\\"" + urlName + "\\",");\n        sb.append("\\"SendId\\":\\"admin\\",");\n        sb.append("\\"ReceiveId\\":\\""+ tradeCode + "\\",");\n        sb.append("\\"SendContent\\":\\"<?xml version=\\\\\\"1.0\\\\\\"?><KtBillHeadRetInfo xmlns:xsi=\\\\\\"http://www.w3.org/2001/XMLSchema-instance\\\\\\" xmlns:xsd=\\\\\\"http://www.w3.org/2001/XMLSchema\\\\\\">");\n        sb.append("<UserName>" + userName + "</UserName>");\n        sb.append("<PassWord>" + passWord + "</PassWord>");\n        sb.append("<PoNo>" + emsListNo + "</PoNo>");\n        sb.append("<EportListNo>" + listNo + "</EportListNo>");\n        sb.append("<EntryNo>" + entryNo + "</EntryNo>");\n        sb.append("<RltEntryNo>" + relEntryNo + "</RltEntryNo>");\n        sb.append("<RltInvtNo>" + relListNo + "</RltInvtNo>");\n        sb.append("<IoChkPt>" + listIochkptStatus + "</IoChkPt>");\n        sb.append("<PassDate></PassDate>");  // 空\n        sb.append("<ListStat>" + listStat + "</ListStat>");\n        sb.append("<VrfdedMarkcd>" + vrfdedMark + "</VrfdedMarkcd>");\n        sb.append("</KtBillHeadRetInfo>\\",");\n        sb.append("\\"DataType\\":\\"1\\",");\n        sb.append("\\"MsgType\\":\\"KT_EMS\\"");\n        sb.append("}");\n        return sb.toString();\n    }\n}\n\n\n\n')])])])])}),[],!1,null,null,null);e.default=s.exports}}]);