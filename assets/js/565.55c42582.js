(window.webpackJsonp=window.webpackJsonp||[]).push([[565],{1054:function(t,e,i){"use strict";i.r(e);var r=i(6),s=Object(r.a)({},(function(){var t=this.$createElement,e=this._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":this.$parent.slotKey}},[e("h2",{attrs:{id:"servlet-过滤器"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#servlet-过滤器"}},[this._v("#")]),this._v(" servlet 过滤器")]),this._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("Filter 接口中的方法\n方法声明\t功能描述\ninit(FilterConfig filterConfig)\tinit() 方法用于初始化过滤器，开发人员可以在 init() 方法中完成与构造方法类似的初始化功能，如果初始化代码中要使用到 FillerConfig 对象，那么，这些初始化代码就只能在 Filler 的 init() 方法中编写，而不能在构造方法中编写\n\ndoFilter(ServletRequest request,SeivletResponse response, FilterChain chain)\tdoFilter() 方法有多个参数，其中，参数 request 和 response 为 Web 服务器或 Filter 链中的上一个 Filter 传递过来的请求和响应对象；\n参数 chain 代表当前 Filter 链的对象，只有在当前 Filter 对象中的 doFilter() 方法内部需要调用 FilterChain 对象的 doFilter() 方法，才能把请求交付给 Filter 链中的下一个 Filter 或者目标程序处理\ndestroy()\tdestroy() 方法在 Web 服务器卸载 Filter 对象之前被调用，该方法用于释放被 Filter 对象打开的资源，例如关闭数据库和 I/O 流\n\n")])])])])}),[],!1,null,null,null);e.default=s.exports}}]);