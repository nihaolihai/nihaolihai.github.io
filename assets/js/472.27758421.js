(window.webpackJsonp=window.webpackJsonp||[]).push([[472],{960:function(t,e,n){"use strict";n.r(e);var i=n(6),l=Object(i.a)({},(function(){var t=this.$createElement,e=this._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":this.$parent.slotKey}},[e("h2",{attrs:{id:"swing-单行文本框组件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#swing-单行文本框组件"}},[this._v("#")]),this._v(" swing 单行文本框组件")]),this._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v('\nSwing 中使用 JTextField 类实现一个单行文本框，它允许用户输入单行的文本信息。该类的常用构造方法如下。\nJTextField()：创建一个默认的文本框。\nJTextField(String text)：创建一个指定初始化文本信息的文本框。\nJTextField(int columns)：创建一个指定列数的文本框。\nJTextField(String text,int columns)：创建一个既指定初始化文本信息，又指定列数的文本框。\n\nJTextField 类的常用方法如表 1 所示。\n表1 JTextField类的常用方法\n方法名称\t说明\nDimension getPreferredSize()\t获得文本框的首选大小\nvoid scrollRectToVisible(Rectangle r)\t向左或向右滚动文本框中的内容\nvoid setColumns(int columns)\t设置文本框最多可显示内容的列数\nvoid setFont(Font f)\t设置文本框的字体\nvoid setScrollOffset(int scrollOffset)\t设置文本框的滚动偏移量（以像素为单位）\nvoid setHorizontalAlignment(int alignment)\t设置文本框内容的水平对齐方式\n例 1\n使用 JPrame 组件创建一个窗口，然后向窗口中添加三个 JTextField 文本框。具体实现代码如下：\n纯文本复制\npackage ch17;\nimport java.awt.Font;\nimport javax.swing.JFrame;\nimport javax.swing.JPanel;\nimport javax.swing.JTextField;\npublic class JTextFieldDemo\n{\n    public static void main(String[] agrs)\n    {\n        JFrame frame=new JFrame("Java文本框组件示例");    //创建Frame窗口\n        JPanel jp=new JPanel();    //创建面板\n        JTextField txtfield1=new JTextField();    //创建文本框\n        txtfield1.setText("普通文本框");    //设置文本框的内容\n        JTextField txtfield2=new JTextField(28);\n        txtfield2.setFont(new Font("楷体",Font.BOLD,16));    //修改字体样式\n        txtfield2.setText("指定长度和字体的文本框");\n        JTextField txtfield3=new JTextField(30);\n        txtfield3.setText("居中对齐");\n        txtfield3.setHorizontalAlignment(JTextField.CENTER);    //居中对齐\n        jp.add(txtfield1);\n        jp.add(txtfield2);\n        jp.add(txtfield3);\n        frame.add(jp);\n        frame.setBounds(300,200,400,100);\n        frame.setVisible(true);\n        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n    }\n}\n\n')])])])])}),[],!1,null,null,null);e.default=l.exports}}]);