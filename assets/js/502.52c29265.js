(window.webpackJsonp=window.webpackJsonp||[]).push([[502],{991:function(e,_,t){"use strict";t.r(_);var a=t(6),n=Object(a.a)({},(function(){var e=this,_=e.$createElement,t=e._self._c||_;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h2",{attrs:{id:"sql1"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#sql1"}},[e._v("#")]),e._v(" sql1")]),e._v(" "),t("h2",{attrs:{id:"组件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#组件"}},[e._v("#")]),e._v(" 组件")]),e._v(" "),t("h3",{attrs:{id:"连接器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#连接器"}},[e._v("#")]),e._v(" 连接器")]),e._v(" "),t("div",{staticClass:"language-shell script extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# 注意这边直接在命令行输入密码的方式不推荐")]),e._v("\nmysql -hlocalhost -p3306 -uroot -ph123\n")])])]),t("ol",[t("li",[e._v("命令中的mysql是客户端连接工具")]),e._v(" "),t("li",[e._v("敲入命令回车")])]),e._v(" "),t("ul",[t("li",[e._v("和server建立tcp连接\n"),t("ul",[t("li",[e._v("长连接\n"),t("code",[e._v("mysql_reset_connection()")])]),e._v(" "),t("li",[e._v("短连接")])])]),e._v(" "),t("li",[e._v("连接器验证用户名和密码")]),e._v(" "),t("li",[e._v("验证不通过，Access denied for user。验证通过，查询用户权限")])]),e._v(" "),t("div",{staticClass:"language-shell script extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[e._v("show processlist"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# wait_timeout为客户端空闲超时时间，到达此时间将和服务端断开 28800 s = 8h")]),e._v("\nshow variables like "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v("'%timeout%'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n")])])]),t("h3",{attrs:{id:"查询缓存-mysql-8去除"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#查询缓存-mysql-8去除"}},[e._v("#")]),e._v(" 查询缓存(mysql 8去除)")]),e._v(" "),t("div",{staticClass:"language-shell script extra-class"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# query_cache_type 默认为OFF,可设置为DEMAND,对指定查询语句实施查询缓存")]),e._v("\nshow variables like "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v("'%cache%'")]),e._v("\n")])])]),t("h3",{attrs:{id:"词法、语法分析-做什么"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#词法、语法分析-做什么"}},[e._v("#")]),e._v(" 词法、语法分析(做什么)")]),e._v(" "),t("p",[e._v("语法分析判断用户输入的内容是否符合SQL语法")]),e._v(" "),t("h3",{attrs:{id:"优化器-怎么做"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#优化器-怎么做"}},[e._v("#")]),e._v(" 优化器(怎么做)")]),e._v(" "),t("p",[e._v("多索引决定使用哪个索引\n多表连接，决定使用怎样的执行顺序")]),e._v(" "),t("h3",{attrs:{id:"执行器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#执行器"}},[e._v("#")]),e._v(" 执行器")]),e._v(" "),t("p",[e._v("执行器调用表对应的存储引擎提供的接口取表中符合条件的行，放到结果集中。")]),e._v(" "),t("p",[e._v("对于写操作需要额外的2个模块redo log和binlog")]),e._v(" "),t("h3",{attrs:{id:"binlog"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#binlog"}},[e._v("#")]),e._v(" binlog")]),e._v(" "),t("p",[e._v("Server层的日志模块，适用于所有存储引擎。binlog用于记录逻辑操作，如以sql或者row更改前后的记录来追加到日志中。\n主要用于数据库的备份。")]),e._v(" "),t("ul",[t("li",[e._v("备份策略\n备份频率")])]),e._v(" "),t("h3",{attrs:{id:"redo-log"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#redo-log"}},[e._v("#")]),e._v(" redo log")]),e._v(" "),t("p",[e._v("InnoDB引擎中的日志模块，最初作为插件形式引入MySQL。redo log提升写操作的性能还解决数据库崩溃\nbinlog不能解决的数据不一致问题。为什么redo log可以提升写的性能，之前没有InnoDB时，每次写操作\n都要将内存中的数据直接写会磁盘，而频繁操作IO势必影响性能。使用InnoDB后，可以先记录下对数据操作\n的日志，而不急于写回到磁盘，当数据库空闲或redo日志区满了时再写。这样可以提升数据库写性能。\nredo log实现上以一个文件组，如4个1G大小的文件构成的4G日志区。redo log保持2个指针，write_pos和\ncheck_point。write_pos表示当前写入点，check_point表示可用区终点。当write_pos追上check_point时\n引擎将对check_point后的内容进行擦除，如果4G区域都已用完，那么从头开始擦除。")]),e._v(" "),t("h3",{attrs:{id:"两阶段提交"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#两阶段提交"}},[e._v("#")]),e._v(" 两阶段提交")]),e._v(" "),t("p",[e._v("当使用InnoDB时，redo log和bin log是如何协作以保证数据一致性的呢？")]),e._v(" "),t("div",{staticClass:"language-sql extra-class"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("create")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("table")]),e._v(" student"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("id "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("int")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("primary")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("key")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" age "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("int")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("insert")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("into")]),e._v(" student "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("select")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[e._v("-- 经过词法、语法分析，优化器使用索引，执行器找到id = 1的记录，更新")]),e._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("update")]),e._v(" student "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("set")]),e._v(" age "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" age "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("+")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("1")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("where")]),e._v(" id "),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[e._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n")])])]),t("p",[e._v("我们考量执行"),t("code",[e._v("update student set age = age + 1 where id = 1;")]),e._v("时发生了什么。\n优化器确定使用id索引，执行器调用InnoDB引擎，首先引擎判断id=1的数据是否在内存中，若不在，则从磁盘中查询出id=1的数据，载入到内存中。\n接下来将age字段更改为age+1，写redo log，redo log置为prepare状态，通知Server写binlog，binlog写完通知引擎，引擎将\nredo log置为commit状态。")]),e._v(" "),t("ul",[t("li",[e._v("redo log prepare")]),e._v(" "),t("li",[e._v("write to binlog")]),e._v(" "),t("li",[e._v("redo log commit")])]),e._v(" "),t("p",[e._v("//mysql")]),e._v(" "),t("p",[e._v("今天")]),e._v(" "),t("if",{attrs:{test:"request.statisticsType!=null and request.statisticsType=='day'.toString()"}},[e._v("\nAND `CREATION_TIME` "),e._v(" DATE_FORMAT(NOW(),'%Y-%m-%d 00:00:00')\nAND `CREATION_TIME` "),e._v(" DATE_FORMAT(NOW(),'%Y-%m-%d 23:59:59')\n")]),e._v(" "),t("p",[e._v("昨天")]),e._v(" "),t("if",{attrs:{test:"request.statisticsType!=null and request.statisticsType=='beforeDay'.toString()"}},[e._v("\nAND `CREATION_TIME` "),e._v(" DATE_FORMAT( DATE_SUB(CURDATE(), INTERVAL 1 DAY), '%Y-%m-%d 00:00:00')\nAND `CREATION_TIME` "),e._v(" DATE_FORMAT( DATE_SUB(CURDATE(), INTERVAL 1 DAY), '%Y-%m-%d 23:59:59')\n")]),e._v(" "),t("p",[e._v("本周")]),e._v(" "),t("if",{attrs:{test:"request.statisticsType!=null and request.statisticsType=='week'.toString()"}},[e._v("\nAND `CREATION_TIME` "),e._v(" DATE_FORMAT( DATE_SUB(CURDATE(), INTERVAL WEEKDAY(CURDATE()) DAY), '%Y-%m-%d 00:00:00')\nAND `CREATION_TIME` "),e._v(" DATE_FORMAT( DATE_ADD(SUBDATE(CURDATE(), WEEKDAY(CURDATE())), INTERVAL 6 DAY), '%Y-%m-%d 23:59:59')\n")]),e._v(" "),t("p",[e._v("上周")]),e._v(" "),t("if",{attrs:{test:"request.statisticsType!=null and request.statisticsType=='beforeWeek'.toString()"}},[e._v("\nAND `CREATION_TIME` "),e._v(" DATE_FORMAT( DATE_SUB( DATE_SUB(CURDATE(), INTERVAL WEEKDAY(CURDATE()) DAY), INTERVAL 1 WEEK), '%Y-%m-%d 00:00:00')\nAND `CREATION_TIME` "),e._v(" DATE_FORMAT( SUBDATE(CURDATE(), WEEKDAY(CURDATE()) + 1), '%Y-%m-%d 23:59:59')\n")]),e._v(" "),t("p",[e._v("本月")]),e._v(" "),t("if",{attrs:{test:"request.statisticsType!=null and request.statisticsType=='month'.toString()"}},[e._v("\nAND `CREATION_TIME` "),e._v(" DATE_FORMAT( CURDATE(), '%Y-%m-01 00:00:00')\nAND `CREATION_TIME` "),e._v(" DATE_FORMAT( LAST_DAY(CURDATE()), '%Y-%m-%d 23:59:59')\n")]),e._v(" "),t("p",[e._v("上月")]),e._v(" "),t("if",{attrs:{test:"request.statisticsType!=null and request.statisticsType=='beforeMonth'.toString()"}},[e._v("\nAND `CREATION_TIME` "),e._v(" DATE_FORMAT( DATE_SUB(CURDATE(), INTERVAL 1 MONTH), '%Y-%m-01 00:00:00')\nAND `CREATION_TIME` "),e._v(" DATE_FORMAT( LAST_DAY(DATE_SUB(CURDATE(), INTERVAL 1 MONTH)), '%Y-%m-%d 23:59:59')\n")]),e._v(" "),t("p",[e._v("本年")]),e._v(" "),t("if",{attrs:{test:"request.statisticsType!=null and request.statisticsType=='year'.toString()"}},[e._v("\nAND YEAR(`CREATION_TIME`) = YEAR(NOW())\n")]),e._v(" "),t("p",[e._v("oracle存在索引")]),e._v(" "),t("p",[e._v("select count(1) from user_indexes where index_name=('IDX_CUS_CONSUME_CUR');\nDROP index IDX_CUS_CONSUME_CUR;")]),e._v(" "),t("p",[e._v("pgsql存在索引")]),e._v(" "),t("p",[e._v("select count(1) from pg_class where relkind='i' and relname=('IDX_CUS_CONSUME_CUR');\nDROP index IDX_CUS_CONSUME_CUR;")]),e._v(" "),t("p",[e._v("postgresql判断一个表是否存在：")]),e._v(" "),t("p",[e._v("select count(*) from pg_class where relname = 'tablename';")]),e._v(" "),t("p",[e._v("oracle判断一个表是否存在：")]),e._v(" "),t("p",[e._v("select count(*) from user_tables where table_name =upper('表名');")]),e._v(" "),t("p",[e._v("存在表")]),e._v(" "),t("p",[e._v("select count (*) from information_schema.tables WHERE table_schema = 'table_schema' and table_name = 'table_name';")]),e._v(" "),t("p",[e._v("select * from information_schema.tables WHERE table_schema = 'table_schema' and table_name = 'table_name';")]),e._v(" "),t("p",[e._v("存在字段")]),e._v(" "),t("p",[e._v("select count(*) from information_schema.columns WHERE table_schema = 'table_schema' and table_name = 'table_name' and column_name = 'column_name';")]),e._v(" "),t("p",[e._v("select * from information_schema.columns WHERE table_schema = 'table_schema' and table_name = 'table_name' and column_name = 'column_name';")]),e._v(" "),t("p",[e._v("//orcle判断索引是否存在则删除")]),e._v(" "),t("p",[e._v("declare\nnum1 int;\nbegin\nselect count(*) INTO num1 from all_indexes where index_name='IDX_TESTSSSSSSS';\nif num1=1 then\nExecute immediate'drop index IDX_TESTSSSSSSS';\nExecute immediate'create index IDX_TESTSSSSSSS on T_DC_BILL_CFG(NOTE) indextype is ctxsys.context';\ndbms_output.PUT_LINE('索引已bai经删除');\nelse\ndbms_output.PUT_LINE('索引不存zhi在');\nend if;\nend;")]),e._v(" "),t("p",[e._v("//pgsql判断索引是否存在则删除")]),e._v(" "),t("p",[e._v("DROP index IF EXISTS IDX_CUS_CONSUME_CUR;")]),e._v(" "),t("p",[e._v("oracle")]),e._v(" "),t("p",[e._v("//用户所有表\nSELECT table_name FROM USER_TABLES")]),e._v(" "),t("p",[e._v("//根据库获取表信息\nSELECT table_name,column_name,data_default FROM USER_TAB_COLUMNS where table_name in(SELECT table_name FROM USER_TABLES) ORDER BY table_name;")]),e._v(" "),t("p",[e._v("//根据表获取索引字段\nselect index_name,column_name from user_ind_columns where table_name in(SELECT table_name FROM USER_TABLES) ORDER BY index_name;")]),e._v(" "),t("p",[e._v("//库名下的所有表\nSELECT * FROM USER_TABLES;")]),e._v(" "),t("p",[e._v("//根据表获取建表语句\nSELECT UPPER('dc_stk'),table_name,data_type,data_length,data_default FROM USER_TAB_COLUMNS WHERE TABLE_NAME = 'T_DC_HX_CODE_ITEM'")]),e._v(" "),t("p",[e._v("//根据表获取索引\nselect index_name,column_name from user_ind_columns where table_name = upper('T_HX_STK_IMG')")]),e._v(" "),t("p",[e._v("select table_name,index_name,wm_concat(column_name) from user_ind_columns where table_name = upper('T_HX_STK_IMG')\nGROUP BY table_name,index_name")]),e._v(" "),t("p",[e._v("pgsql")]),e._v(" "),t("p",[e._v("//根据库获取表信息")]),e._v(" "),t("p",[e._v("SELECT\nTABLE_NAME\n,\nCOLUMN_NAME,\ncolumn_default\nFROM\ninformation_schema.COLUMNS\nWHERE TABLE_NAME  !~'[-+]?[0-9]*.?[0-9]+([-+]?[0-9]+)?' AND table_schema='dc_bill'\nGROUP BY\nTABLE_NAME,\nCOLUMN_NAME,\ncolumn_default\nORDER BY\nTABLE_NAME,\nCOLUMN_NAME;")]),e._v(" "),t("p",[e._v("//根据表获取索引")]),e._v(" "),t("p",[e._v("SELECT\ntablename,\nindexname,\nSPLIT_PART( SPLIT_PART(indexdef, '(', 2), ')', 1) AS indexCols\nFROM\npg_indexes\nWHERE\ntablename IN (select tablename from pg_tables where schemaname='dc_stk')\nORDER BY\ntablename,\nindexname;")]),e._v(" "),t("p",[e._v("//库名下的所有表")]),e._v(" "),t("p",[e._v("select tablename from pg_tables where schemaname='dc_bill'")]),e._v(" "),t("p",[e._v("SELECT\nTABLE_NAME,\nCOLUMN_NAME,\ncolumn_default\nFROM\ninformation_schema.COLUMNS\nWHERE TABLE_NAME  !~'[-+]?[0-9]*.?[0-9]+([-+]?[0-9]+)?' AND table_schema='dc_bill'\nGROUP BY\nTABLE_NAME,\nCOLUMN_NAME,\ncolumn_default\nORDER BY\nTABLE_NAME,\nCOLUMN_NAME;")]),e._v(" "),t("p",[e._v("//库名下的所有表")]),e._v(" "),t("p",[e._v("select a.attnum,a.attname,concat_ws('',t.typname,SUBSTRING(format_type(a.atttypid,a.atttypmod) from '(.*)')) as type,d.description from pg_class c, pg_attribute a , pg_type t, pg_description d\nwhere  c.relname = '' and a.attnum>0 and a.attrelid = c.oid and a.atttypid = t.oid and  d.objoid=a.attrelid and d.objsubid=a.attnum或者")]),e._v(" "),t("p",[e._v("SELECT column_name, column_default\nFROM information_schema.columns\nWHERE (table_schema, table_name) = ('dc_hx', 't_hx_price_bill_source')")]),e._v(" "),t("p",[e._v("create function getusername(userid int) returns varchar(32)\nreads sql data  -- 从数据库中读取数据，但不修改数据\nbegin\ndeclare username varchar(32) default '';\nselect name into username from users where id=userid;\nreturn username;\nend;")]),e._v(" "),t("p",[e._v("模糊查询")]),e._v(" "),t("p",[e._v("oralce")]),e._v(" "),t("p",[e._v("instr(G_MODEL, #{G_MODEL,jdbcType=VARCHAR})>0")]),e._v(" "),t("p",[e._v("pgsql")]),e._v(" "),t("p",[e._v("like concat(concat('%', #{COP_G_NO,jdbcType=VARCHAR}), '%')")]),e._v(" "),t("p",[e._v("select count(1) from user_indexes where index_name = upper('IDX_DC_BILL_PUSH_HEAD_SID');\ncreate index IDX_DC_BILL_PUSH_HEAD_SID on T_DC_BILL_PUSH_HEAD(SID);")]),e._v(" "),t("p",[e._v('DROP index IF EXISTS "idx_dc_bill_push_head_sid";\ncreate index IDX_DC_BILL_PUSH_HEAD_SID on "t_dc_bill_push_head" (SID);')]),e._v(" "),t("p",[e._v("拼接sql")]),e._v(" "),t("p",[e._v("mysql")]),e._v(" "),t("p",[e._v("select aa."),t("code",[e._v("name")]),e._v("name , GROUP_CONCAT( money ) money from aa GROUP BY aa."),t("code",[e._v("name")])]),e._v(" "),t("p",[e._v("oracle")]),e._v(" "),t("p",[e._v("SELECT wm_concat(BUSINESS_TYPE)  FROM T_EMS_DEC_LOG GROUP BY TRADE_CODE ;")]),e._v(" "),t("p",[e._v("pgsql\nSELECT array_to_string(ARRAY(SELECT unnest(array_agg(business_type ))),',')  FROM T_EMS_DEC_LOG GROUP BY TRADE_CODE;")]),e._v(" "),t("p",[e._v("sqlserver")]),e._v(" "),t("p",[e._v("SELECT region, STRING_AGG(route_name, ',') AS route_name\nFROM route_details LEFT JOIN ride_details ON route_id = r_id\nWHERE region != '' AND service_date = '2019-09-02' GROUP BY region;")]),e._v(" "),t("p",[e._v("非空判断")]),e._v(" "),t("p",[e._v("NVL(TYPE, 'OTH')")]),e._v(" "),t("p",[e._v("COALESCE(TYPE, 'oth')")]),e._v(" "),t("p",[e._v("isnull(value1,‘0’)")]),e._v(" "),t("p",[e._v("IFNULL(value,'0')")]),e._v(" "),t("p",[e._v("//根据表，索引查找存在")]),e._v(" "),t("p",[e._v("select count(*) from USER_INDEXES where table_name =upper('PERSON') and INDEX_NAME=upper('idx_person_01');\ndrop index idx_person_01;")]),e._v(" "),t("p",[e._v("select count(*) from pg_indexes where tablename =lower('T_EML_EXG_TMP') and INDEXNAME=lower('IDX_EML_EXG_TMP_01');;\ndrop index IDX_EML_EXG_TMP_01;")]),e._v(" "),t("p",[e._v("//创建索引")]),e._v(" "),t("p",[e._v("create index idx_person_01 on PERSON (STATE);")]),e._v(" "),t("p",[e._v("//添加字段")]),e._v(" "),t("p",[e._v("ALTER TABLE T_DC_BILL_TEMPLATE add FEE_MARK VARCHAR2(1);\nALTER TABLE T_DC_BILL_TEMPLATE add FEE_RATE NUMBER(19,5);\nalter table t_dc_bill_list ALTER COLUMN data_mark drop DEFAULT;\nalter table t_dc_bill_template add fee_rate NUMERIC(19,5);\nalter table t_dc_bill_template add insur_curr VARCHAR(3);\ncomment on column t_dc_bill_template.fee_curr\nis '运费币制';\ncomment on column t_dc_bill_template.fee_mark\nis '运费标记，1:率,2:单价,3:总价';\nALTER TABLE T_DC_BILL_TEMPLATE MODIFY INPUT_CODE VARCHAR2(10) NULL;\nALTER TABLE T_DC_BILL_TEMPLATE MODIFY INPUT_NAME VARCHAR2(50) NULL;\nALTER TABLE T_DC_BILL_TEMPLATE MODIFY FEE_RATE NUMBER(16,4);\nALTER TABLE T_DC_BILL_TEMPLATE MODIFY INSUR_RATE NUMBER(16,4);\nALTER TABLE T_DC_BILL_TEMPLATE MODIFY DECLARE_CODE VARCHAR2(10) NULL;")]),e._v(" "),t("p",[e._v("alter table t_dc_bill_template add fee_mark VARCHAR(1);\nalter table t_dc_bill_template add fee_rate NUMERIC(19,5);\ncomment on column t_dc_bill_template.fee_mark\nis '运费标记，1:率,2:单价,3:总价';\ncomment on column t_dc_bill_template.fee_rate\nis '运费／率';\nALTER TABLE t_dc_bill_template ALTER COLUMN input_code DROP NOT NULL;\nALTER TABLE t_dc_bill_template ALTER COLUMN input_name DROP NOT NULL;\nALTER TABLE t_dc_bill_template ALTER COLUMN fee_rate TYPE numeric(16,4) USING fee_rate::numeric;\nALTER TABLE t_dc_bill_template ALTER COLUMN insur_rate TYPE numeric(16,4) USING insur_rate::numeric;\nALTER TABLE t_dc_bill_template ALTER COLUMN other_rate TYPE numeric(16,4) USING other_rate::numeric;")]),e._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code")])])],1)}),[],!1,null,null,null);_.default=n.exports}}]);