(window.webpackJsonp=window.webpackJsonp||[]).push([[453],{942:function(n,t,e){"use strict";e.r(t);var a=e(6),i=Object(a.a)({},(function(){var n=this.$createElement,t=this._self._c||n;return t("ContentSlotsDistributor",{attrs:{"slot-key":this.$parent.slotKey}},[t("h2",{attrs:{id:"swing-列表框组件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#swing-列表框组件"}},[this._v("#")]),this._v(" swing 列表框组件")]),this._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[this._v('列表框与下拉列表的区别不仅仅表现在外观上，当激活下拉列表时，会出现下拉列表框中的内容。但列表框只是在窗体系上占据固定的大小，如果需要列表框具有滚动效果，可以将列表框放到滚动面板中。当用户选择列表框中的某一项时，按住 Shift 键并选择列表框中的其他项目，可以连续选择两个选项之间的所有项目，也可以按住 Ctrl 键选择多个项目。\n\nSwing 中使用 JList 类来表示列表框，该类的常用构造方法如下。\nJList()：构造一个空的只读模型的列表框。\nJList(ListModel dataModel)：根据指定的非 null 模型对象构造一个显示元素的列表框。\nJList(Object[] listData)：使用 listData 指定的元素构造—个列表框。\nJList(Vector<?> listData)：使用 listData 指定的元素构造一个列表框。\n\n上述的第一个构造方法没有参数，使用此方法创建列表框后可以使用 setListData() 方法对列表框的元素进行填充，也可以调用其他形式的构造方法在初始化时对列表框的元素进行填充。常用的元素类型有 3 种，分别是数组、Vector 对象和 ListModel 模型。\n例 1\n使用 JFmme 组件创建一个窗口，然后使用 JList 类创建一个包含3个选项的列表框。具体实现代码如下：\npackage ch17;\nimport javax.swing.JFrame;\nimport javax.swing.JLabel;\nimport javax.swing.JList;\nimport javax.swing.JPanel;\npublic class JListDemo\n{\n    public static void main(String[] args)\n    {\n        JFrame frame=new JFrame("Java列表框组件示例");\n        JPanel jp=new JPanel();    //创建面板\n        JLabel label1=new JLabel("证件类型：");    //创建标签\n        String[] items=new String[]{"身份证","驾驶证","军官证"};\n        JList list=new JList(items);    //创建JList\n        jp.add(label1);\n        jp.add(list);\n        frame.add(jp);\n        frame.setBounds(300,200,400,100);\n        frame.setVisible(true);\n        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n    }\n}\n\n上述代码创建一个包含 3 个元素的字符串数组 items，然后将 items 作为参数来创建列表框。图 1 所示为实例运行后在列表框中的单选和多选效果。\n\n列表框运行效果\n图1 列表框运行效果\n例 2\nJList 组件在默认情况下支持单选和多选，可以通过 setSelectionMode() 方法来限制选择行为。例如，下面的代码将限制只能在列表框中进行单选操作。\npackage ch17;\nimport java.awt.BorderLayout;\nimport javax.swing.JFrame;\nimport javax.swing.JList;\nimport javax.swing.JPanel;\nimport javax.swing.JScrollPane;\nimport javax.swing.ListSelectionModel;\nimport javax.swing.border.EmptyBorder;\npublic class JListDemo1 extends JFrame\n{\n    public JListDemo1()\n    {\n        setTitle("Java列表框组件示例");\n        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);    //设置窗体退出时操作\n        setBounds(100,100,300,200);    //设置窗体位置和大小\n        JPanel contentPane=new JPanel();    //创建内容面板\n        contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));    //设置面板的边框\n        contentPane.setLayout(new BorderLayout(0, 0));    //设置内容面板为边界布局\n        setContentPane(contentPane);    //应用内容面板\n        JScrollPane scrollPane=new JScrollPane();    //创建滚动面板\n        contentPane.add(scrollPane,BorderLayout.CENTER);    //将面板增加到边界布局中央\n        JList list=new JList();\n        //限制只能选择一个元素\n        list.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);\n        scrollPane.setViewportView(list);    //在滚动面板中显示列表\n        String[] listData=new String[12];    //创建一个含有12个元素的数组\n        for (int i=0;i<listData.length;i++)\n        {\n            listData[i]="这是列表框的第"+(i+1)+"个元素~";    //为数组中各个元素赋值\n        }\n        list.setListData(listData);    //为列表填充数据\n    }\n    public static void main(String[] args)\n    {\n        JListDemo1 frame=new JListDemo1();\n        frame.setVisible(true);\n    }\n}\n\n\n')])])])])}),[],!1,null,null,null);t.default=i.exports}}]);