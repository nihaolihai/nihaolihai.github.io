(window.webpackJsonp=window.webpackJsonp||[]).push([[467],{956:function(n,e,a){"use strict";a.r(e);var t=a(6),i=Object(t.a)({},(function(){var n=this.$createElement,e=this._self._c||n;return e("ContentSlotsDistributor",{attrs:{"slot-key":this.$parent.slotKey}},[e("h2",{attrs:{id:"swing-选项卡组件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#swing-选项卡组件"}},[this._v("#")]),this._v(" swing 选项卡组件")]),this._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v('JTabbedPane 类创建的选项卡可以通过单击标题或者图标在选项卡之间进行切换。JTabbedPane 类的常用构造方法如下所示。\nJTabbedPane()：创建一个具有默认 JTabbedPane.TOP 布局的空 TabbedPane。\nJTabbedPane(int tabPlacement)：创建一个空的 TabbedPane，使其具有以下指定选项卡布局中的一种：JTabbedPane.TOP、JTabbedPane.BOTTOM、JTabbedPane.LEFT 或 JTabbedPane.RIGHT。\n\n创建了 JTabbedPane 实例之后，可使用 addTab() 方法和 insertTab() 方法将选项卡/组件添加到 TabbedPane 对象中。选项卡通过对应于添加位置的索引来表示，其中第一个选项卡的索引为 0，最后一个选项卡的索引为选项卡数量减 1。\n\nTabbedPane 使用 SingleSelectionModel 属性来表示选项卡索引集和当前所选择的索引。如果选项卡数量大于 0，则总会有一个被选定的索引，此索引默认被初始化为第一个选项卡；如果选项卡数量为 0，则所选择的索引为 -1。\n\nJTabbedPane类的常用方法如表 1 所示。\n\n表1 JTabbedPane类的常用方法\n方法名称\t说明\nadd(Component component,int index)\t在指定的选项卡索引位置添加一个 component，默认的选项卡\n标题为组件名称\naddTab(String title, Component component)\t添加一个使用 title 作为标题，且没有图标的组件\ngetComponentAt(int index)\t返回 index 位置的组件\ngetSelectedComponent()\t返回此选项卡窗格当前选择的组件\ngetSelectedIndex()\t返回当前选择的此选项卡窗格的索引\ngetTabCount()\t返回此 tabbedPane 的选项卡数\ninsertTab(String title,Icon icon,Component component,\nString tip,int index)\t在 index 位置插入一个组件，该组件通过 title 或 icon（任意一个\n都可以为 null）来表示\nisEnabledAt(int index)\t返回当前是否启用了 index 位置的选项卡\nremove(int index)\t移除对应于指定索引的选项卡和组件\nsetEnabledAt(int index,boolean enabled)\t设置是否启用 index 位置的选项卡\nsetMnemonicAt(int tablndex,int mnemonic)\t设置用于访问指定选项卡的键盘助记符\nsetTitleAt(int index,String title)\t将 index 位置的标题设置为 title，它可以为 null\nsetToolTipTextAt(int index,String toolTipText)\t将 index 位置的工具提示文本设置为 toolTipText，它可以为 null\n选项卡面板和卡片布局不同的是，选项卡面板可以有标签。下面的示例代码创建了一个选项卡面板，并在选项卡面板中添加了一个 JPand 面板。\nJTabbedPane tabbedPane=new JTabbedPane();\nImageIcon icon=new ImageIcon("temp.gif");\nJComponent panel1=makeTextPanel("Panel#1");    //创建一个jPanel容器，容纳其他组件\ntabbedPane.addTab("Tab 1",icon,panel1,"Does nothing");\ntabbedPane.setMnemonicAt(0,KeyEvent.VK_1);    //设置快捷键\n\n该代码段中的第三条语句向选项卡面板 tabbedPane 中添加了一个 panel1 组件（该组件是一个 JPanel 对象），该方法中的第一个参数是选项卡标签文本；第二个参数是 Icon 对象，它作为选项卡标签上的图标；第三个参数是添加到选项卡上的组件；第四个参数是当鼠标指针放在选项卡标签上时出现的提示信息。\n例 1\n使用 JTabbedPane 类创建一个包含 4 个标签的选项卡面板，并分别为每个选项卡填充内容，主要实现过程如下。\n\n(1) 创建一个 TabbedPaneDemo 类并继承 JPanel 父类。\npackage ch18;\nimport javax.swing.JPanel;\nimport javax.swing.*;\nimport java.awt.*;\nimport java.awt.event.KeyEvent;\npublic class TabbedPaneDemo extends JPanel\n{\n    public static void main(String[] args)\n    {\n        JFrame frame=new JFrame("我的电脑 - 属性");\n        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\n        frame.add(new TabbedPaneDemo(),BorderLayout.CENTER);\n        frame.pack();\n        frame.setVisible(true);\n    }\n}\n\n(2) 在构造方法中创建空白选项卡，新建标签，指定标签的文本和图片，以及标签对应的内容面板和快捷访问符。这些代码如下：\npublic TabbedPaneDemo()\n{\n    super(new GridLayout(1,1));\n    JTabbedPane tabbedPane=new JTabbedPane();\n    ImageIcon icon=createImageIcon("tab.jp1g");\n    JComponent panel1=makeTextPanel("计算机名");\n    tabbedPane.addTab("计算机名",icon, panel1,"Does nothing");\n    tabbedPane.setMnemonicAt(0,KeyEvent.VK_1);\n    JComponent panel2=makeTextPanel("硬件");\n    tabbedPane.addTab("硬件",icon,panel2,"Does twice as much nothing");\n    tabbedPane.setMnemonicAt(1,KeyEvent.VK_2);\n    JComponent panel3=makeTextPanel("高级");\n    tabbedPane.addTab("高级",icon,panel3,"Still does nothing");\n    tabbedPane.setMnemonicAt(2,KeyEvent.VK_3);\n    JComponent panel4=makeTextPanel("系统保护");\n    panel4.setPreferredSize(new Dimension(410,50));\n    tabbedPane.addTab("系统保护",icon,panel4,"Does nothing at all");\n    tabbedPane.setMnemonicAt(3,KeyEvent.VK_4);\n    add(tabbedPane);\n}\n\n(3) 编写 makeTextPane() 方法的实现，该方法主要用于创建一个内容面板，并在面板上添加指定的文本内容，具体实现代码如下所示。\nprotected JComponent makeTextPanel(String text)\n{\n    JPanel panel=new JPanel(false);\n    JLabel filler=new JLabel(text);\n    filler.setHorizontalAlignment(JLabel.CENTER);\n    panel.setLayout(new GridLayout(1,1));\n    panel.add(filler);\n    return panel;\n}\n\n(4) 构造方法中用到的 createImageIcon() 方法主要用于加载图片，如果图片不存在则返回 null。\n纯文本复制\nprotected static ImageIcon createImageIcon(String path)\n{\n    java.net.URL imgURL=TabbedPaneDemo.class.getResource(path);\n    if(imgURL!=null)\n    {\n        return new ImageIcon(imgURL);\n    }\n    else\n    {\n        System.err.println("Couldn\'t find file: "+path);\n        return null;\n    }\n}\n\n')])])])])}),[],!1,null,null,null);e.default=i.exports}}]);