(window.webpackJsonp=window.webpackJsonp||[]).push([[644],{1135:function(n,e,t){"use strict";t.r(e);var i=t(6),o=Object(i.a)({},(function(){var n=this.$createElement,e=this._self._c||n;return e("ContentSlotsDistributor",{attrs:{"slot-key":this.$parent.slotKey}},[e("h1",{attrs:{id:"mybatisplus"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#mybatisplus"}},[this._v("#")]),this._v(" mybatisplus")]),this._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v('pom.xml\n<?xml version="1.0" encoding="UTF-8"?>\n<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"\n         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">\n    <modelVersion>4.0.0</modelVersion>\n\n    <groupId>top.lrshuai.plus</groupId>\n    <artifactId>springboot-mybatisplus</artifactId>\n    <version>0.0.1-SNAPSHOT</version>\n    <packaging>jar</packaging>\n\n    <name>springboot-mybatisplus</name>\n    <description>Demo project for Spring Boot</description>\n\n    <parent>\n        <groupId>org.springframework.boot</groupId>\n        <artifactId>spring-boot-starter-parent</artifactId>\n        <version>2.1.0.RELEASE</version>\n        <relativePath/> \x3c!-- lookup parent from repository --\x3e\n    </parent>\n\n    <properties>\n        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>\n        <java.version>1.8</java.version>\n    </properties>\n\n    <dependencies>\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-web</artifactId>\n        </dependency>\n\n        <dependency>\n            <groupId>org.springframework.boot</groupId>\n            <artifactId>spring-boot-starter-test</artifactId>\n            <scope>test</scope>\n        </dependency>\n\n        <dependency>\n            <groupId>org.projectlombok</groupId>\n            <artifactId>lombok</artifactId>\n            <optional>true</optional>\n        </dependency>\n        <dependency>\n            <groupId>com.baomidou</groupId>\n            <artifactId>mybatis-plus-boot-starter</artifactId>\n            <version>3.0.1</version>\n        </dependency>\n\n        <dependency>\n            <groupId>mysql</groupId>\n            <artifactId>mysql-connector-java</artifactId>\n        </dependency>\n\n    </dependencies>\n\n    <build>\n        <plugins>\n            <plugin>\n                <groupId>org.springframework.boot</groupId>\n                <artifactId>spring-boot-maven-plugin</artifactId>\n            </plugin>\n        </plugins>\n    </build>\n\n\n</project>\n\n启动类\npackage top.lrshuai.plus.springbootmybatisplus;\n\nimport org.mybatis.spring.annotation.MapperScan;\nimport org.springframework.boot.SpringApplication;\nimport org.springframework.boot.autoconfigure.SpringBootApplication;\n\n@SpringBootApplication\n@MapperScan("top.lrshuai.plus.springbootmybatisplus.*.mapper")\npublic class SpringbootMybatisplusApplication {\n\n    public static void main(String[] args) {\n        SpringApplication.run(SpringbootMybatisplusApplication.class, args);\n    }\n\n\n}\n代码生成工具\npackage top.lrshuai.plus.springbootmybatisplus;\n\nimport com.baomidou.mybatisplus.core.exceptions.MybatisPlusException;\nimport com.baomidou.mybatisplus.core.toolkit.StringPool;\nimport com.baomidou.mybatisplus.core.toolkit.StringUtils;\nimport com.baomidou.mybatisplus.generator.AutoGenerator;\nimport com.baomidou.mybatisplus.generator.InjectionConfig;\nimport com.baomidou.mybatisplus.generator.config.*;\nimport com.baomidou.mybatisplus.generator.config.po.TableInfo;\nimport com.baomidou.mybatisplus.generator.config.rules.NamingStrategy;\nimport com.baomidou.mybatisplus.generator.engine.FreemarkerTemplateEngine;\n\nimport java.util.ArrayList;\nimport java.util.List;\nimport java.util.Scanner;\n\npublic class CodeGenerator {\n    /**\n     * <p>\n     * 读取控制台内容\n     * </p>\n     */\n    public static String scanner(String tip) {\n        Scanner scanner = new Scanner(System.in);\n        StringBuilder help = new StringBuilder();\n        help.append("请输入" + tip + "：");\n        System.out.println(help.toString());\n        if (scanner.hasNext()) {\n            String ipt = scanner.next();\n            if (StringUtils.isNotEmpty(ipt)) {\n                return ipt;\n            }\n        }\n        throw new MybatisPlusException("请输入正确的" + tip + "！");\n    }\n\n    public static void main(String[] args) {\n        // 代码生成器\n        AutoGenerator mpg = new AutoGenerator();\n\n        // 全局配置\n        GlobalConfig gc = new GlobalConfig();\n        String projectPath = System.getProperty("user.dir");\n        gc.setOutputDir(projectPath + "/src/main/java");\n        gc.setAuthor("jobob");\n        gc.setOpen(false);\n        mpg.setGlobalConfig(gc);\n\n        // 数据源配置\n        DataSourceConfig dsc = new DataSourceConfig();\n        dsc.setUrl("jdbc:mysql://localhost:3306/demo?useUnicode=true&useSSL=false&characterEncoding=utf8&serverTimezone=Hongkong");\n        // dsc.setSchemaName("public");\n        dsc.setDriverName("com.mysql.cj.jdbc.Driver");\n        dsc.setUsername("root");\n        dsc.setPassword("root");\n        mpg.setDataSource(dsc);\n\n        // 包配置\n        PackageConfig pc = new PackageConfig();\n        pc.setModuleName(scanner("模块名"));\n        pc.setParent("top.lrshuai.plus.springbootmybatisplus");\n        mpg.setPackageInfo(pc);\n\n        // 自定义配置\n        InjectionConfig cfg = new InjectionConfig() {\n            @Override\n            public void initMap() {\n                // to do nothing\n            }\n        };\n        List<FileOutConfig> focList = new ArrayList<>();\n        focList.add(new FileOutConfig("/templates/mapper.xml.ftl") {\n            @Override\n            public String outputFile(TableInfo tableInfo) {\n                // 自定义输入文件名称\n                return projectPath + "/src/main/resources/mapper/" + pc.getModuleName()\n                        + "/" + tableInfo.getEntityName() + "Mapper" + StringPool.DOT_XML;\n            }\n        });\n        cfg.setFileOutConfigList(focList);\n        mpg.setCfg(cfg);\n        mpg.setTemplate(new TemplateConfig().setXml(null));\n\n        // 策略配置\n        StrategyConfig strategy = new StrategyConfig();\n        strategy.setNaming(NamingStrategy.underline_to_camel);\n        strategy.setColumnNaming(NamingStrategy.underline_to_camel);\n//        strategy.setSuperEntityClass("top.lrshuai.plus.springbootmybatisplus.common.BaseEntity");\n        strategy.setEntityLombokModel(true);\n        strategy.setRestControllerStyle(true);\n//        strategy.setSuperControllerClass("top.lrshuai.plus.springbootmybatisplus.common.BaseController");\n        strategy.setInclude(scanner("表名"));\n        strategy.setSuperEntityColumns("id");\n        strategy.setControllerMappingHyphenStyle(true);\n        strategy.setTablePrefix(pc.getModuleName() + "_");\n        String isGeneratorPage = scanner("是否生成页面：1 -- 生成，0 -- 不生成，这个模板是我以前用的，现在不适合，要用自己修改模板");\n        // 自定义配置\n        InjectionConfig cfg = new InjectionConfig() {\n            public void initMap() {}\n        };\n        List<FileOutConfig> focList = new ArrayList<>();\n        focList.add(new FileOutConfig("/templates/mapper.xml.ftl") {\n            public String outputFile(TableInfo tableInfo) {\n                return projectPath + "/src/main/resources/mapper/" + pc.getModuleName()+ "/" + tableInfo.getEntityName() + "Mapper" + StringPool.DOT_XML;\n            }\n        });\n\n        //项目相对路径\n        String projectRelative ="/src/main/java/top/lrshuai/timer/"+modelName;\n        if("1".equals(isGeneratorPage)){\n            strategy.setRestControllerStyle(false);\n            focList.add(new FileOutConfig(pageTemplatesPath) {\n                @Override\n                public String outputFile(TableInfo tableInfo) {\n                    return projectPath + projectPageRelativePath +modelName+"/"+tableInfo.getEntityPath()+"_list.html";\n                }\n            });\n\n            focList.add(new FileOutConfig(controlTemplatesPath) {\n                @Override\n                public String outputFile(TableInfo tableInfo) {\n                    return projectPath + projectRelative+"/controller/"+tableInfo.getControllerName()+StringPool.DOT_JAVA;\n                }\n            });\n            focList.add(new FileOutConfig(serviceImplTemplatesPath) {\n                @Override\n                public String outputFile(TableInfo tableInfo) {\n                    return projectPath +projectRelative+"/service/impl/"+tableInfo.getServiceImplName()+StringPool.DOT_JAVA;\n                }\n            });\n            focList.add(new FileOutConfig(serviceTemplatesPath) {\n                @Override\n                public String outputFile(TableInfo tableInfo) {\n                    return projectPath +projectRelative+"/service/"+tableInfo.getServiceName()+StringPool.DOT_JAVA;\n                }\n            });\n\n        }\n        cfg.setFileOutConfigList(focList);\n        mpg.setCfg(cfg);\n        mpg.setTemplate(new TemplateConfig().setXml(null));\n        mpg.setTemplateEngine(new FreemarkerTemplateEngine());\n\n        mpg.setStrategy(strategy);\n        mpg.setTemplateEngine(new FreemarkerTemplateEngine());\n        mpg.execute();\n    }\n\n}\n\n\n\nresource/templetes/codetempleas\npackage com.lrs.core.${package.ModuleName}.controller;\nimport com.lrs.common.annotation.Permission;\nimport com.lrs.common.annotation.PermissionType;\nimport com.lrs.core.${package.ModuleName}.entity.${table.entityName};\nimport com.lrs.core.${package.ModuleName}.service.${table.serviceName};\nimport com.lrs.common.dto.PageDTO;\nimport com.lrs.core.base.BaseController;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.stereotype.Controller;\nimport org.springframework.ui.Model;\nimport org.springframework.web.bind.annotation.GetMapping;\nimport org.springframework.web.bind.annotation.PostMapping;\nimport org.springframework.web.bind.annotation.RequestMapping;\nimport org.springframework.web.bind.annotation.ResponseBody;\n\n\n/**\n * <p>\n *  ${table.comment!} 前端控制器\n * </p>\n *\n * @author rstyro\n * @since ${.now?date}\n */\n@Controller\n@RequestMapping("/${package.ModuleName}/${table.entityPath}")\npublic class ${table.controllerName} extends BaseController {\n\n    private final static String qxurl = "${package.ModuleName}/${table.entityPath}/list";\n\n    @Autowired\n    private ${table.serviceName} ${table.entityPath}Service;\n\n    @GetMapping("/list")\n    public String list(Model model, PageDTO dto) throws Exception {\n        System.out.println(dto);\n        model.addAttribute("list",${table.entityPath}Service.getList(dto));\n        return "page/${package.ModuleName}/${table.entityPath}_list";\n    }\n\n    @PostMapping(value="/add")\n    @ResponseBody\n    @Permission(url = qxurl,type = PermissionType.ADD)\n    public Object add(${table.entityName} item) throws Exception {\n        item.setId(null);\n        return ${table.entityPath}Service.add(item,this.getSession());\n    }\n\n    @PostMapping(value="/edit")\n    @ResponseBody\n    @Permission(url = qxurl,type = PermissionType.EDIT)\n    public Object edit(${table.entityName} item) throws Exception {\n        return ${table.entityPath}Service.edit(item,this.getSession());\n    }\n\n    @PostMapping(value="/del")\n    @ResponseBody\n    @Permission(url = qxurl,type = PermissionType.DEL)\n    public Object del(Long id) throws Exception {\n        return ${table.entityPath}Service.del(id,this.getSession());\n    }\n\n    @GetMapping(value="/query")\n    @ResponseBody\n    @Permission(url = qxurl,type = PermissionType.QUERY)\n    public Object query(Long id) throws Exception {\n        return ${table.entityPath}Service.getDetail(id);\n    }\n\n}\n\npackage ${package.Service};\n\nimport ${package.Entity}.${entity};\nimport ${superServiceClassPackage};\nimport com.lrs.common.constant.ResponseModel;\nimport com.lrs.common.dto.PageDTO;\nimport javax.servlet.http.HttpSession;\n\n/**\n * <p>\n *  ${table.comment!} 服务类\n * </p>\n *\n * @author rstyro\n * @since ${.now?date}\n */\npublic interface ${table.serviceName} extends ${superServiceClass}<${entity}> {\n    public ResponseModel getList(PageDTO dto) throws  Exception;\n    public ResponseModel add(${entity} item, HttpSession session) throws  Exception;\n    public ResponseModel edit(${entity} item, HttpSession session) throws  Exception;\n    public ResponseModel del(Long id, HttpSession session) throws  Exception;\n    public ResponseModel getDetail(Long id) throws  Exception;\n}\n\npackage ${package.ServiceImpl};\n\nimport com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;\nimport com.baomidou.mybatisplus.core.metadata.IPage;\nimport com.baomidou.mybatisplus.extension.plugins.pagination.Page;\nimport com.lrs.common.constant.ApiResultEnum;\nimport com.lrs.common.constant.ResponseModel;\nimport com.lrs.common.dto.PageDTO;\nimport org.springframework.util.StringUtils;\nimport javax.servlet.http.HttpSession;\n\nimport ${package.Entity}.${entity};\nimport ${package.Mapper}.${table.mapperName};\nimport ${package.Service}.${table.serviceName};\nimport ${superServiceImplClassPackage};\nimport org.springframework.stereotype.Service;\n\n\n/**\n * <p>\n * ${table.comment!} 服务实现类\n * </p>\n *\n * @author ${author}\n * @since ${date}\n */\n@Service\npublic class ${table.serviceImplName} extends ${superServiceImplClass}<${table.mapperName}, ${entity}> implements ${table.serviceName}{\n\n    @Override\n    public ResponseModel getList(PageDTO dto) throws Exception {\n        IPage<${entity}> page = new Page<>();\n        if(dto.getPageNo() != null){\n            page.setCurrent(dto.getPageNo());\n        }\n        if(dto.getPageSize() != null){\n            page.setSize(dto.getPageSize());\n        }\n        QueryWrapper<${entity}> queryWrapper = new QueryWrapper();\n    //        if(!StringUtils.isEmpty(dto.getKeyword())){\n    //            queryWrapper.lambda()\n    //                    .like(${entity}::getAuther,dto.getKeyword())\n    //                    .like(${entity}::getContent,dto.getKeyword())\n    //                    .like(${entity}::getTitle,dto.getKeyword());\n    //        }\n        IPage<${entity}> iPage = this.page(page, queryWrapper);\n        return new ResponseModel(ApiResultEnum.SUCCESS,iPage);\n    }\n\n    @Override\n    public ResponseModel add(${entity} item, HttpSession session) throws Exception {\n        this.save(item);\n        return new ResponseModel(ApiResultEnum.SUCCESS,null);\n    }\n\n    @Override\n    public ResponseModel edit(${entity} item, HttpSession session) throws Exception {\n        this.updateById(item);\n        return new ResponseModel(ApiResultEnum.SUCCESS,null);\n    }\n\n    @Override\n    public ResponseModel del(Long id, HttpSession session) throws Exception {\n        this.removeById(id);\n        return new ResponseModel(ApiResultEnum.SUCCESS,null);\n    }\n\n    @Override\n    public ResponseModel getDetail(Long id) throws Exception {\n    ${entity} item = this.getOne(new QueryWrapper<${entity}>().lambda().eq(${entity}::getId,id));\n        return new ResponseModel(ApiResultEnum.SUCCESS,item);\n    }\n}\n\n\napplication.yml\nspring:\n  datasource:\n    url: jdbc:mysql://localhost:3306/demo?useUnicode=true&characterEncoding=utf-8&useSSL=false&serverTimezone=UTC\n    password: root\n    username: root\n    driver-class-name: com.mysql.jdbc.Driver\n\nmybatis-plus:\n  mapper-locations: classpath*:mapper/*.xml\n\n\n# 打印sql 语句\nlogging:\n  level:\n    top.lrshuai.plus.springbootmybatisplus.test.mapper.ShipmentMapper: debug\n\nlogback-spring.xml\n\n<?xml version="1.0" encoding="UTF-8"?>\n<configuration>\n   \x3c!-- 控制台打印日志的相关配置 --\x3e\n   <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">\n      <encoder>\n         <pattern>%d{yyyy-MM-dd HH:mm:ss} [%level] - %m%n</pattern>\n      </encoder>\n      <filter class="ch.qos.logback.classic.filter.LevelFilter">\n         <level>DEBUG</level>\n         <onMatch>ACCEPT</onMatch>\n         <onMismatch>ACCEPT</onMismatch>\n      </filter>\n   </appender>\n\n   <appender name="file" class="ch.qos.logback.core.rolling.RollingFileAppender">\n      <file>log/mybatisplus_info.log</file>\n      <encoder>\n         <pattern>%d{yyyy-MM-dd HH:mm:ss} [%class:%line] - %m%n</pattern>\n      </encoder>\n      <filter class="ch.qos.logback.classic.filter.LevelFilter">\n         <level>INFO</level>\n         <onMatch>ACCEPT</onMatch>\n         <onMismatch>DENY</onMismatch>\n      </filter>\n      <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">\n         <fileNamePattern>log/mybatisplus_info.%d{yyyy-MM-dd}.log</fileNamePattern>\n         <maxHistory>30</maxHistory>\n      </rollingPolicy>\n   </appender>\n\n   <appender name="error" class="ch.qos.logback.core.rolling.RollingFileAppender">\n      <file>log/mybatisplus_error.log</file>\n      <encoder>\n         <pattern>%d{yyyy-MM-dd HH:mm:ss} [%class:%line] - %m%n</pattern>\n      </encoder>\n      <filter class="ch.qos.logback.classic.filter.LevelFilter">\n         <level>ERROR</level>\n         <onMatch>ACCEPT</onMatch>\n         <onMismatch>DENY</onMismatch>\n      </filter>\n      <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">\n         <fileNamePattern>log/mybatisplus_error.%d{yyyy-MM-dd}.log</fileNamePattern>\n         <maxHistory>30</maxHistory>\n      </rollingPolicy>\n   </appender>\n\n   <root level="info">\n      <appender-ref ref="STDOUT" />\n      <appender-ref ref="file" />\n      <appender-ref ref="error" />\n   </root>\n</configuration>\n\n\nconfig \npackage top.lrshuai.plus.springbootmybatisplus.test.config;\n\nimport com.baomidou.mybatisplus.extension.plugins.PaginationInterceptor;\nimport org.mybatis.spring.annotation.MapperScan;\nimport org.springframework.context.annotation.Bean;\nimport org.springframework.context.annotation.Configuration;\nimport org.springframework.transaction.annotation.EnableTransactionManagement;\n\n@EnableTransactionManagement\n@Configuration\n@MapperScan("top.lrshuai.plus.springbootmybatisplus.test.service.*.mapper*")\npublic class MybatisPlusConfig {\n    /**\n     * 分页插件\n     */\n    @Bean\n    public PaginationInterceptor paginationInterceptor() {\n        return new PaginationInterceptor();\n    }\n}\n\ncontroller\npackage top.lrshuai.plus.springbootmybatisplus.test.controller;\n\n\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.web.bind.annotation.GetMapping;\nimport org.springframework.web.bind.annotation.RequestMapping;\nimport org.springframework.web.bind.annotation.RestController;\nimport top.lrshuai.plus.springbootmybatisplus.test.entity.dto.ListDTO;\nimport top.lrshuai.plus.springbootmybatisplus.test.entity.dto.TestDTO;\nimport top.lrshuai.plus.springbootmybatisplus.test.service.IShipmentService;\n\n\n/**\n * <p>\n *  前端控制器\n * </p>\n *\n * @author jobob\n * @since 2018-11-07\n */\n@RestController\n@RequestMapping("/shipment")\npublic class ShipmentController  {\n    @Autowired\n    private IShipmentService iShipmentService;\n\n    @GetMapping("/test")\n    public Object test(TestDTO dto){\n        return  iShipmentService.getList(dto);\n    }\n\n    @GetMapping("/page")\n    public Object pageTest(ListDTO dto){\n        return  iShipmentService.getListByPage(dto);\n    }\n}\n实体类\npackage top.lrshuai.plus.springbootmybatisplus.test.entity;\n\nimport java.io.Serializable;\nimport java.time.LocalDateTime;\n\nimport com.baomidou.mybatisplus.extension.activerecord.Model;\nimport lombok.Data;\nimport lombok.EqualsAndHashCode;\nimport lombok.experimental.Accessors;\n\n/**\n * <p>\n * \n * </p>\n *\n * @author jobob\n * @since 2018-11-07\n */\n@Data\n@Accessors(chain = true)\npublic class Shipment  {\n\n    private static final long serialVersionUID = 1L;\n\n    /**\n     * 物流单号\n     */\n    private String orderNumber;\n\n    /**\n     * 物流状态：1 -- 已揽件，2 -- 正在路上，3 --- 已签收\n     */\n    private Integer status;\n\n    /**\n     * 物流地址\n     */\n    private String address;\n\n    /**\n     * 接收时间\n     */\n    private LocalDateTime receiveDate;\n\n    /**\n     * 是否已删除\n     */\n    private String isDel;\n\n    /**\n     * 创建时间\n     */\n    private LocalDateTime createTime;\n\n}\n@Data\npublic class TestDTO {\n    private String orderName;\n}\n@Data\npublic class ListDTO {\n    private int pageSize;\n    private int pageNo;\n    private Integer status;\n}\n\nservie\n\npackage top.lrshuai.plus.springbootmybatisplus.test.service;\n\nimport com.baomidou.mybatisplus.core.metadata.IPage;\nimport com.baomidou.mybatisplus.extension.plugins.pagination.Page;\nimport top.lrshuai.plus.springbootmybatisplus.test.entity.Shipment;\nimport com.baomidou.mybatisplus.extension.service.IService;\nimport top.lrshuai.plus.springbootmybatisplus.test.entity.dto.ListDTO;\nimport top.lrshuai.plus.springbootmybatisplus.test.entity.dto.TestDTO;\n\n/**\n * <p>\n *  服务类\n * </p>\n *\n * @author jobob\n * @since 2018-11-07\n */\npublic interface IShipmentService extends IService<Shipment> {\n\n    public Object getList(TestDTO dto);\n    public IPage<Shipment> getListByPage(ListDTO dto);\n}\npackage top.lrshuai.plus.springbootmybatisplus.test.service.impl;\n\nimport com.baomidou.mybatisplus.core.conditions.query.QueryWrapper;\nimport com.baomidou.mybatisplus.core.metadata.IPage;\nimport com.baomidou.mybatisplus.core.toolkit.StringUtils;\nimport com.baomidou.mybatisplus.extension.plugins.pagination.Page;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport top.lrshuai.plus.springbootmybatisplus.test.entity.Shipment;\nimport top.lrshuai.plus.springbootmybatisplus.test.entity.dto.ListDTO;\nimport top.lrshuai.plus.springbootmybatisplus.test.entity.dto.TestDTO;\nimport top.lrshuai.plus.springbootmybatisplus.test.mapper.ShipmentMapper;\nimport top.lrshuai.plus.springbootmybatisplus.test.service.IShipmentService;\nimport com.baomidou.mybatisplus.extension.service.impl.ServiceImpl;\nimport org.springframework.stereotype.Service;\n\n/**\n * <p>\n *  服务实现类\n * </p>\n *\n * @author jobob\n * @since 2018-11-07\n */\n@Service\npublic class ShipmentServiceImpl extends ServiceImpl<ShipmentMapper, Shipment> implements IShipmentService {\n\n    @Autowired\n    private ShipmentMapper shipmentMapper;\n\n    @Override\n    public Object getList(TestDTO dto) {\n        QueryWrapper queryWrapper = new QueryWrapper();\n        if(StringUtils.isNotEmpty(dto.getOrderName())){\n            queryWrapper.eq("order_number",dto.getOrderName());\n        }\n        return shipmentMapper.selectList(queryWrapper);\n    }\n\n    @Override\n    public IPage<Shipment> getListByPage(ListDTO dto) {\n        // 不进行 count sql 优化，解决 MP 无法自动优化 SQL 问题，这时候你需要自己查询 count 部分\n        // page.setOptimizeCountSql(false);\n        // 当 total 为非 0 时(默认为 0),分页插件不会进行 count 查询\n        // 要点!! 分页返回的对象与传入的对象是同一个\n        Page<Shipment> page = new Page<>();\n        page.setSize(dto.getPageSize());\n        page.setPages(dto.getPageNo());\n        return shipmentMapper.getListByPage(page,dto.getStatus());\n    }\n\n}\n\nmapping接口\npackage top.lrshuai.plus.springbootmybatisplus.test.mapper;\n\nimport com.baomidou.mybatisplus.core.metadata.IPage;\nimport com.baomidou.mybatisplus.extension.plugins.pagination.Page;\nimport org.apache.ibatis.annotations.Param;\nimport org.springframework.stereotype.Component;\nimport top.lrshuai.plus.springbootmybatisplus.test.entity.Shipment;\nimport com.baomidou.mybatisplus.core.mapper.BaseMapper;\n\n/**\n * <p>\n *  Mapper 接口\n * </p>\n *\n * @author jobob\n * @since 2018-11-07\n */\n@Component\npublic interface ShipmentMapper extends BaseMapper<Shipment> {\n\n    IPage<Shipment> getListByPage(Page page, @Param("status") Integer status);\n}\n\n\n\n')])])])])}),[],!1,null,null,null);e.default=o.exports}}]);