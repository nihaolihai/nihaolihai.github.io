(window.webpackJsonp=window.webpackJsonp||[]).push([[184],{675:function(n,a,e){"use strict";e.r(a);var t=e(6),i=Object(t.a)({},(function(){var n=this,a=n.$createElement,e=n._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[e("h2",{attrs:{id:"java-变量类型"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#java-变量类型"}},[n._v("#")]),n._v(" Java 变量类型")]),n._v(" "),e("p",[n._v("在Java语言中，所有的变量在使用前必须声明。声明变量的基本格式如下：")]),n._v(" "),e("p",[n._v("type identifier [ = value][, identifier [= value] ...] ;\n格式说明：type为Java数据类型。identifier是变量名。可以使用逗号隔开来声明多个同类型变量。")]),n._v(" "),e("p",[n._v("以下列出了一些变量的声明实例。注意有些包含了初始化过程。")]),n._v(" "),e("p",[n._v("int a, b, c;         // 声明三个int型整数：a、 b、c\nint d = 3, e = 4, f = 5; // 声明三个整数并赋予初值\nbyte z = 22;         // 声明并初始化 z\nString s = \"runoob\";  // 声明并初始化字符串 s\ndouble pi = 3.14159; // 声明了双精度浮点型变量 pi\nchar x = 'x';        // 声明变量 x 的值是字符 'x'。\nJava语言支持的变量类型有：")]),n._v(" "),e("p",[n._v("类变量：独立于方法之外的变量，用 static 修饰。\n实例变量：独立于方法之外的变量，不过没有 static 修饰。\n局部变量：类的方法中的变量。\n实例\npublic class Variable{\nstatic int allClicks=0;    // 类变量")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",[e("code",[n._v('String str="hello world";  // 实例变量\n\npublic void method(){\n\n    int i =0;  // 局部变量\n\n}\n')])])]),e("p",[n._v("}\nJava 局部变量\n局部变量声明在方法、构造方法或者语句块中；\n局部变量在方法、构造方法、或者语句块被执行的时候创建，当它们执行完成后，变量将会被销毁；\n访问修饰符不能用于局部变量；\n局部变量只在声明它的方法、构造方法或者语句块中可见；\n局部变量是在栈上分配的。\n局部变量没有默认值，所以局部变量被声明后，必须经过初始化，才可以使用。\n实例 1\n在以下实例中age是一个局部变量。定义在pupAge()方法中，它的作用域就限制在这个方法中。")]),n._v(" "),e("p",[n._v("package com.runoob.test;")]),n._v(" "),e("p",[n._v('public class Test{\npublic void pupAge(){\nint age = 0;\nage = age + 7;\nSystem.out.println("小狗的年龄是: " + age);\n}')]),n._v(" "),e("p",[n._v("public static void main(String[] args){\nTest test = new Test();\ntest.pupAge();\n}\n}\n以上实例编译运行结果如下:")]),n._v(" "),e("p",[n._v("小狗的年龄是: 7\n实例 2\n在下面的例子中 age 变量没有初始化，所以在编译时会出错：")]),n._v(" "),e("p",[n._v("package com.runoob.test;")]),n._v(" "),e("p",[n._v('public class Test{\npublic void pupAge(){\nint age;\nage = age + 7;\nSystem.out.println("小狗的年龄是 : " + age);\n}')]),n._v(" "),e("p",[n._v("public static void main(String[] args){\nTest test = new Test();\ntest.pupAge();\n}\n}\n以上实例编译运行结果如下:")]),n._v(" "),e("p",[n._v("Test.java:4:variable number might not have been initialized\nage = age + 7;\n^\n1 error\n实例变量\n实例变量声明在一个类中，但在方法、构造方法和语句块之外；\n当一个对象被实例化之后，每个实例变量的值就跟着确定；\n实例变量在对象创建的时候创建，在对象被销毁的时候销毁；\n实例变量的值应该至少被一个方法、构造方法或者语句块引用，使得外部能够通过这些方式获取实例变量信息；\n实例变量可以声明在使用前或者使用后；\n访问修饰符可以修饰实例变量；\n实例变量对于类中的方法、构造方法或者语句块是可见的。一般情况下应该把实例变量设为私有。通过使用访问修饰符可以使实例变量对子类可见；\n实例变量具有默认值。数值型变量的默认值是0，布尔型变量的默认值是false，引用类型变量的默认值是null。变量的值可以在声明时指定，也可以在构造方法中指定；\n实例变量可以直接通过变量名访问。但在静态方法以及其他类中，就应该使用完全限定名：ObejectReference.VariableName。\n实例\nEmployee.java 文件代码：\nimport java.io.*;\npublic class Employee{\n// 这个实例变量对子类可见\npublic String name;\n// 私有变量，仅在该类可见\nprivate double salary;\n//在构造器中对name赋值\npublic Employee (String empName){\nname = empName;\n}\n//设定salary的值\npublic void setSalary(double empSal){\nsalary = empSal;\n}"),e("br"),n._v('\n// 打印信息\npublic void printEmp(){\nSystem.out.println("名字 : " + name );\nSystem.out.println("薪水 : " + salary);\n}')]),n._v(" "),e("p",[n._v('public static void main(String[] args){\nEmployee empOne = new Employee("RUNOOB");\nempOne.setSalary(1000.0);\nempOne.printEmp();\n}\n}\n以上实例编译运行结果如下:')]),n._v(" "),e("p",[n._v("$ javac Employee.java\n$ java Employee\n名字 : RUNOOB\n薪水 : 1000.0\n类变量（静态变量）\n类变量也称为静态变量，在类中以 static 关键字声明，但必须在方法之外。\n无论一个类创建了多少个对象，类只拥有类变量的一份拷贝。\n静态变量除了被声明为常量外很少使用，静态变量是指声明为 public/private，final 和 static 类型的变量。静态变量初始化后不可改变。\n静态变量储存在静态存储区。经常被声明为常量，很少单独使用 static 声明变量。\n静态变量在第一次被访问时创建，在程序结束时销毁。\n与实例变量具有相似的可见性。但为了对类的使用者可见，大多数静态变量声明为 public 类型。\n默认值和实例变量相似。数值型变量默认值是 0，布尔型默认值是 false，引用类型默认值是 null。变量的值可以在声明的时候指定，也可以在构造方法中指定。此外，静态变量还可以在静态语句块中初始化。\n静态变量可以通过：ClassName.VariableName的方式访问。\n类变量被声明为 public static final 类型时，类变量名称一般建议使用大写字母。如果静态变量不是 public 和 final 类型，其命名方式与实例变量以及局部变量的命名方式一致。\n实例：")]),n._v(" "),e("p",[n._v("Employee.java 文件代码：\nimport java.io.*;")]),n._v(" "),e("p",[n._v('public class Employee {\n//salary是静态的私有变量\nprivate static double salary;\n// DEPARTMENT是一个常量\npublic static final String DEPARTMENT = "开发人员";\npublic static void main(String[] args){\nsalary = 10000;\nSystem.out.println(DEPARTMENT+"平均工资:"+salary);\n}\n}\n以上实例编译运行结果如下:')]),n._v(" "),e("p",[n._v("开发人员平均工资:10000.0\n注意：如果其他类想要访问该变量，可以这样访问：Employee.DEPARTMENT。")]),n._v(" "),e("p",[n._v("本章节中我们学习了Java的变量类型，下一章节中我们将介绍Java修饰符的使用。")])])}),[],!1,null,null,null);a.default=i.exports}}]);