(window.webpackJsonp=window.webpackJsonp||[]).push([[356],{844:function(o,l,t){"use strict";t.r(l);var n=t(6),a=Object(n.a)({},(function(){var o=this.$createElement,l=this._self._c||o;return l("ContentSlotsDistributor",{attrs:{"slot-key":this.$parent.slotKey}},[l("h2",{attrs:{id:"apollo本地部署详细步骤"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#apollo本地部署详细步骤"}},[this._v("#")]),this._v(" Apollo本地部署详细步骤")]),this._v(" "),l("div",{staticClass:"language- extra-class"},[l("pre",{pre:!0,attrs:{class:"language-text"}},[l("code",[this._v("为了让大家更快地上手了解 Apollo 配置中心，官方准备了一个快速启动的安装包，能够在几分钟内完成本地环境部署，启动 Apollo 配置中心。\n\n本地部署只适用于开发环境，生产环境需要采用分布式部署，教程后面会为大家讲解怎么进行分布式部署。\n1. 环境准备\nApollo 采用 Java 语言开发，部署环境必须安装了 Java，版本要求：Java 1.8+。Apollo 的数据都存储的 Mysql 中，部署环境也需要安装 Mysql 数据库，版本要求：5.6.5+。\n\n快速启动的脚本是 shell 编写的，要有 bash 环境，在 Linux/Mac 下无影响。如果用户是 Windows 环境，需要安装 Git Bash（https://git-for-windows.github.io/）。\n2. 下载快速启动安装包\n快速启动安装包下载地址：。下载之后进行解压，目录结构如图 1 所示：\n\n3. 初始化数据库\nApollo 服务端一共需要两个数据库：ApolloPortalDB 和 ApolloConfigDB。数据库、表的创建和样例数据的 sql 文件都在快速启动安装包的 sql 目录中，只需要导入数据库即可。\n4. 修改数据库连接信息\n数据库连接信息在 demo.sh 中，我们需要把对应的数据库连接信息修改成我们自己安装的地址，这样 Apollo 才能正常启动。\n#apollo config db info\napollo_config_db_url=jdbc:mysql://localhost:3306/ApolloConfigDB?characterEncoding=utf8\napollo_config_db_username=用户名\napollo_config_db_password=密码(如果没有密码, 留空即可)\n\n# apollo portal db info\napollo_portal_db_url=jdbc:mysql://localhost:3306/ApolloPortalDB?characterEncoding=utf8\napollo_portal_db_username=用户名\napollo_portal_db_password=密码(如果没有密码, 留空即可)\n\n5. 启动 Apollo 配置中心\n执行启动脚本：\n./demo.sh start\n\ndemo.sh 脚本会在本地启动 3 个服务，分别使用 8070、8080、8090 端口，请确保这 3 个端口当前没有被使用。\n\n当看到如下输出后，就说明 Apollo 启动成功了。\n==== starting service ====\nService logging file is ./service/apollo-service.log\nStarted [10768]\nWaiting for config service startup.......\nConfig service started. You may visit http://localhost:8080 for service status now!\nWaiting for admin service startup....\nAdmin service started\n==== starting portal ====\nPortal logging file is ./portal/apollo-portal.log\nStarted [10846]\nWaiting for portal startup......\nPortal started. You can visit http://localhost:8070 now!\n\n启动成功之后打开 http://localhost：8070，访问 Web 管理页面。账号：apollo，密码：admin。\n\n\n")])])]),l("p",[l("a",{attrs:{href:"https://github.com/nobodyiam/apollo-build-scripts",target:"_blank",rel:"noopener noreferrer"}},[this._v("apollo"),l("OutboundLink")],1)])])}),[],!1,null,null,null);l.default=a.exports}}]);