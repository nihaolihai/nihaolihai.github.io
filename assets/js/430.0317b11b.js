(window.webpackJsonp=window.webpackJsonp||[]).push([[430],{924:function(e,n,t){"use strict";t.r(n);var r=t(6),s=Object(r.a)({},(function(){var e=this.$createElement,n=this._self._c||e;return n("ContentSlotsDistributor",{attrs:{"slot-key":this.$parent.slotKey}},[n("h2",{attrs:{id:"spring-mvc使用sessionlocaleresolver实现用户自定义切换语言实例"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#spring-mvc使用sessionlocaleresolver实现用户自定义切换语言实例"}},[this._v("#")]),this._v(" Spring MVC使用SessionLocaleResolver实现用户自定义切换语言实例")]),this._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[this._v('在许多成熟的商业软件系统中可以让用户自由切换语言，而不是修改浏览器的语言设置。一旦用户选择了自己需要使用的语言环境，整个系统的语言环境将一直是这种语言环境。\n\nSpring MVC 也可以允许用户自行选择程序语言。本章通过 Web 应用 springMVCDemo09 演示用户自定义切换语言，在该应用中使用 SessionLocaleResolver 实现国际化，具体步骤如下：\n1）创建应用\n创建应用 springMVCDemo09，并导入 Spring MVC 相关的 JAR 包。\n2）创建国际化资源文件\n在 WEB-INF/resource 目录下创建中英文资源文件 messages_en_US.properties 和 messages_zh_CN.properties。\n\nmessages_en_US.properties 的内容如下：\nfirst=first\nsecond=second\nthird={0} third{1}\nlanguage.en=English\nlanguage.cn=Chinese\n\nmessages_zh_CN.properties 的内容如下：\nfirst=\\u7B2C\\u4E00\\u9875\nsecond=\\u7B2C\\u4E8C\\u9875\nthird={0} \\u7B2C\\u4E09\\u9875 {1}\nlanguage.cn=\\u4E2D\\u6587\nlanguage.en=\\u82F1\\u6587\n\n3）创建视图 JSP 文件\n在 WEB-INF/jsp 目录下创建 3 个 JSP 文件，即 first.jsp、second.jsp 和 third.jsp。\n\nfirst.jsp 的代码如下：\n<%@ page language="java" contentType="text/html; charset=UTF-8"\n    pageEncoding="UTF-8"%>\n<%@taglib prefix="spring" uri="http://www.springframework.org/tags"%>\n<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">\n<html>\n<head>\n<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">\n<title>Insert title here</title>\n</head>\n<body>\n    <a href="${pageContext.request.contextPath }/i18nTest?locale=zh_ CN">\n        <spring:message code="language.cn" /> </a> --\n    <a href="${pageContext.request.contextPath }/i18nTest?locale=en_US">\n        <spring:message code="language.en" /> </a>\n    <br>\n    <br>\n    <spring:message code="first" />\n    <br>\n    <br>\n    <a href="${pageContext.request.contextPath }/my/second">\n    <spring:message code="second" /> </a>\n</body>\n</html>\nsecond.jsp 的代码如下：\n<%@ page language="java" contentType="text/html; charset=UTF-8"\n    pageEncoding="UTF-8"%>\n<%@taglib prefix="spring" uri="http://www.springframework.org/tags"%>\n<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">\n<html>\n<head>\n<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">\n<title>Insert title here</title>\n</head>\n<body>\n    <spring:message code="second"/><br><br>\n    <a href="${pageContext.request.contextPath }/my/third">\n        <spring:message code="third" arguments="888,999"/>\n    </a>\n</body>\n</html>\nthird.jsp 的代码如下：\n<%@ page language="java" contentType="text/html; charset=UTF-8"\n    pageEncoding="UTF-8"%>\n<%@taglib prefix="spring" uri="http://www.springframework.org/tags"%>\n<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">\n<html>\n<head>\n<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">\n<title>Insert title here</title>\n</head>\n<body>\n    <spring:message code="third" arguments="888,999" />\n    <br>\n    <br>\n    <a href="${pageContext.request.contextPath }/my/first">\n        <spring:message code="first" />\n    </a>\n</body>\n</html>\n4）创建控制器类\n该应用有两个控制器类，一个是 I18NTestController 处理语言种类选择请求，一个是 MyController 进行页面导航。在 src 目录中创建一个名为 controller 的包，并在该包中创建这两个控制器类。\n\nI18NTestController.java 的代码如下：\npackage controller;\nimport java.util.Locale;\nimport org.springframework.web.bind.annotation.RequestMapping;\n@Controller\npublic class I18NTestController {\n    @RequestMapping("/i18nTest")\n    /**\n     * locale接收请求参数locale值，并存储到session中\n     */\n    public String first(Locale locale) {\n        return "first";\n    }\n}\nMyController 的代码如下：\npackage controller;\nimport org.springframework.stereotype.Controller;\nimport org.springframework.web.bind.annotation.RequestMapping;\n@Controller\n@RequestMapping("/my")\npublic class MyController {\n    @RequestMapping("/first")\n    public String first() {\n        return "first";\n    }\n    @RequestMapping("/second")\n    public String second() {\n        return "second";\n    }\n    @RequestMapping("/third")\n    public String third() {\n        return "third";\n    }\n}\n5）创建配置文件\n在 WEB-INF 目录下创建配置文件 springmvc-servlet.xml 和 web.xml。web.xml 的代码与 Spring MVC 简单应用的相同，这里不再赘述。springmvc-servlet.xml 的代码如下：\n<?xml version="1.0" encoding="UTF-8"?>\n<beans xmlns="http://www.springframework.org/schema/beans"\n    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" \n    xmlns:mvc="http://www.springframework.org/schema/mvc"\n    xmlns:p="http://www.springframework.org/schema/p" \n    xmlns:context="http://www.springframework.org/schema/context"\n    xsi:schemaLocation="\n        http://www.springframework.org/schema/beans\n        http://www.springframework.org/schema/beans/spring-beans.xsd\n        http://www.springframework.org/schema/context\n        http://www.springframework.org/schema/context/spring-context.xsd\n        http://www.springframework.org/schema/mvc\n        http://www.springframework.org/schema/mvc/spring-mvc.xsd">\n    \x3c!-- 使用扫描机制扫描包 --\x3e\n    <context:component-scan base-package="controller" />\n    \x3c!-- 配置视图解析器 --\x3e\n    <bean\n        class="org.springframework.web.servlet.view.InternalResourceViewResolver">\n        <property name="prefix" value="/WEB-INF/jsp/" />\n        <property name="suffix" value=".jsp" />\n    </bean>\n    \x3c!-- 国际化操作拦截器，如果采用基于Session/Cookie则必须配置 --\x3e\n    <mvc:interceptors>\n        <bean class="org.springframework.web.servlet.i18n.LocaleChangeInterceptor" />\n    </mvc:interceptors>\n    \x3c!-- 存储区域设置信息 --\x3e\n    <bean id="localeResolver"\n        class="org.springframework.web.servlet.i18n.SessionLocaleResolver">\n        <property name="defaultLocale" value="zh_CN"></property>\n    </bean>\n    \x3c!-- 加载国际化资源文件 --\x3e\n    <bean id="messageSource"\n        class="org.springframework.context.support.ReloadableResourceBundleMessageSource">\n        \x3c!-- <property name="basename" value="classpath:messages" /> --\x3e\n        <property name="basename" value="/WEB-INF/resource/messages" />\n    </bean>\n</beans>\n6）发布应用并测试\n首先将 springMVCDemo09 应用发布到 Tomcat 服务器并启动 Tomcat 服务器，然后通过地址“http://localhost:8080/springMVCDemo08/my/first”\n\n')])])])])}),[],!1,null,null,null);n.default=s.exports}}]);