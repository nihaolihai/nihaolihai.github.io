(window.webpackJsonp=window.webpackJsonp||[]).push([[503],{993:function(_,n,E){"use strict";E.r(n);var t=E(6),T=Object(t.a)({},(function(){var _=this.$createElement,n=this._self._c||_;return n("ContentSlotsDistributor",{attrs:{"slot-key":this.$parent.slotKey}},[n("h2",{attrs:{id:"sql2"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#sql2"}},[this._v("#")]),this._v(" sql2")]),this._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[this._v("oracel\n\nDECLARE\n    CURSOR TABLE_LIST IS\n        select upper('t_hx_calc_extend_ele') as PARTITION_TABLE_NAME FROM \ndual; \n    CURSOR LIST_PARTITION IS\n       select distinct ems_No||'_'||lpad(dcr_times,2,'00') as cav_mark from \nt_hx_dcr_list order by cav_mark ;\n    TABLE_ROW TABLE_LIST%ROWTYPE;\n    LIST_ROW  LIST_PARTITION%ROWTYPE;\n    MAIN_PART INTEGER;\nBEGIN\n    for TABLE_ROW in TABLE_LIST LOOP\n            for LIST_ROW in LIST_PARTITION LOOP\n                    MAIN_PART := 0;\n                    SELECT COUNT(1)\n                    INTO MAIN_PART\n                    FROM user_tab_partitions\n                    WHERE TABLE_NAME  = TABLE_ROW.PARTITION_TABLE_NAME\n                     AND PARTITION_NAME = LIST_ROW.cav_mark;\n                    IF MAIN_PART = 0  then\n                    EXECUTE immediate 'alter table '|| \nTABLE_ROW.PARTITION_TABLE_NAME ||' add partition ' || LIST_ROW.cav_mark || ' \nvalues (''' || LIST_ROW.cav_mark || ''')';\n                    commit;\n                    end IF;\n             end LOOP;\n     end LOOP;\nEND;\n\npgsql\n\ndo\n$$\ndeclare\n    TABLE_LIST CURSOR FOR\n   \t\tselect 't_hx_calc_extend_ele' as PARTITION_TABLE_NAME; \n    LIST_PARTITION CURSOR FOR\n\t\tselect distinct ems_No||'_'||lpad(dcr_times::text,2,'00') as \ncav_mark from t_hx_dcr_list order by cav_mark ;\n    TABLE_ROW record;\n    LIST_ROW  record;\n    MAIN_PART INTEGER;\nbegin\n    for TABLE_ROW in TABLE_LIST\n        LOOP\n            for LIST_ROW in LIST_PARTITION\n                LOOP\n                    MAIN_PART := 0 ;\n\t\t\t\t\tSELECT count(1)\n\t\t\t\t\tINTO MAIN_PART\n                    FROM (SELECT relid::text, parentrelid::text, level FROM \npg_partition_tree(TABLE_ROW.PARTITION_TABLE_NAME)) t\n                    WHERE parentrelid = lower(TABLE_ROW.PARTITION_TABLE_NAME)\n                    AND relid = lower(concat\n(TABLE_ROW.PARTITION_TABLE_NAME,'_',LIST_ROW.cav_mark))\n                    and level = 1;\n                    if MAIN_PART = 0 then\n                         EXECUTE(concat('create table if not exists ', lower\n(concat(TABLE_ROW.PARTITION_TABLE_NAME,'_',LIST_ROW.cav_mark)), \n                            ' partition of \n',TABLE_ROW.PARTITION_TABLE_NAME,'(cav_mark) for values in (''', \nLIST_ROW.cav_mark, ''')'));\n                    end if;\n                END LOOP;\n\t\tEND LOOP;\nEND $$;\n\n//不足补位\n\nLPAD(user_name,3,'o')\n\n调存储过程\n CALL dc_bill.p_bill_list_impchk('367ab65a-2255-43df-a8aa-\nfe8291757d17','3223940025','E2325B0A0008','1','bcf6b4d2-d2ce-4106-bd54-\nc0e210995216','0','3','','');\n\noracel\n\nCREATE OR REPLACE PROCEDURE P_ENTRY_RET_LOG(P_BILL_LIST_NO IN VARCHAR2, --编号\nP_SID          IN VARCHAR2, --的SID\nP_STATUS       IN VARCHAR2, --状态\nP_TRADE_CODE   IN VARCHAR2, --编码\nP_EMS_NO       IN VARCHAR2, --号\nP_RET_CODE     IN OUT VARCHAR2, --错误状态码\nP_RET_STR      IN OUT VARCHAR2 --错误信息\n) IS\nP_HEAD_ID VARCHAR2(40);\nP_COUNT   INT;\nP_FLAG    VARCHAR2(1);\nBEGIN\nSELECT HEAD_ID\nINTO P_HEAD_ID\nFROM T_DC_DEC_RESPONSES_ENTRY\nWHERE SID = P_SID;\nSELECT COUNT(1)\nINTO P_COUNT\nFROM T_DC_DEC_LOG_DETAIL\nWHERE HEAD_ID = P_HEAD_ID;\nIF P_COUNT > 0 THEN\nP_FLAG := '1';\nELSE\nP_FLAG := '0';\nEND IF;\n\n--IF NOT EXISTS(SELECT 1 FROM T_DC_DEC_LOG G WHERE G.BUSINESS_TYPE='ENTRY' AND \nG.STATUS=P_STATUS AND G.BILL_LIST_NO=P_BILL_LIST_NO AND G.APPR_DATE='')\nINSERT INTO T_DC_DEC_LOG\n(SID,\nTRADE_CODE,\nEMS_NO,\nBUSINESS_TYPE,\nDECLARE_TYPE,\nSTATUS,\nNOTE,\nINSERT_TIME,\nINSERT_USER,\nAPPR_DATE,\nBILL_LIST_NO,\nHEAD_ID,\nFLAG,\nTIME_STAMP)\nSELECT SYS_GUID,\nP_TRADE_CODE,\nP_EMS_NO,\n'ENTRY',\n'1',\nP_STATUS,\nNVL(FAIL_INFO,NVL2(P_STATUS, NOTE, '未返回审批状态')),\nINSERT_TIME,\nINSERT_USER,\nAPPR_DATE,\nP_BILL_LIST_NO,\nP_HEAD_ID,\nP_FLAG,\nS_DEC_LOG.nextval\nFROM T_DC_DEC_RESPONSES_ENTRY E\nWHERE SID = P_SID\nAND  NOT EXISTS(SELECT 1 FROM T_DC_DEC_LOG G WHERE G.BUSINESS_TYPE='ENTRY' AND \nG.STATUS=P_STATUS AND G.BILL_LIST_NO=P_BILL_LIST_NO AND G.APPR_DATE = \nE.APPR_DATE);\nCOMMIT;\n\nEXCEPTION\nWHEN OTHERS THEN\nP_RET_CODE := SQLCODE;\nP_RET_STR  := SUBSTR(SQLERRM, 1, 200);\nROLLBACK;\nEND;\n\nplpgsql\n\nCREATE OR REPLACE PROCEDURE p_entry_ret_log(\np_bill_list_no text,\np_sid text,\np_status text,\np_trade_code text,\np_ems_no text,\nINOUT p_ret_code text,\nINOUT p_ret_str text)\nLANGUAGE 'plpgsql'\n\nAS $BODY$\n/* 编号 */\n/* 表的SID */\n/* 状态 */\n/* 编码 */\n/* 错误状态码 */\n/* 错误信息 */\nDECLARE\np_head_id CHARACTER VARYING(40);\np_count NUMERIC(38);\np_flag CHARACTER VARYING(1);\nv_isok boolean;\nBEGIN\nv_isok := true;\nSELECT\nhead_id\nINTO STRICT p_head_id\nFROM t_dc_dec_responses_entry\nWHERE sid = p_sid;\nSELECT\nCOUNT(1)\nINTO STRICT p_count\nFROM t_dc_dec_log_detail\nWHERE head_id = p_head_id;\n\nIF p_count > 0 THEN\np_flag := '1';\nELSE\np_flag := '0';\nEND IF;\n/* IF NOT EXISTS(SELECT 1 FROM T_DC_DEC_LOG G WHERE G.BUSINESS_TYPE='ENTRY' \nAND G.STATUS=P_STATUS AND G.BILL_LIST_NO=P_BILL_LIST_NO AND G.APPR_DATE='') */\nINSERT INTO t_dc_dec_log (sid, trade_code, ems_no, business_type, \ndeclare_type, status, note, insert_time, insert_user, appr_date, bill_list_no, \nhead_id, flag, time_stamp)\nSELECT\nsys_guid(), p_trade_code, p_ems_no, 'ENTRY', '1', p_status, COALESCE\n(fail_info,\nCASE\nWHEN p_status IS NOT NULL THEN note\nELSE '返回审批状态'\nEND), insert_time, insert_user, appr_date, p_bill_list_no, p_head_id, p_flag, \nnextval('s_dec_log')\nFROM t_dc_dec_responses_entry AS e\nWHERE sid = p_sid AND NOT EXISTS (SELECT\n1\nFROM t_dc_dec_log AS g\nWHERE g.business_type = 'ENTRY' AND g.status = p_status AND g.bill_list_no = \np_bill_list_no AND g.appr_date = e.appr_date);\nEXCEPTION\nWHEN others THEN\nv_isok := false;\np_ret_code := SQLSTATE::TEXT;\np_ret_str := substr(SQLERRM, 1, 200);\nROLLBACK;\nIF (v_isok) THEN\nCOMMIT;\nEND IF;\nEND;\n$BODY$;\n\n\noracel\n\n/* 校验是否包含特殊字符：\\t   \\n   \\r */\n\nUPDATE T_DC_BILL_LIST_TMP TMP\nSET TMP.TEMP_FLAG   = '1',\nTMP.TEMP_REMARK = TMP.TEMP_REMARK || '|规格型号中含有非法字符，如：\\n '\nWHERE TMP.TEMP_OWNER = P_TEMP_OWNER\nAND instr(G_MODEL,'\\n',1,1) > 0\nAND EXISTS\n(SELECT 1\nFROM T_DC_BILL_CODE_ITEM\nWHERE TYPE ='MODEL_ERR_CHAR' AND CODE ='\\n' AND ROWNUM = 1);\nUPDATE T_DC_BILL_LIST_TMP TMP\nSET TMP.TEMP_FLAG   = '1',\nTMP.TEMP_REMARK = TMP.TEMP_REMARK || '|规格型号中含有非法字符，如：\\t '\nWHERE TMP.TEMP_OWNER = P_TEMP_OWNER\nAND instr(G_MODEL,'\\t',1,1) > 0\nAND EXISTS\n(SELECT 1\nFROM T_DC_BILL_CODE_ITEM\nWHERE TYPE ='MODEL_ERR_CHAR' AND CODE ='\\t' AND ROWNUM = 1);\nUPDATE T_DC_BILL_LIST_TMP TMP\nSET TMP.TEMP_FLAG   = '1',\nTMP.TEMP_REMARK = TMP.TEMP_REMARK || '|规格型号中含有非法字符，如：\\r '\nWHERE TMP.TEMP_OWNER = P_TEMP_OWNER\nAND instr(G_MODEL,'\\r',1,1) > 0\nAND EXISTS\n(SELECT 1\nFROM T_DC_BILL_CODE_ITEM\nWHERE TYPE ='MODEL_ERR_CHAR' AND CODE ='\\r' AND ROWNUM = 1);\n\npgsql\n\nUPDATE t_dc_bill_list_tmp AS tmp\nSET temp_flag = '1', temp_remark = concat_ws('', tmp.temp_remark,'|规格型号中\n含有非法字符，如：\\t ')\nWHERE tmp.temp_owner ='bcf6b4d2-d2ce-4106-bd54-c0e210995216'\nand position('\\t' in g_model ) > 0\nAND EXISTS (SELECT 1\nFROM t_dc_bill_code_item\nwhere type='MODEL_ERR_CHAR' and code ='\\t' limit 1);\n\n\nUPDATE t_dc_bill_list_tmp AS tmp\nSET temp_flag = '1', temp_remark = concat_ws('', tmp.temp_remark,'|规格型号中\n含有非法字符，如：\\n ')\nWHERE tmp.temp_owner ='bcf6b4d2-d2ce-4106-bd54-c0e210995216'\nand position('\\n' in g_model ) > 0\nAND EXISTS (SELECT 1\nFROM t_dc_bill_code_item\nwhere type='MODEL_ERR_CHAR' and code ='\\n' limit 1);\n\nUPDATE t_dc_bill_list_tmp AS tmp\nSET temp_flag = '1', temp_remark = concat_ws('', tmp.temp_remark,'|规格型号中\n含有非法字符，如：\\r ')\nWHERE tmp.temp_owner ='bcf6b4d2-d2ce-4106-bd54-c0e210995216'\nand position('\\r' in g_model ) > 0\nAND EXISTS (SELECT 1\nFROM t_dc_bill_code_item\nwhere type='MODEL_ERR_CHAR' and code ='\\r' limit 1);\n\noracel\n\nalter table T_HX_CALC_BALANCE add DIFF_AMT NUMBER(18,5) DEFAULT 0;\ncomment on column T_HX_CALC_BALANCE.DIFF_AMT is '差异价值';\n\npgsql\n\nalter table t_hx_calc_balance add diff_amt numeric(18,5) DEFAULT 0;\ncomment on column t_hx_calc_balance.diff_amt\nis '差异价值';\n\n//null\n\nnvl(CHANGE_TIMES,0)\n\ncoalesce(CHANGE_TIMES,0);\n\nUPDATE t_hx_calc_balance t1\nSET DIFF_AMT =ROUND((F_XDO_NVL(t1.THE_RES_QTY,0.0)-F_XDO_NVL\n(t1.ACTUAL_STOCK_QTY,0.0))*(\nSELECT F_XDO_NVL(t2.AVG_PRICE,0.0)\nFROM T_HX_PRICE_AVG t2\nWHERE t2.TRADE_CODE='3223942061'\nAND t2.CAV_MARK='E232519A0027_10_01'\nAND t2.ARC_MARK='E232519A0027_10_01'\nAND t2.COP_G_NO = t1.COP_G_NO\nAND t2.CAV_MARK=t1.CAV_MARK\n),5)\nWHERE t1.EMS_NO ='E232519A0027'\nAND t1.CAV_MARK = 'E232519A0027_10_01'\nAND exists (\nSELECT 1\nFROM T_HX_PRICE_AVG t3\nWHERE t3.TRADE_CODE='3223942061'\nAND t3.CAV_MARK='E232519A0027_10_01'\nAND t3.ARC_MARK='E232519A0027_10_01'\nAND t3.COP_G_NO = t1.COP_G_NO\nAND t3.CAV_MARK=t1.CAV_MARK\n)\n\nupdate t_ems_cus_push_consume c\nset (img_g_name, img_unit, img_g_no) =\n(select g_name, unit, g_no\nfrom t_ems_cus_push_img i\nwhere i.task_id = c.task_id\nand i.cop_g_no = c.cop_img_no\nand i.task_id = '3b13a216-9df9-4913-9289-8734dbb63fca')\nwhere c.task_id = '3b13a216-9df9-4913-9289-8734dbb63fca'\nand exists(select 1\nfrom t_ems_cus_push_img i\nwhere i.task_id = c.task_id\nand i.cop_g_no = c.cop_img_no\nand i.task_id = '3b13a216-9df9-4913-9289-8734dbb63fca');\nupdate t_ems_cus_push_consume c\nset (exg_g_name, exg_unit, exg_g_no) =\n(select g_name, unit, g_no\nfrom t_ems_cus_push_exg e\nwhere e.task_id = c.task_id\nand e.cop_g_no = c.cop_exg_no\nand e.task_id = '3b13a216-9df9-4913-9289-8734dbb63fca')\nwhere c.task_id = '3b13a216-9df9-4913-9289-8734dbb63fca'\nand exists(select 1\nfrom t_ems_cus_push_exg e\nwhere e.task_id = c.task_id\nand e.cop_g_no = c.cop_exg_no\nand e.task_id ='3b13a216-9df9-4913-9289-8734dbb63fca');\n            \ncreate or replace view t_hx_stk_gather\n(sid, trade_code, ems_no, dcr_times, cav_mark, cop_g_no, g_no, g_name, unit, \nimg_stk_qty, exg_cvrt_qty,\nwip_cvrt_qty, wast_cvrt_qty, img_rd_qty, exg_rd_cvrt_qty, actl_qty, \ninsert_time, insert_user, update_time,\nupdate_user, ip_img_qty, ip_cvrt_qty)\nas\nSELECT t_hx_stk_gather.sid,\nt_hx_stk_gather.trade_code,\nt_hx_stk_gather.ems_no,\nt_hx_stk_gather.dcr_times,\nt_hx_stk_gather.cav_mark,\nt_hx_stk_gather.cop_g_no,\nt_hx_stk_gather.g_no,\nt_hx_stk_gather.g_name,\nt_hx_stk_gather.unit,\nt_hx_stk_gather.img_stk_qty,\nt_hx_stk_gather.exg_cvrt_qty,\nt_hx_stk_gather.wip_cvrt_qty,\nt_hx_stk_gather.wast_cvrt_qty,\nt_hx_stk_gather.img_rd_qty,\nt_hx_stk_gather.exg_rd_cvrt_qty,\nt_hx_stk_gather.actl_qty,\nt_hx_stk_gather.insert_time,\nt_hx_stk_gather.insert_user,\nt_hx_stk_gather.update_time,\nt_hx_stk_gather.update_user,\nt_hx_stk_gather.ip_img_qty,\nt_hx_stk_gather.ip_cvrt_qty\nFROM dc_stk.t_hx_stk_gather;  \n\nupdate T_EMS_CUS_CONSUME_PRE_TMP TMP\nset TMP.TEMP_FLAG   = 2,\nTMP.TEMP_REMARK = TMP.TEMP_REMARK || '|料号被锁定'\nwhere exists (select 1\nfrom T_EMS_CUS_IMG_LOCK P\nwhere P.TRADE_CODE = '3223940025'\nAND TMP.COP_IMG_NO = P.COP_G_NO\nAND P.EMS_NO = 'E232519A0010'\nAND P.TYPE='1')\nAND TEMP_OWNER = '342342ee3432423'\nAND TRADE_CODE = '3223940025'\nAND EMS_NO = 'E232519A0010';\n\nUPDATE T_EMS_CUS_CONSUME_PRE_TMP TMP\nSET TMP.TEMP_FLAG   = 1,\nTMP.TEMP_REMARK = TMP.TEMP_REMARK || '|存在都相同的多行数据'\nWHERE EXISTS (SELECT 1\nFROM T_EMS_CUS_CONSUME_PRE_TMP TMP1\nWHERE TMP1.TEMP_OWNER = P_TEMP_OWNER\nAND TMP.COP_EXG_NO = TMP1.COP_EXG_NO\nAND TMP.COP_IMG_NO = TMP1.COP_IMG_NO\nAND TMP.EXG_VERSION = TMP1.EXG_VERSION\nAND TMP.SID <> TMP1.SID)\nAND TEMP_OWNER = P_TEMP_OWNER;\n\nUPDATE T_EMS_CUS_IMG_PRE_TMP TMP\nSET TMP.TEMP_FLAG   = 1,\nTMP.TEMP_REMARK = TMP.TEMP_REMARK || '|导入文件中号重复!'\nWHERE EXISTS (SELECT 1\nFROM T_EMS_CUS_IMG_PRE_TMP TMP1\nWHERE TMP1.TEMP_OWNER = P_TEMP_OWNER\nAND TMP1.COP_G_NO = TMP.COP_G_NO\nGROUP BY COP_G_NO\nHAVING COUNT(COP_G_NO) &gt; 1)\nAND TEMP_OWNER = P_TEMP_OWNER;\n\nSELECT\nCOALESCE(MAX(tmp.serial_no + 1), 1)\nINTO STRICT p_serial_no\nFROM t_dc_bill_list AS tmp\nWHERE tmp.head_id = p_head_sid\nand tmp.trade_code = p_trade_code\nand tmp.ems_no = p_ems_no;\n/* 循环将所有序号为空的数据进行赋值 */\n\nFOR cur_rec IN cur_bill_list LOOP\nUPDATE t_dc_bill_list_tmp\nSET serial_no = p_serial_no\nWHERE CURRENT OF CUR_BILL_LIST;\n/* 自增+1 */\np_serial_no := p_serial_no + 1;\nEND LOOP;\n\nUPDATE t_hx_bill_confirm T\nSET note = '删单'\nWHERE T.cav_mark = #{cavMark}\nAND T.flag = '1'\nand exists(\nselect 1 from t_dc_bill_head b\nWHERE\nb.trade_code=#{tradeCode}\nAND b.ems_no = #{emsNo}\nAND T.bill_list_no = b.bill_list_no\nND b.status = 'DL'\n)\n\nUPDATE t_hx_bill_confirm T\nSET note = '删单'\nfrom t_dc_bill_head b\nWHERE  T.cav_mark = #{cavMark}\nAND T.flag = '1'\nAND b.trade_code=#{tradeCode}\nAND b.ems_no = #{emsNo}\nAND T.bill_list_no = b.bill_list_no\nAND b.status = 'DL';\n\n\nif(StringUtils.isNotEmpty(model.getEmsType())){\n            if(model.getEmsType().equals(\"1\")){\n                model.setDcrCycle(new BigDecimal(180));\n            }else if(model.getEmsType().equals(\"5\")){\n                model.setDcrCycle(null);\n            }\n        }\n\n\nALTER TABLE dc_ems.t_ems_cus_head_pre ALTER COLUMN dcr_cycle DROP DEFAULT;\n\n//分析表\n\nanalyze table t_hx_calc_exg_con_sum compute statistics\n\nanalyze t_hx_calc_exg_con_sum\n\n")])])])])}),[],!1,null,null,null);n.default=T.exports}}]);