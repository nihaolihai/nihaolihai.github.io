(window.webpackJsonp=window.webpackJsonp||[]).push([[122],{613:function(n,t,a){"use strict";a.r(t);var r=a(6),o=Object(r.a)({},(function(){var n=this,t=n.$createElement,a=n._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[a("h2",{attrs:{id:"java-number-math-类"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#java-number-math-类"}},[n._v("#")]),n._v(" Java Number & Math 类")]),n._v(" "),a("p",[n._v("一般地，当需要使用数字的时候，我们通常使用内置数据类型，如：byte、int、long、double 等。")]),n._v(" "),a("p",[n._v("实例\nint a = 5000;\nfloat b = 13.65f;\nbyte c = 0x4a;\n然而，在实际开发过程中，我们经常会遇到需要使用对象，而不是内置数据类型的情形。为了解决这个问题，Java 语言为每一个内置数据类型提供了对应的包装类。")]),n._v(" "),a("p",[n._v("所有的包装类（Integer、Long、Byte、Double、Float、Short）都是抽象类 Number 的子类。")]),n._v(" "),a("p",[n._v("包装类\t基本数据类型\nBoolean\tboolean\nByte\tbyte\nShort\tshort\nInteger\tint\nLong\tlong\nCharacter\tchar\nFloat\tfloat\nDouble\tdouble\nJava Number类")]),n._v(" "),a("p",[n._v("这种由编译器特别支持的包装称为装箱，所以当内置数据类型被当作对象使用的时候，编译器会把内置类型装箱为包装类。相似的，编译器也可以把一个对象拆箱为内置类型。Number 类属于 java.lang 包。")]),n._v(" "),a("p",[n._v("下面是一个使用 Integer 对象的实例：")]),n._v(" "),a("p",[n._v("Test.java 文件代码：\npublic class Test{")]),n._v(" "),a("p",[n._v("public static void main(String[] args){\nInteger x = 5;\nx =  x + 10;\nSystem.out.println(x);\n}\n}\n以上实例编译运行结果如下：")]),n._v(" "),a("p",[n._v("15\n当 x 被赋为整型值时，由于x是一个对象，所以编译器要对x进行装箱。然后，为了使x能进行加运算，所以要对x进行拆箱。")]),n._v(" "),a("p",[n._v("Java Math 类\nJava 的 Math 包含了用于执行基本数学运算的属性和方法，如初等指数、对数、平方根和三角函数。")]),n._v(" "),a("p",[n._v("Math 的方法都被定义为 static 形式，通过 Math 类可以在主函数中直接调用。")]),n._v(" "),a("p",[n._v("Test.java 文件代码：\npublic class Test {"),a("br"),n._v("\npublic static void main (String []args)"),a("br"),n._v("\n{"),a("br"),n._v('\nSystem.out.println("90 度的正弦值：" + Math.sin(Math.PI/2));'),a("br"),n._v('\nSystem.out.println("0度的余弦值：" + Math.cos(0));'),a("br"),n._v('\nSystem.out.println("60度的正切值：" + Math.tan(Math.PI/3));'),a("br"),n._v('\nSystem.out.println("1的反正切值： " + Math.atan(1));'),a("br"),n._v('\nSystem.out.println("π/2的角度值：" + Math.toDegrees(Math.PI/2));'),a("br"),n._v("\nSystem.out.println(Math.PI);"),a("br"),n._v("\n}"),a("br"),n._v("\n}\n以上实例编译运行结果如下：")]),n._v(" "),a("p",[n._v("90 度的正弦值：1.0\n0度的余弦值：1.0\n60度的正切值：1.7320508075688767\n1的反正切值： 0.7853981633974483\nπ/2的角度值：90.0\n3.141592653589793\nNumber & Math 类方法\n下面的表中列出的是 Number & Math 类常用的一些方法：")]),n._v(" "),a("p",[n._v("序号\t方法与描述\n1\txxxValue()\n将 Number 对象转换为xxx数据类型的值并返回。\n2\tcompareTo()\n将number对象与参数比较。\n3\tequals()\n判断number对象是否与参数相等。\n4\tvalueOf()\n返回一个 Number 对象指定的内置数据类型\n5\ttoString()\n以字符串形式返回值。\n6\tparseInt()\n将字符串解析为int类型。\n7\tabs()\n返回参数的绝对值。\n8\tceil()\n返回大于等于( >= )给定参数的的最小整数，类型为双精度浮点型。\n9\tfloor()\n返回小于等于（<=）给定参数的最大整数 。\n10\trint()\n返回与参数最接近的整数。返回类型为double。\n11\tround()\n它表示四舍五入，算法为 Math.floor(x+0.5)，即将原来的数字加上 0.5 后再向下取整，所以，Math.round(11.5) 的结果为12，Math.round(-11.5) 的结果为-11。\n12\tmin()\n返回两个参数中的最小值。\n13\tmax()\n返回两个参数中的最大值。\n14\texp()\n返回自然数底数e的参数次方。\n15\tlog()\n返回参数的自然数底数的对数值。\n16\tpow()\n返回第一个参数的第二个参数次方。\n17\tsqrt()\n求参数的算术平方根。\n18\tsin()\n求指定double类型参数的正弦值。\n19\tcos()\n求指定double类型参数的余弦值。\n20\ttan()\n求指定double类型参数的正切值。\n21\tasin()\n求指定double类型参数的反正弦值。\n22\tacos()\n求指定double类型参数的反余弦值。\n23\tatan()\n求指定double类型参数的反正切值。\n24\tatan2()\n将笛卡尔坐标转换为极坐标，并返回极坐标的角度值。\n25\ttoDegrees()\n将参数转化为角度。\n26\ttoRadians()\n将角度转换为弧度。\n27\trandom()\n返回一个随机数。\nMath 的 floor,round 和 ceil 方法实例比较\n参数\tMath.floor\tMath.round\tMath.ceil\n1.4\t1\t1\t2\n1.5\t1\t2\t2\n1.6\t1\t2\t2\n-1.4\t-2\t-1\t-1\n-1.5\t-2\t-1\t-1\n-1.6\t-2\t-2\t-1\nfloor,round 和 ceil 实例：\npublic class Main {"),a("br"),n._v("\npublic static void main(String[] args) {"),a("br"),n._v("\ndouble[] nums = { 1.4, 1.5, 1.6, -1.4, -1.5, -1.6 };"),a("br"),n._v("\nfor (double num : nums) {"),a("br"),n._v("\ntest(num);"),a("br"),n._v("\n}"),a("br"),n._v("\n}")]),n._v(" "),a("p",[n._v("private static void test(double num) {"),a("br"),n._v('\nSystem.out.println("Math.floor(" + num + ")=" + Math.floor(num));'),a("br"),n._v('\nSystem.out.println("Math.round(" + num + ")=" + Math.round(num));'),a("br"),n._v('\nSystem.out.println("Math.ceil(" + num + ")=" + Math.ceil(num));'),a("br"),n._v("\n}"),a("br"),n._v("\n}\n以上实例执行输出结果为：")]),n._v(" "),a("p",[n._v("Math.floor(1.4)=1.0\nMath.round(1.4)=1\nMath.ceil(1.4)=2.0\nMath.floor(1.5)=1.0\nMath.round(1.5)=2\nMath.ceil(1.5)=2.0\nMath.floor(1.6)=1.0\nMath.round(1.6)=2\nMath.ceil(1.6)=2.0\nMath.floor(-1.4)=-2.0\nMath.round(-1.4)=-1\nMath.ceil(-1.4)=-1.0\nMath.floor(-1.5)=-2.0\nMath.round(-1.5)=-1\nMath.ceil(-1.5)=-1.0\nMath.floor(-1.6)=-2.0\nMath.round(-1.6)=-2\nMath.ceil(-1.6)=-1.0")])])}),[],!1,null,null,null);t.default=o.exports}}]);